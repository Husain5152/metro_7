# Translation of OpenERP Server.
# This file contains the translation of the following modules:
#	* metro_mrp_drawing
#
msgid ""
msgstr ""
"Project-Id-Version: OpenERP Server 7.0-20130413-232416\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-06-02 02:42+0000\n"
"PO-Revision-Date: 2017-06-02 02:42+0000\n"
"Last-Translator: <>\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: \n"
"Plural-Forms: \n"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,help:metro_mrp_drawing.purchase_form_action2
msgid "<p class=\"oe_view_nocontent_create\">\n"
"                Click to create a quotation that will be converted into a purchase order.\n"
"              </p><p>\n"
"                Use this menu to search within your purchase orders by\n"
"                references, supplier, products, etc. For each purchase order,\n"
"                you can track the related discussion with the supplier, control\n"
"                the products received and control the supplier invoices.\n"
"              </p>\n"
"            "
msgstr "<p class=\"oe_view_nocontent_create\">\n"
"                Click to create a quotation that will be converted into a purchase order.\n"
"              </p><p>\n"
"                Use this menu to search within your purchase orders by\n"
"                references, supplier, products, etc. For each purchase order,\n"
"                you can track the related discussion with the supplier, control\n"
"                the products received and control the supplier invoices.\n"
"              </p>\n"
"            "

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_update_do_bom
#: model:ir.model,name:metro_mrp_drawing.model_update_do_bom
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_update_do_bom
msgid "Update DO BOM"
msgstr "Update DO BOM"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:mrp.production:0
msgid "Generate Tasks"
msgstr "Generate Tasks"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,bom_log:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_bom_log
msgid "Error Log"
msgstr "Error Log"

#. module: metro_mrp_drawing
#: field:drawing.order.line,P_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_P_prepare_qty
msgid "P P"
msgstr "P P"

#. module: metro_mrp_drawing
#: view:mo.select.do.wizard:0
msgid "Please select the big sub assembly you want to add into MO"
msgstr "Please select the big sub assembly you want to add into MO"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Print List"
msgstr "Print List"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_location_id
msgid "Location"
msgstr "库位"

#. module: metro_mrp_drawing
#: selection:print.pr.mfg.wizard,type:0
msgid "Print Missing Parts Sorted By Supplier"
msgstr "Print Missing Parts Sorted By Supplier"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_drawing_order
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mrp_production_drawing_order_ids
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_drawing_order
#: view:missing.erpno:0
#: view:mrp.production:0
#: field:mrp.production,drawing_order_ids:0
msgid "Drawing Orders"
msgstr "图纸号"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mo_select_do_wizard_selected_big_subassembly_ids
#: field:mo.select.do.wizard,selected_big_subassembly_ids:0
msgid "Selected Big Sub Assembly"
msgstr "Selected 部件总成"

#. module: metro_mrp_drawing
#: field:pur.req.line,sale_product_ids:0
msgid "Unit IDs"
msgstr "Unit IDs"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_po_send_email_wizard_attach_dxf
#: field:po.send.email.wizard,attach_dxf:0
msgid "Attach DXF?"
msgstr "Attach DXF?"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "先"
msgstr "先"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_brief:0
#: report:task.group.by_team_full:0
msgid "制表人"
msgstr "制表人"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_req_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_po_pur_req_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_req_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_set_pr_line_supplier_wizard_pr_id
msgid "Purchase Requisition"
msgstr "采购申请"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_creator
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_user_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_creator
#: field:project.mfgtask.report,creator:0
#: field:project.task.completion,user_id:0
#: field:warehouse.task.report,creator:0
msgid "Create User"
msgstr "Create User"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_message_unread
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_message_unread
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_message_unread
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_message_unread
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_message_unread
msgid "Unread Messages"
msgstr "未读消息"

#. module: metro_mrp_drawing
#: field:drawing.order,confirm_date:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_confirm_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_date_confirm
#: field:pur.req,date_confirm:0
msgid "Confirm Date"
msgstr "Confirm Date"

#. module: metro_mrp_drawing
#: field:force.close.task.wizard,close_task:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_force_close_task_wizard_close_task
msgid "Close Task?"
msgstr "Close Task?"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_engineer
#: field:pur.req,engineer:0
msgid "Engineer"
msgstr "工程师"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.purchase_form_from_mfg_action
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_purchase_form_from_mfg
msgid "MFG PO"
msgstr "生产部采购订单"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "MATERIAL 材料"
msgstr "MATERIAL 材料"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_pur_req_canada
msgid "Purchase Requisitions - Canada"
msgstr "Purchase Requisitions - Canada"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_total_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_total_qty
#: field:pr.generate.po.wizard.po,total_quantity:0
#: field:project.task.completion,total_qty:0
#: view:pur.req:0
msgid "Total Quantity"
msgstr "总数量"

#. module: metro_mrp_drawing
#: field:drawing.order.line,part_type:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_part_type
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_product_part_type
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_part_type
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_part_type
#: field:product.product,part_type:0
#: field:pur.req.line,part_type:0
msgid "Part Type"
msgstr "产品 类别"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "Merge requisition"
msgstr "Merge requisition"

#. module: metro_mrp_drawing
#: view:fix.pdf.dxf.corrupt.wizard:0
msgid "Select pdf and dxf files to upload"
msgstr "Select pdf and dxf files to upload"

#. module: metro_mrp_drawing
#: field:drawing.order,bom_file_name:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_bom_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_update_do_bom_bom_file_name
#: field:update.do.bom,bom_file_name:0
msgid "BOM File Name"
msgstr "BOM File Name"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_mo_id
#: field:project.mfgtask.report.line,mo_id:0
#: view:pur.req:0
msgid "MO"
msgstr "MO"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "工程图纸名DO:"
msgstr "工程图纸名DO:"

#. module: metro_mrp_drawing
#: field:drawing.order,message_summary:0
#: field:missing.erpno,message_summary:0
#: field:project.mfgtask.report,message_summary:0
#: field:pur.req.reserve,message_summary:0
#: field:warehouse.task.report,message_summary:0
msgid "Summary"
msgstr "Summary"

#. module: metro_mrp_drawing
#: field:confirm.set.pr.line.supplier.wizard,supplier_id:0
#: field:pur.req,supplier_id:0
#: field:set.pr.line.supplier.wizard,supplier_id:0
msgid "Supplier"
msgstr "Supplier"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_work_order_cnc
msgid "CNC Work Order"
msgstr "CNC工单"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Hide lines already have supplier"
msgstr "隐藏已有供应商项"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "STANDARD 规格"
msgstr "STANDARD 规格"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_link_po_to_pr_wizard_pr_id
#: field:link.po.to.pr.wizard,pr_id:0
msgid "Purchase requisition"
msgstr "Purchase requisition"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:29
#, python-format
msgid "Print Warehouse Missing list"
msgstr "Print Warehouse Missing list"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "Description/Notes:"
msgstr "Description/Notes:"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_confirm_set_pr_line_supplier_wizard_supplier_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_supplier_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_supplier_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_supplier_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_set_pr_line_supplier_wizard_supplier_id
#: field:pr.generate.po.wizard.po,supplier_id:0
#: field:pur.req.line,supplier_id:0
msgid "Supplier"
msgstr "供应商"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:project.task:0
#: view:pur.req:0
msgid "ALL PART TYPES"
msgstr "ALL PART TYPES"

#. module: metro_mrp_drawing
#: field:warehouse.task.report,mo_id:0
msgid "Manufacture Order"
msgstr "生产订单"

#. module: metro_mrp_drawing
#: field:drawing.order.line,W_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_W_prepare_qty
msgid "W P"
msgstr "W P"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_missing_erpno
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_mfg_missing_erpno
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_missing_erpno
#: view:missing.erpno:0
msgid "Missing ERP NO"
msgstr "未知料号"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_pr_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_history_pur_req_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move1_pur_req_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move2_pur_req_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move3_pur_req_id
#: field:pr.generate.po.wizard,pr_id:0
#: field:pur.req.history,pur_req_id:0
#: field:pur.req.move1,pur_req_id:0
#: field:pur.req.move2,pur_req_id:0
#: field:pur.req.move3,pur_req_id:0
msgid "Purchase Request"
msgstr "Purchase Request"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: selection:drawing.order,state:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,state:0
msgid "Ready"
msgstr "Ready"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "六"
msgstr "六"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_product_width
#: field:product.product,width:0
msgid "Width"
msgstr "Width"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.purchase_form_from_canada_action
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_purchase_form_from_canada
msgid "Canada PO"
msgstr "加拿大采购单"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_move_po_lines
#: view:move.po.line.wizard:0
msgid "Move Lines"
msgstr "Move Lines"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: view:pur.req:0
#: selection:pur.req.line,part_type:0
msgid "CD"
msgstr "CD"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_material
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_material
msgid "Material"
msgstr "物料"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "Please select PR to link, OK to continue?"
msgstr "Please select PR to link, OK to continue?"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "DEADLINE 截止日期:"
msgstr "DEADLINE 截止日期:"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "PARTS DONE"
msgstr "PARTS DONE"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move3_lines
#: field:pur.req,move3_lines:0
msgid "Move3 Lines"
msgstr "Move3 Lines"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_task_partial_transfer_wizard
msgid "Task Partial Transfer Wizard"
msgstr "Task Partial Transfer Wizard"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_report_id
#: field:project.mfgtask.report.line,report_id:0
msgid "Project Task Report"
msgstr "Project Task Report"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Incoming Shipments & Invoices"
msgstr "收货发货及开票"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,mo_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_mo_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mo_select_do_wizard_mo_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_mo_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_mo_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_mo_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_mo_id
#: field:mo.select.do.wizard,mo_id:0
#: field:project.task.completion,mo_id:0
#: view:pur.req:0
#: field:pur.req,mo_id:0
#: field:purchase.order,mo_id:0
msgid "Manufacturer Order"
msgstr "来自产品及订单号"

#. module: metro_mrp_drawing
#: help:drawing.order,purchms_type_qty:0
msgid "PMS – Sheet Material"
msgstr "PMS – Sheet Material"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,supplier_prod_id:0
msgid "Supplier Product ID"
msgstr "Supplier Product ID"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_send_email_wizard_attach_dxf
#: field:pr.send.email.wizard,attach_dxf:0
msgid "Attach DXF"
msgstr "Attach DXF"

#. module: metro_mrp_drawing
#: view:confirm.set.pr.line.supplier.wizard:0
#: view:drawing.order:0
#: view:fix.pdf.dxf.corrupt.wizard:0
#: view:force.close.task.wizard:0
#: view:generate.pr.wizard:0
#: view:generate.pr.xls.wizard:0
#: view:link.po.to.pr.wizard:0
#: view:mo.select.do.wizard:0
#: view:move.po.line.wizard:0
#: view:mrp.production:0
#: view:po.send.email.wizard:0
#: view:pr.generate.po.wizard:0
#: view:pr.send.email.wizard:0
#: view:print.pr.mfg.wizard:0
#: view:project.mfgtask.report:0
#: view:pur.req.group:0
#: view:set.pr.line.supplier.wizard:0
#: view:task.deadline.wizard:0
#: view:task.partial.transfer.wizard:0
#: view:update.do.bom:0
#: view:upload.multi.drawings:0
#: view:upload.multi.dxfs:0
#: view:warehouse.task.report:0
msgid "Cancel"
msgstr "Cancel"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ps_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ps_prepare_qty
msgid "Ps P"
msgstr "Ps P"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Created Not Ordered"
msgstr "Created Not Ordered"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_progress
#: view:pur.req:0
#: field:pur.req,progress:0
msgid "Progress"
msgstr "整个请购单完成百分比"

#. module: metro_mrp_drawing
#: view:generate.pr.wizard:0
#: view:generate.pr.xls.wizard:0
msgid "Please fill the delivery date and warehouse"
msgstr "Please fill the delivery date and warehouse"

#. module: metro_mrp_drawing
#: field:drawing.order.line,erp_no:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_line_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move1_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move2_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move3_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_erp_no
#: field:missing.erpno.line,erp_no:0
#: report:pr.mfg.form:0
#: report:pr.mfg.part:0
#: field:pur.req.line,erp_no:0
#: field:pur.req.move1,erp_no:0
#: field:pur.req.move2,erp_no:0
#: field:pur.req.move3,erp_no:0
#: field:warehouse.task.report.line,erp_no:0
msgid "ERP #"
msgstr "ERP #"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_task_group_by_team_full
msgid "Tasks Done by Team Full"
msgstr "Tasks Done by Team Full"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "Are you sure you want to merge these orders?"
msgstr "Are you sure you want to merge these orders?"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "QTY"
msgstr "QTY"

#. module: metro_mrp_drawing
#: field:drawing.order,purchcd_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchcd_type_qty
msgid "CD Qty"
msgstr "CD Qty"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp1
#: field:project.mfgtask.report,emp1:0
msgid "Employee #1"
msgstr "Employee #1"

#. module: metro_mrp_drawing
#: field:drawing.order.line,first_step:0
#: field:drawing.order.line,last_step:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_first_step
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_last_step
msgid "Last Step"
msgstr "Last Step"

#. module: metro_mrp_drawing
#: field:drawing.order.line,thickness:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_thickness
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_thickness
#: field:purchase.order.line,thickness:0
msgid "Thickness"
msgstr "Thickness"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "项目名称"
msgstr "项目名称"

#. module: metro_mrp_drawing
#: view:confirm.set.pr.line.supplier.wizard:0
#: view:link.po.to.pr.wizard:0
msgid "OK"
msgstr "OK"

#. module: metro_mrp_drawing
#: view:pur.req.line:0
msgid "Standard"
msgstr "Standard"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_ids
msgid "Purchase Order Lines"
msgstr "采购单行"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Generate All PO"
msgstr "Generate All PO"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "请购单 PURCHASE REQUEST"
msgstr "请购单 PURCHASE REQUEST"

#. module: metro_mrp_drawing
#: view:pur.req.line:0
msgid "Procurement PR"
msgstr "Procurement PR"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_warehouse_task_print_missing
msgid "Print Missing"
msgstr "Print Missing"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: selection:pur.req.line,part_type:0
msgid "ASM"
msgstr "ASM"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:32
#, python-format
msgid "Set Deadline for selected"
msgstr "Set Deadline for selected"

#. module: metro_mrp_drawing
#: field:drawing.order.line,product_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_product_id
msgid "ERP Part"
msgstr "ERP Part"

#. module: metro_mrp_drawing
#: view:fix.pdf.dxf.corrupt.wizard:0
#: field:fix.pdf.dxf.corrupt.wizard,corrupted_pdf_lines:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_fix_pdf_dxf_corrupt_wizard_corrupted_pdf_lines
msgid "Corrupted PDF lines"
msgstr "Corrupted PDF lines"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move2_lines
#: field:pur.req,move2_lines:0
msgid "Move2 Lines"
msgstr "Move2 Lines"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: selection:drawing.order,state:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,state:0
#: view:project.mfgtask.report:0
#: selection:project.mfgtask.report,state:0
#: selection:project.mfgtask.report.line,state:0
#: view:project.task.completion:0
#: view:warehouse.task.report:0
msgid "Confirmed"
msgstr "Confirmed"

#. module: metro_mrp_drawing
#: view:fix.pdf.dxf.corrupt.wizard:0
#: field:fix.pdf.dxf.corrupt.wizard,corrupted_dxf_lines:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_fix_pdf_dxf_corrupt_wizard_corrupted_dxf_lines
msgid "Corrupted DXF lines"
msgstr "Corrupted DXF lines"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_po_send_email_wizard_add_watermark
#: field:po.send.email.wizard,add_watermark:0
msgid "Add watermark?"
msgstr "Add watermark?"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Ready"
msgstr "准备好"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "Merge Requisition"
msgstr "Merge Requisition"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_mfgtask_report
#: view:project.mfgtask.report:0
msgid "Project Mfg Task Report"
msgstr "Project Mfg Task Report"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_need_to_order_count
#: field:pur.req,need_to_order_count:0
msgid "Need to order count"
msgstr "需采购总量"

#. module: metro_mrp_drawing
#: field:drawing.order,req_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_req_id
msgid "Generated PR"
msgstr "Generated PR"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_warehouse_task_report_line
msgid "Warehouse Task Report Line"
msgstr "仓库任务 Report Line"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: view:project.mfgtask.report:0
#: view:project.task.completion:0
#: view:warehouse.task.report:0
msgid "Canceled"
msgstr "Canceled"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_dept_id
msgid "Team"
msgstr "组"

#. module: metro_mrp_drawing
#: selection:print.pr.mfg.wizard,type:0
msgid "Print Missing Parts"
msgstr "Print Missing Parts"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_missing_erpno
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_line_missing_id
#: view:missing.erpno:0
#: field:missing.erpno.line,missing_id:0
msgid "Missing ERP No"
msgstr "未知料号"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_fix_pdf_dxf
msgid "Fix PDF and DXF Corrupted files"
msgstr "Fix PDF and DXF Corrupted files"

#. module: metro_mrp_drawing
#: field:drawing.order.line,P_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_P_done_qty
msgid "P D"
msgstr "P D"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "PO Created"
msgstr "采购单创立"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Fc_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Fc_need_qty
msgid "Fc N"
msgstr "Fc N"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "MO #"
msgstr "MO #"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "MEMBERS 组员"
msgstr "MEMBERS 组员"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_po_send_email_wizard
#: view:po.send.email.wizard:0
msgid "Send PO Email Wizard"
msgstr "Send PO Email Wizard"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "Link PO to PR"
msgstr "Link PO to PR"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_req_all
msgid "PR All"
msgstr "所有请购单"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_reserve
msgid "Purchase Requisition Reserve"
msgstr "Purchase Requisition Reserve"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "日"
msgstr "日"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_type
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_type
msgid "Type"
msgstr "类型"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_date_create
#: field:project.task.completion,date_create:0
msgid "Create Date"
msgstr "Create Date"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_serial_no
#: field:project.mfgtask.report.line,serial_no:0
msgid "Serial #"
msgstr "Serial #"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From PR"
msgstr "From PR"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "Part Number 零件编号"
msgstr "Part Number 零件编号"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_is_full_pr
#: field:pur.req,is_full_pr:0
msgid "Is Full PR or Sub-Assembly?"
msgstr "Is Full PR or Sub-Assembly?"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_task_group_by_employee_brief
msgid "Tasks Done by Employee Brief"
msgstr "Tasks Done by Employee Brief"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "PROJECT 项目名称:"
msgstr "PROJECT 项目名称:"

#. module: metro_mrp_drawing
#: field:drawing.order.line,dxf_download:0
#: field:drawing.order.line,dxf_file:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_dxf_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_dxf_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_dxf_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_dxf_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_dxf_file
#: field:pur.req.line,dxf_download:0
#: field:pur.req.line,dxf_file:0
#: field:purchase.order.line,dxf_file:0
msgid "Drawing DXF"
msgstr "Drawing DXF"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "Cancel Task"
msgstr "取消任务"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_state
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_status
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_state
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_state
msgid "Status"
msgstr "状态"

#. module: metro_mrp_drawing
#: field:upload.multi.dxfs,note:0
msgid "Note"
msgstr "Note"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_time_end
#: field:project.mfgtask.report.line,time_end:0
msgid "Time Finish"
msgstr "Time Finish"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "ERP Part Number"
msgstr "ERP 工程料号"

#. module: metro_mrp_drawing
#: selection:print.pr.mfg.wizard,type:0
msgid "Print All"
msgstr "Print All"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_pur_req_mfg
msgid "Purchase Requisitions - MFG"
msgstr "Purchase Requisitions - MFG"

#. module: metro_mrp_drawing
#: selection:project.task.line,state:0
#: selection:warehouse.task.report,state:0
#: selection:warehouse.task.report.line,state:0
msgid "Done"
msgstr "Done"

#. module: metro_mrp_drawing
#: view:product.product:0
msgid "Unit of Measure"
msgstr "计量单位"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Mi_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Mi_done_qty
msgid "Mi D"
msgstr "Mi D"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "天离开"
msgstr "天离开"

#. module: metro_mrp_drawing
#: view:warehouse.task.report:0
msgid "Search Warehouse Task Report"
msgstr "Search Warehouse Task Report"

#. module: metro_mrp_drawing
#: field:fix.pdf.dxf.corrupt.wizard,pdf_attachment_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_fix_pdf_dxf_corrupt_wizard_pdf_attachment_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_upload_multi_drawings_attachment_ids
#: field:upload.multi.drawings,attachment_ids:0
msgid "Drawings"
msgstr "Drawings"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "Lines will only be merged if:"
msgstr "Lines will only be merged if:"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,help:metro_mrp_drawing.mfg_product_normal_action
msgid "<p class=\"oe_view_nocontent_create\">\n"
"                Click to define a new product.\n"
"              </p><p>\n"
"                You must define a product for everything you buy or sell,\n"
"                whether it's a physical product, a consumable or service.\n"
"              </p>\n"
"            "
msgstr "<p class=\"oe_view_nocontent_create\"> \n"
"               单击定义一个新产品\n"
"              </p><p>\n"
"                你必须为买卖的的每一样都定义一个产品。可以是物理产品、消耗品、或者服务。\n"
"              </p>\n"
"            "

#. module: metro_mrp_drawing
#: field:generate.pr.wizard,warehouse_id:0
#: field:generate.pr.xls.wizard,warehouse_id:0
msgid "Warehouse"
msgstr "Warehouse"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.metro_purchase_purchase_dept
msgid "Purchase Dept"
msgstr "采购部"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "单价"
msgstr "单价"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ma_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ma_done_qty
msgid "Ma D"
msgstr "Ma D"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "描述"
msgstr "描述"

#. module: metro_mrp_drawing
#: field:drawing.order.line,is_dxf_fixed:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_is_dxf_fixed
msgid "This dxf is fixed auto"
msgstr "This dxf is fixed auto"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Generate Drawing Orders"
msgstr "Generate Drawing Orders"

#. module: metro_mrp_drawing
#: field:drawing.order,message_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_message_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_message_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_message_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_message_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_message_ids
#: field:missing.erpno,message_ids:0
#: field:project.mfgtask.report,message_ids:0
#: field:pur.req.reserve,message_ids:0
#: field:warehouse.task.report,message_ids:0
msgid "Messages"
msgstr "Messages"

#. module: metro_mrp_drawing
#: help:drawing.order,purchm_type_qty:0
msgid "All Materials (PMC, PMS & PML)"
msgstr "All Materials (PMC, PMS & PML)"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_lines
#: field:missing.erpno,lines:0
msgid "Missing Lines"
msgstr "Missing Lines"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.act_pur_req_po_all
msgid "Generate All Purchase Order"
msgstr "Generate All Purchase Order"

#. module: metro_mrp_drawing
#: field:drawing.order,done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_done_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_done_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_done_qty
#: field:project.mfgtask.report.line,done_qty:0
#: field:project.task.line,done_qty:0
msgid "Done Qty"
msgstr "已准备量"

#. module: metro_mrp_drawing
#: help:purchase.order,request_date:0
msgid "Date, when goods need to arrive in our warehouse. filled by Requester"
msgstr "Date, when goods need to arrive in our warehouse. filled by Requester"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_has_pdf
#: field:purchase.order.line,has_pdf:0
msgid "PDF?"
msgstr "PDF?"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_transfer_qty
#: field:warehouse.task.report.line,transfer_qty:0
msgid "Transfered Qty"
msgstr "调用量"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pr_generate_po_wizard_po_line
msgid "PR Wizard Purchase Order Line"
msgstr "PR Wizard Purchase Order Line"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_product_do_lines
#: field:product.product,do_lines:0
msgid "Drawing PDF Lines"
msgstr "PDF图纸 Lines"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:33
#: view:drawing.order:0
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_drawing_order_line_print
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_drawing_order_print
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_download_pdf
#: view:mrp.production:0
#, python-format
msgid "Download PDF"
msgstr "Download PDF"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_assigned_to
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_assigned_to
#: field:project.task,assigned_to:0
#: field:pur.req,assigned_to:0
msgid "Assigned To"
msgstr "负责采购"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,price:0
msgid "Unit Price"
msgstr "Unit Price"

#. module: metro_mrp_drawing
#: help:drawing.order,purchcd_type_qty:0
msgid "CD – Composite Dept"
msgstr "CD – Composite Dept"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "PARTS PREPARED"
msgstr "PARTS PREPARED"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "ALL PARTS"
msgstr "ALL PARTS"

#. module: metro_mrp_drawing
#: field:drawing.order.line,A_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_A_done_qty
msgid "A D"
msgstr "A D"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_view_pur_req_group
msgid "Merge Purchase Requisitions"
msgstr "Merge Purchase Requisitions"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "PARTS NOT PREPARED"
msgstr "PARTS NOT PREPARED"

#. module: metro_mrp_drawing
#: field:drawing.order.line,A_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_A_need_qty
msgid "A N"
msgstr "A N"

#. module: metro_mrp_drawing
#: selection:product.do.line,type:0
msgid "From DO"
msgstr "From DO"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_good_need_ordered
#: field:pur.req,good_need_ordered:0
msgid "Good Need/Ordered"
msgstr "Good Need/Ordered"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_dispatcher
#: field:project.mfgtask.report.line,dispatcher:0
msgid "Dispatcher Received"
msgstr "Dispatcher Received"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_qty_available
#: field:warehouse.task.report.line,qty_available:0
msgid "Available Qty"
msgstr "实际库存"

#. module: metro_mrp_drawing
#: field:drawing.order,name:0
#: field:drawing.order.line,name:0
#: field:drawing.step,name:0
#: field:missing.erpno,name:0
#: field:project.task.line,name:0
#: field:pur.req.line,name:0
msgid "Name"
msgstr "Name"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_sale_product_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_sale_product_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_sale_product_ids
#: field:pur.req,sale_product_ids:0
#: field:purchase.order,sale_product_ids:0
msgid "Unit IDs"
msgstr "产品ID"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_task_print
msgid "task.print"
msgstr "task.print"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "Reactivate"
msgstr "重新激活"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Bt_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Bt_done_qty
msgid "Bt D"
msgstr "Bt D"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From Procurement PR"
msgstr "From 自动申请"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_task_group_by_assignee_brief
msgid "Tasks Done by Assignee Brief"
msgstr "Tasks Done by Assignee Brief"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
msgid "Employee 3"
msgstr "Employee 3"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:34
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_download_selected_pdf
#, python-format
msgid "Download Selected PDF"
msgstr "Download Selected PDF"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.act_mo_select_do_wizard
#: view:mrp.production:0
msgid "Create DO Structure"
msgstr "Create DO Structure"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_task
msgid "Task"
msgstr "任务"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_payment_date
msgid "Payment Date"
msgstr "付款日期"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_product_thickness
#: field:product.product,thickness:0
msgid "Thicknesss"
msgstr "Thicknesss"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "NEED TO ORDER"
msgstr "NEED TO ORDER"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "四"
msgstr "四"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_current_prepare_qty
#: field:warehouse.task.report.line,current_prepare_qty:0
msgid "Current Prepare Qty"
msgstr "Current 需准备量"

#. module: metro_mrp_drawing
#: sql_constraint:drawing.step:0
msgid "Name must be unique!"
msgstr "Name must be unique!"

#. module: metro_mrp_drawing
#: field:drawing.order,purchms_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchms_type_qty
msgid "PMS Qty"
msgstr "PMS Qty"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_brief:0
#: report:task.group.by_team_full:0
msgid "Note:"
msgstr "Note:"

#. module: metro_mrp_drawing
#: selection:project.mfgtask.report,type:0
msgid "Worker"
msgstr "Worker"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
#: field:project.mfgtask.report,dept_id:0
#: view:warehouse.task.report:0
#: field:warehouse.task.report,dept_id:0
msgid "Department"
msgstr "Department"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_brief:0
#: report:task.group.by_team_full:0
msgid "Created by"
msgstr "Created by"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ht_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ht_done_qty
msgid "Ht D"
msgstr "Ht D"

#. module: metro_mrp_drawing
#: field:project.task.completion.line,sequence:0
#: field:project.task.line,sequence:0
msgid "Sequence"
msgstr "Sequence"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "问题点"
msgstr "问题点"

#. module: metro_mrp_drawing
#: view:pr.generate.po.wizard:0
msgid "Please review the purchase orders before creation"
msgstr "Please review the purchase orders before creation"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_brief:0
#: report:task.group.by_team_full:0
msgid "Tasks left on:"
msgstr "Tasks left on:"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_report_lines
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_report_lines
#: view:project.mfgtask.report:0
#: field:project.mfgtask.report,report_lines:0
#: view:warehouse.task.report:0
#: field:warehouse.task.report,report_lines:0
msgid "Report Lines"
msgstr "状态信息"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "PO can be linked to PR if:"
msgstr "PO can be linked to PR if:"

#. module: metro_mrp_drawing
#: field:drawing.order,produced_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_produced_type_qty
msgid "ASM Qty"
msgstr "ASM Qty"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "总数"
msgstr "总数"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_pr_requested_date
#: field:purchase.order,pr_requested_date:0
msgid "PR Requested Date"
msgstr "PR Requested Date"

#. module: metro_mrp_drawing
#: field:pur.req.line,current_reserved_quantity:0
msgid "Reserved Quantity"
msgstr "Reserved Quantity"

#. module: metro_mrp_drawing
#: view:set.pr.line.supplier.wizard:0
msgid "Please select the supplier to set for all lines"
msgstr "Please select the supplier to set for all lines"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "[[ (show_price and formatLang(req.amount_total,                             digits=get_digits(dp='Account'))) or '' ]]"
msgstr "[[ (show_price and formatLang(req.amount_total,                             digits=get_digits(dp='Account'))) or '' ]]"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_task_line
msgid "Project Task Line"
msgstr "Project Task Line"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_task_done_qty
#: view:project.task:0
#: field:project.task.completion.line,task_done_qty:0
msgid "Total Done Quantity"
msgstr "Total Done Quantity"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.purchase_form_action2
msgid "Purchase Orders New"
msgstr "Purchase Orders New"

#. module: metro_mrp_drawing
#: view:upload.multi.drawings:0
msgid "Select drawing files to upload"
msgstr "Select drawing files to upload"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "开始"
msgstr "开始"

#. module: metro_mrp_drawing
#: help:purchase.order,delivery_date:0
msgid "Date, when goods plan to arrive in our warehouse. filled by Purchaser"
msgstr "Date, when goods plan to arrive in our warehouse. filled by Purchaser"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Update Parts"
msgstr "Update Parts"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "RESERVED QTY"
msgstr "订购量"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "类型 Type"
msgstr "类型 Type"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_task_date_create
#: field:warehouse.task.report,task_date_create:0
msgid "Task Issued Date"
msgstr "下单时间"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_req_mfg_o
#: selection:pur.req,pr_type:0
#: selection:pur.req.line,pr_type:0
#: selection:purchase.order,pr_type:0
msgid "MFG-O PR"
msgstr "MFG-O PR"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_merged_drawing_order_ids
#: view:pur.req:0
#: field:pur.req,merged_drawing_order_ids:0
msgid "Merged DOs"
msgstr "Merged DOs"

#. module: metro_mrp_drawing
#: view:confirm.set.pr.line.supplier.wizard:0
msgid "Some lines already have suppliers, OK to continue?"
msgstr "Some lines already have suppliers, OK to continue?"

#. module: metro_mrp_drawing
#: view:work.order.cnc:0
msgid "DXF Lines"
msgstr "DXF Lines"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
msgid "Employee 5"
msgstr "Employee 5"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_has_dxf
#: field:purchase.order.line,has_dxf:0
msgid "DXF?"
msgstr "DXF?"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Set to Draft"
msgstr "设为草稿"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_deposit_date
#: field:purchase.order,deposit_date:0
msgid "Deposit Date"
msgstr "Deposit Date"

#. module: metro_mrp_drawing
#: field:drawing.order,mo_bigsubassembly_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_mo_bigsubassembly_ids
msgid "MO Big Subassembly"
msgstr "MO Big Subassembly"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_po_send_email_wizard_attach_pdf
#: field:po.send.email.wizard,attach_pdf:0
msgid "Attach PDF?"
msgstr "Attach PDF?"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:23
#, python-format
msgid "Print Selected"
msgstr "Print Selected"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "材质"
msgstr "材质"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_pur_req_mfg_o
msgid "Purchase Requisitions - MFG-O"
msgstr "Purchase Requisitions - MFG-O"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_description
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_note
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_line_description
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_description
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_description
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_description
msgid "Description"
msgstr "描述"

#. module: metro_mrp_drawing
#: view:drawing.order.line:0
#: view:fix.pdf.dxf.corrupt.wizard:0
#: view:work.order.cnc:0
msgid "ERP Part Number"
msgstr "ERP Part Number"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,uom_id:0
msgid "Unit of Measure"
msgstr "Unit of Measure"

#. module: metro_mrp_drawing
#: view:warehouse.task.report:0
msgid "Fill Prepare Qty"
msgstr "Fill 需准备量"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move1_lines
#: field:pur.req,move1_lines:0
msgid "Move1 Lines"
msgstr "Move1 Lines"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_mail_compose_message
msgid "Email composition wizard"
msgstr "电子邮件撰写向导"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Approved Waiting Delivery"
msgstr "Approved Waiting Delivery"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Upload Part Drawings"
msgstr "Upload Part Drawings"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "ERP NAME"
msgstr "ERP NAME"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,main_part_id:0
#: field:drawing.order.line,main_part_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_main_part_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_main_part_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_unit
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_unit
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_unit
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_unit
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_unit
#: view:pur.req:0
#: field:pur.req,unit:0
#: field:purchase.order,unit:0
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Unit"
msgstr "产品型号"

#. module: metro_mrp_drawing
#: field:drawing.order.history,content:0
#: field:project.task.modifyhistory,content:0
#: field:pur.req.history,content:0
msgid "Content"
msgstr "Content"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_purchase_order
#: view:pur.req:0
#: view:purchase.order:0
msgid "Purchase Order"
msgstr "采购订单"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "TEAM LEADER 组长:"
msgstr "TEAM LEADER 组长:"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "PRICE"
msgstr "价格"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:project.task:0
#: view:project.task.completion:0
msgid "Lines"
msgstr "Lines"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_delivery_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_delivery_date
#: field:pur.req,delivery_date:0
msgid "Delivery date (ETA)"
msgstr "期望到货时间"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:7
#, python-format
msgid "Quick create"
msgstr "Quick create"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "[[ (show_price and formatLang(req.amount_total,                             digits=get_digits(dp='Account') )) or '' ]]"
msgstr "[[ (show_price and formatLang(req.amount_total,                             digits=get_digits(dp='Account') )) or '' ]]"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_pdf_printed_date
#: field:project.task,pdf_printed_date:0
msgid "Printed Date"
msgstr "Printed Date"

#. module: metro_mrp_drawing
#: field:force.close.task.wizard,mfg_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_force_close_task_wizard_mfg_ids
msgid "MFG IDS"
msgstr "产品ID"

#. module: metro_mrp_drawing
#: model:email.template,body_html:metro_mrp_drawing.email_template_purchase_confirm
msgid "\n"
"<div style=\"font-family: 'Lucica Grande', Ubuntu, Arial, Verdana, sans-serif; font-size: 12px; color: rgb(34, 34, 34); background-color: #FFF; \">\n"
"\n"
"    <p>Hello ${object.partner_id.name},</p>\n"
"\n"
"    <p>Here is a ${object.state in ('draft', 'sent') and 'request for quotation' or 'purchase order confirmation'} from ${object.company_id.name}: </p>\n"
"\n"
"    <p style=\"border-left: 1px solid #8e0000; margin-left: 30px;\">\n"
"       &nbsp;&nbsp;<strong>REFERENCES</strong><br />\n"
"       &nbsp;&nbsp;Order number: <strong>${object.name}</strong><br />\n"
"       &nbsp;&nbsp;Order total: <strong>${object.amount_total} ${object.pricelist_id.currency_id.name}</strong><br />\n"
"       &nbsp;&nbsp;Order date: ${object.date_order}<br />\n"
"       % if object.origin:\n"
"       &nbsp;&nbsp;Order reference: ${object.origin}<br />\n"
"       % endif\n"
"       % if object.partner_ref:\n"
"       &nbsp;&nbsp;Your reference: ${object.partner_ref}<br />\n"
"       % endif\n"
"       % if object.validator:\n"
"       &nbsp;&nbsp;Your contact: <a href=\"mailto:${object.validator.email or ''}?subject=Order%20${object.name}\">${object.validator.name}</a>\n"
"       % endif\n"
"    </p>\n"
"\n"
"    <br/>\n"
"    <p>If you have any question, do not hesitate to contact us.</p>\n"
"    <p>Thank you!</p>\n"
"    <br/>\n"
"    <br/>\n"
"    <div style=\"width: 375px; margin: 0px; padding: 0px; background-color: #8E0000; border-top-left-radius: 5px 5px; border-top-right-radius: 5px 5px; background-repeat: repeat no-repeat;\">\n"
"        <h3 style=\"margin: 0px; padding: 2px 14px; font-size: 12px; color: #DDD;\">\n"
"            <strong style=\"text-transform:uppercase;\">${object.company_id.name}</strong></h3>\n"
"    </div>\n"
"    <div style=\"width: 347px; margin: 0px; padding: 5px 14px; line-height: 16px; background-color: #F2F2F2;\">\n"
"        <span style=\"color: #222; margin-bottom: 5px; display: block; \">\n"
"        % if object.company_id.street:\n"
"            ${object.company_id.street}<br/>\n"
"        % endif\n"
"        % if object.company_id.street2:\n"
"            ${object.company_id.street2}<br/>\n"
"        % endif\n"
"        % if object.company_id.city or object.company_id.zip:\n"
"            ${object.company_id.zip} ${object.company_id.city}<br/>\n"
"        % endif\n"
"        % if object.company_id.country_id:\n"
"            ${object.company_id.state_id and ('%s, ' % object.company_id.state_id.name) or ''} ${object.company_id.country_id.name or ''}<br/>\n"
"        % endif\n"
"        </span>\n"
"        % if object.company_id.phone:\n"
"            <div style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">\n"
"                Phone:&nbsp; ${object.company_id.phone}\n"
"            </div>\n"
"        % endif\n"
"        % if object.company_id.website:\n"
"            <div>\n"
"                Web :&nbsp;<a href=\"${object.company_id.website}\">${object.company_id.website}</a>\n"
"            </div>\n"
"        %endif\n"
"        <p></p>\n"
"    </div>\n"
"</div>\n"
"            "
msgstr "\n"
"<div style=\"font-family: 'Lucica Grande', Ubuntu, Arial, Verdana, sans-serif; font-size: 12px; color: rgb(34, 34, 34); background-color: #FFF; \">\n"
"\n"
"    <p>Hello ${object.partner_id.name},</p>\n"
"\n"
"    <p>Here is a ${object.state in ('draft', 'sent') and 'request for quotation' or 'purchase order confirmation'} from ${object.company_id.name}: </p>\n"
"\n"
"    <p style=\"border-left: 1px solid #8e0000; margin-left: 30px;\">\n"
"       &nbsp;&nbsp;<strong>REFERENCES</strong><br />\n"
"       &nbsp;&nbsp;Order number: <strong>${object.name}</strong><br />\n"
"       &nbsp;&nbsp;Order total: <strong>${object.amount_total} ${object.pricelist_id.currency_id.name}</strong><br />\n"
"       &nbsp;&nbsp;Order date: ${object.date_order}<br />\n"
"       % if object.origin:\n"
"       &nbsp;&nbsp;Order reference: ${object.origin}<br />\n"
"       % endif\n"
"       % if object.partner_ref:\n"
"       &nbsp;&nbsp;Your reference: ${object.partner_ref}<br />\n"
"       % endif\n"
"       % if object.validator:\n"
"       &nbsp;&nbsp;Your contact: <a href=\"mailto:${object.validator.email or ''}?subject=Order%20${object.name}\">${object.validator.name}</a>\n"
"       % endif\n"
"    </p>\n"
"\n"
"    <br/>\n"
"    <p>If you have any question, do not hesitate to contact us.</p>\n"
"    <p>Thank you!</p>\n"
"    <br/>\n"
"    <br/>\n"
"    <div style=\"width: 375px; margin: 0px; padding: 0px; background-color: #8E0000; border-top-left-radius: 5px 5px; border-top-right-radius: 5px 5px; background-repeat: repeat no-repeat;\">\n"
"        <h3 style=\"margin: 0px; padding: 2px 14px; font-size: 12px; color: #DDD;\">\n"
"            <strong style=\"text-transform:uppercase;\">${object.company_id.name}</strong></h3>\n"
"    </div>\n"
"    <div style=\"width: 347px; margin: 0px; padding: 5px 14px; line-height: 16px; background-color: #F2F2F2;\">\n"
"        <span style=\"color: #222; margin-bottom: 5px; display: block; \">\n"
"        % if object.company_id.street:\n"
"            ${object.company_id.street}<br/>\n"
"        % endif\n"
"        % if object.company_id.street2:\n"
"            ${object.company_id.street2}<br/>\n"
"        % endif\n"
"        % if object.company_id.city or object.company_id.zip:\n"
"            ${object.company_id.zip} ${object.company_id.city}<br/>\n"
"        % endif\n"
"        % if object.company_id.country_id:\n"
"            ${object.company_id.state_id and ('%s, ' % object.company_id.state_id.name) or ''} ${object.company_id.country_id.name or ''}<br/>\n"
"        % endif\n"
"        </span>\n"
"        % if object.company_id.phone:\n"
"            <div style=\"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; \">\n"
"                Phone:&nbsp; ${object.company_id.phone}\n"
"            </div>\n"
"        % endif\n"
"        % if object.company_id.website:\n"
"            <div>\n"
"                Web :&nbsp;<a href=\"${object.company_id.website}\">${object.company_id.website}</a>\n"
"            </div>\n"
"        %endif\n"
"        <p></p>\n"
"    </div>\n"
"</div>\n"
"            "

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Hide lines with positive inventory (no need to order)"
msgstr "隐藏有库存项"

#. module: metro_mrp_drawing
#: view:pur.req:0
#: selection:pur.req,pr_type:0
#: view:pur.req.line:0
#: selection:pur.req.line,pr_type:0
#: selection:purchase.order,pr_type:0
msgid "Sourcing PR"
msgstr "Sourcing PR"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:work.order.cnc:0
msgid "Download DXF"
msgstr "Download DXF"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_supplier_delay
msgid "Supplier Lead Time"
msgstr "供应商送货周期"

#. module: metro_mrp_drawing
#: field:drawing.order.line,step_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_step_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_upload_multi_drawings_step_ids
#: field:upload.multi.drawings,step_ids:0
msgid "Working Steps"
msgstr "Working Steps"

#. module: metro_mrp_drawing
#: field:link.po.to.pr.wizard,po_id:0
#: field:move.po.line.wizard,po_id:0
#: view:pr.generate.po.wizard:0
#: field:pr.generate.po.wizard,po_ids:0
#: field:pr.generate.po.wizard.po.line,order_id:0
msgid "Purchase Order"
msgstr "Purchase Order"

#. module: metro_mrp_drawing
#: view:product.product:0
msgid "Reserved"
msgstr "Reserved"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_force_close_task
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_force_close_task
msgid "Force Close Task"
msgstr "Force Close Task"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: view:pur.req:0
#: selection:pur.req.line,part_type:0
msgid "PS"
msgstr "PS"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
#: selection:task.print,report_mode:0
msgid "Daily Report by Parts Done 每日零部件完成情况报表"
msgstr "Daily Report by Parts Done 每日零部件完成情况报表"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "PR MFG Part List"
msgstr "PR MFG Part List"

#. module: metro_mrp_drawing
#: help:drawing.order,message_unread:0
#: help:missing.erpno,message_unread:0
#: help:project.mfgtask.report,message_unread:0
#: help:pur.req.reserve,message_unread:0
#: help:warehouse.task.report,message_unread:0
msgid "If checked new messages require your attention."
msgstr "If checked new messages require your attention."

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Generate MFG-O"
msgstr "Generate MFG-O"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Reference"
msgstr "单号"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_pur_req_procurement
msgid "Purchase Requisitions - Procurement"
msgstr "Purchase Requisitions - Procurement"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_task_modifyhistory
#: view:project.task.modifyhistory:0
msgid "Project Task Modify History"
msgstr "Project Task Modify History"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_mfg_id
msgid "MFG ID"
msgstr "生产ID"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_prepare_qty
#: field:project.task,prepare_qty:0
msgid "Prepare Quantity"
msgstr "Prepare Quantity"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From Canada PR"
msgstr "From 加拿大申请"

#. module: metro_mrp_drawing
#: view:update.do.bom:0
msgid "PO and SO Generator"
msgstr "PO and SO Generator"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_mrp_production_workcenter_line
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_workorder_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_workorder_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_workorder_id
msgid "Work Order"
msgstr "工票"

#. module: metro_mrp_drawing
#: field:generate.pr.wizard,mfg_o:0
#: field:generate.pr.xls.wizard,mfg_o:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_wizard_mfg_o
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_xls_wizard_mfg_o
msgid "MFG-O Type?"
msgstr "MFG-O Type?"

#. module: metro_mrp_drawing
#: field:drawing.order,req_o_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_req_o_id
msgid "Generated PR-O"
msgstr "Generated PR-O"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_date_deadline
#: field:warehouse.task.report,date_deadline:0
msgid "Task Deadline"
msgstr "限定交期"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "APPROVED BY"
msgstr "APPROVED BY"

#. module: metro_mrp_drawing
#: field:project.mfgtask.report.line,mfg_id:0
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "MFG ID"
msgstr "MFG ID"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "TOTAL"
msgstr "TOTAL"

#. module: metro_mrp_drawing
#: help:drawing.order,message_ids:0
#: help:missing.erpno,message_ids:0
#: help:project.mfgtask.report,message_ids:0
#: help:pur.req.reserve,message_ids:0
#: help:warehouse.task.report,message_ids:0
msgid "Messages and communication history"
msgstr "Messages and communication history"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_ids
#: view:project.task:0
#: field:project.task,completion_ids:0
#: view:project.task.completion:0
msgid "Task Completion"
msgstr "Task Completion"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_drawing_order_line_pr_mfg_o
msgid "Generate PR MFG-O"
msgstr "Generate PR MFG-O"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:26
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_issue_drawing_selected
#, python-format
msgid "Print List of Issued Drawing"
msgstr "Print List of Issued Drawing"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_date_create
#: field:pur.req,date_create:0
msgid "Created Date"
msgstr "Created Date"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mrp_production_not_generated_do_qty
#: field:mrp.production,not_generated_do_qty:0
msgid "Not generated Qty"
msgstr "Not generated Qty"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "期望到货时间 Requested"
msgstr "期望到货时间 Requested"

#. module: metro_mrp_drawing
#: field:drawing.order.line,K_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_K_done_qty
msgid "K D"
msgstr "K D"

#. module: metro_mrp_drawing
#: view:pr.generate.po.wizard:0
#: field:pr.generate.po.wizard.po,line_ids:0
msgid "Purchase Order Lines"
msgstr "Purchase Order Lines"

#. module: metro_mrp_drawing
#: field:drawing.order.line,dxf_valid:0
#: field:drawing.order.line,pdf_valid:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_dxf_valid
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_pdf_valid
msgid "Valid Pdf?"
msgstr "Valid Pdf?"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_transfer_selected
msgid "Print Warehouse Transfer"
msgstr "Print Warehouse Transfer"

#. module: metro_mrp_drawing
#: field:drawing.order,company_id:0
#: field:drawing.order.line,company_id:0
msgid "Company"
msgstr "Company"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,date_required:0
#: field:project.task,dept_code:0
#: field:project.task.completion.line,task_line_id:0
#: field:project.task.line,dept_code:0
#: field:project.task.line,erp_no:0
#: field:project.task.line,part_type:0
msgid "unknown"
msgstr "unknown"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_supplier_count
#: field:pur.req,supplier_count:0
msgid "Supplier count"
msgstr "总计供应商数"

#. module: metro_mrp_drawing
#: field:pur.req.reserve,location_id:0
msgid "Location"
msgstr "Location"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Set to Draft"
msgstr "Set to Draft"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_po_need_generated
#: field:pur.req,po_need_generated:0
msgid "PO Need/Generated"
msgstr "PO Need/Generated"

#. module: metro_mrp_drawing
#: view:pur.req:0
#: selection:pur.req,pr_type:0
#: view:pur.req.line:0
#: selection:pur.req.line,pr_type:0
#: selection:purchase.order,pr_type:0
msgid "Normal PR"
msgstr "Normal PR"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_create_uid
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_create_uid
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_creator
msgid "Creator"
msgstr "创建人"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_history_user_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_user
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_modifyhistory_user_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_history_user_id
msgid "User"
msgstr "用户"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_qty_onhand
#: field:warehouse.task.report.line,qty_onhand:0
msgid "Onhand Qty"
msgstr "库存量"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_po_generated_count
#: field:pur.req,po_generated_count:0
msgid "Generated PO count"
msgstr "Generated PO count"

#. module: metro_mrp_drawing
#: field:drawing.order,purchm_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchm_type_qty
msgid "All Materials Qty"
msgstr "All Materials Qty"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "Created User"
msgstr "Created User"

#. module: metro_mrp_drawing
#: field:drawing.order.line,W_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_W_need_qty
msgid "W N"
msgstr "W N"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_print_pr_mfg_wizard_type
#: field:print.pr.mfg.wizard,type:0
msgid "Select Type Of Print"
msgstr "Select Type Of Print"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_hr_department
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_dept_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_dept_id
msgid "Department"
msgstr "部门"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Old tasks will be deleted. Are you sure you want to continue ?"
msgstr "Old tasks will be deleted. Are you sure you want to continue ?"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_completion_id
#: field:project.task.completion.line,completion_id:0
msgid "Task Compeltion"
msgstr "Task Compeltion"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "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"
msgstr "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"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_drawing_order_line
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_drawing_order_file
msgid "Drawing Order Files"
msgstr "Drawing Order Files"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_task_deadline_wizard_date_deadline
#: field:task.deadline.wizard,date_deadline:0
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Deadline"
msgstr "Deadline"

#. module: metro_mrp_drawing
#: field:drawing.order.line,B_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_B_prepare_qty
msgid "B P"
msgstr "B P"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "下单日期 Ordered"
msgstr "下单日期 Ordered"

#. module: metro_mrp_drawing
#: view:mo.select.do.wizard:0
msgid "Create DO Structure Wizard"
msgstr "Create DO Structure Wizard"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp2_kpi
#: field:project.mfgtask.report,emp2_kpi:0
msgid "Employee #2 KPI"
msgstr "Employee #2 KPI"

#. module: metro_mrp_drawing
#: field:drawing.order.line,B_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_B_done_qty
msgid "B D"
msgstr "B D"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_task_need_qty
#: view:project.task:0
#: field:project.task.completion.line,task_need_qty:0
msgid "Total Need Quantity"
msgstr "Total Need Quantity"

#. module: metro_mrp_drawing
#: view:product.product:0
#: view:pur.req.reserve:0
msgid "Total Reserved"
msgstr "Total Reserved"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_date_create
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_date_create
#: field:project.mfgtask.report,date_create:0
#: field:warehouse.task.report,date_create:0
msgid "Date Create"
msgstr "Date Create"

#. module: metro_mrp_drawing
#: field:drawing.order.line,D_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_D_done_qty
msgid "D D"
msgstr "D D"

#. module: metro_mrp_drawing
#: field:generate.pr.wizard,delete_old_prs:0
#: field:generate.pr.xls.wizard,delete_old_prs:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_wizard_delete_old_prs
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_xls_wizard_delete_old_prs
msgid "Delete Old PRs"
msgstr "Delete Old PRs"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_amount_total
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_amount_total
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_amount_total
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_amount_total
#: field:pr.generate.po.wizard,amount_total:0
#: field:pr.generate.po.wizard.po,amount_total:0
#: view:pur.req:0
#: field:pur.req,amount_total:0
#: field:pur.req.line,amount_total:0
msgid "Total Amount"
msgstr "总价"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "TOTAL QTY"
msgstr "TOTAL QTY"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Task List"
msgstr "Task List"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_upload_multi_dxfs
#: view:upload.multi.dxfs:0
msgid "Upload multi DXFs"
msgstr "Upload multi DXFs"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "CREATE DATE:"
msgstr "CREATE DATE:"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_task_print_report_mode
#: field:task.print,report_mode:0
msgid "Report Mode"
msgstr "Report Mode"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_step_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_name
msgid "Name"
msgstr "名称"

#. module: metro_mrp_drawing
#: model:project.task.type,name:metro_mrp_drawing.mfg_waitting
msgid "Pending"
msgstr "Pending"

#. module: metro_mrp_drawing
#: field:force.close.task.wizard,mo_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_force_close_task_wizard_mo_ids
msgid "Manufacturer Orders"
msgstr "生产订单"

#. module: metro_mrp_drawing
#: view:drawing.step:0
#: model:ir.model,name:metro_mrp_drawing.model_drawing_step
msgid "Drawing Step"
msgstr "Drawing Step"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_mfgtask_report_line
msgid "Project Mfg Task Report Line"
msgstr "Project Mfg Task Report Line"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Wa_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Wa_prepare_qty
msgid "Wa P"
msgstr "Wa P"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "一"
msgstr "一"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "PART NO."
msgstr "PART NO."

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_project_mfgtask_report
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_project_mfgtask_report
msgid "Task Report"
msgstr "Task Report"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "[[ formatLang(part.amount_total,                                 digits=get_digits(dp='Account') ) ]]"
msgstr "[[ formatLang(part.amount_total,                                 digits=get_digits(dp='Account') ) ]]"

#. module: metro_mrp_drawing
#: field:warehouse.task.report.line,qty_out:0
msgid "Outgoing"
msgstr "将出库数"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_message_summary
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_message_summary
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_message_summary
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_message_summary
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_message_summary
msgid "Summary"
msgstr "总计"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_req_procurement
#: view:pur.req:0
#: selection:pur.req,pr_type:0
#: selection:pur.req.line,pr_type:0
#: selection:purchase.order,pr_type:0
msgid "Procurement PR"
msgstr "自动申请"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "优"
msgstr "优"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_move2
msgid "Purchase Request Move 2"
msgstr "Purchase Request Move 2"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_modifyhistory_task_id
#: field:project.task.modifyhistory,task_id:0
msgid "Project Task"
msgstr "Project Task"

#. module: metro_mrp_drawing
#: model:project.task.type,name:metro_mrp_drawing.mfg_waiting_on_parts
msgid "Waiting On Parts"
msgstr "Waiting On Parts"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order.history,drawing_order_id:0
#: field:drawing.order.line,order_id:0
#: model:ir.model,name:metro_mrp_drawing.model_drawing_order
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_history_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_fix_pdf_dxf_corrupt_wizard_do_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mrp_production_workcenter_line_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_do_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_drawing_order_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_update_do_bom_do_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_work_order_cnc_drawing_order_id
#: field:missing.erpno,order_id:0
#: view:mrp.production:0
#: field:product.do.line,do_line_id:0
#: field:project.task,drawing_order_id:0
#: field:pur.req,drawing_order_id:0
#: field:update.do.bom,do_id:0
msgid "Drawing Order"
msgstr "图纸号"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_warehouse_task_print_fulllist
msgid "Print Fulllist"
msgstr "Print Fulllist"

#. module: metro_mrp_drawing
#: selection:task.print,report_mode:0
msgid "Task List 任务表"
msgstr "Task List 任务表"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_mo_select_do_wizard
msgid "MO Select DO Wizard"
msgstr "MO Select DO Wizard"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_time_start
#: field:project.mfgtask.report.line,time_start:0
msgid "Time Start"
msgstr "Time Start"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_missing_erpno_line
msgid "Missing ERP Lines"
msgstr "Missing ERP Lines"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_qc_passed
#: field:project.mfgtask.report.line,qc_passed:0
msgid "QC Passed"
msgstr "QC Passed"

#. module: metro_mrp_drawing
#: view:product.product:0
msgid "中国名"
msgstr "中国名"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAjAK0DASIA AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3 ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3 uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3uWRI onkc4RFLMfQCvmLXPEmpa7qVxeXF7cFHdjHGJCERM8AAcdK94+Iep/2V4H1KVW2ySp5Ef1c4/lmv BvDOit4g8RWOlqDslcGUj+GMcsfy4/GvUy+MYxlVkcWKk3JQR0EHw58W3VjHeW7RSQyxiSMrdnLK RkcGuUthd3V5FapcSLLLII13yMBuJwAfxr6oiWONVhjCqsagBB/COg/lXjXgDwwt38QtUvHUNaaX cyBCOQ0hY7fyGT+VXRxrlGcp9CamHScVHqZU3wz8ZQQSTMIysaliFvCTgelcWLmcjIuJv+/h/wAa +qbxlk024KMGBifBByOhr5QU4QE9hW2CxEq3Nz9DPEUlTtynsHwXsZHj1TVJXkYFlt49zE9Pmbr9 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 R//Z"
msgstr "/9j/4AAQSkZJRgABAQEAeAB4AAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0a HBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIy MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAAjAK0DASIA AhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQA AAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3 ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWm p6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEA AwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSEx BhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElK U1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3 uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3uWRI onkc4RFLMfQCvmLXPEmpa7qVxeXF7cFHdjHGJCERM8AAcdK94+Iep/2V4H1KVW2ySp5Ef1c4/lmv BvDOit4g8RWOlqDslcGUj+GMcsfy4/GvUy+MYxlVkcWKk3JQR0EHw58W3VjHeW7RSQyxiSMrdnLK RkcGuUthd3V5FapcSLLLII13yMBuJwAfxr6oiWONVhjCqsagBB/COg/lXjXgDwwt38QtUvHUNaaX cyBCOQ0hY7fyGT+VXRxrlGcp9CamHScVHqZU3wz8ZQQSTMIysaliFvCTgelcWLmcjIuJv+/h/wAa +qbxlk024KMGBifBByOhr5QU4QE9hW2CxEq3Nz9DPEUlTtynsHwXsZHj1TVJXkYFlt49zE9Pmbr9 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 R//Z"

#. module: metro_mrp_drawing
#: field:fix.pdf.dxf.corrupt.wizard,do_id:0
#: field:mrp.production.workcenter.line,drawing_order_id:0
#: field:product.do.line,drawing_order_id:0
#: field:project.mfgtask.report.line,drawing_order_id:0
#: field:pur.req.line,drawing_order_id:0
#: field:work.order.cnc,drawing_order_id:0
msgid "Drawing Order"
msgstr "Drawing Order"

#. module: metro_mrp_drawing
#: view:generate.pr.wizard:0
#: model:ir.model,name:metro_mrp_drawing.model_generate_pr_wizard
msgid "Generate PR Wizard"
msgstr "Generate PR Wizard"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Request Date"
msgstr "Request Date"

#. module: metro_mrp_drawing
#: view:pur.req.line:0
msgid "MFG PR"
msgstr "MFG PR"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_product_do_line
msgid "product.do.line"
msgstr "product.do.line"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_next_step
#: field:project.task.line,next_step:0
msgid "Next Step"
msgstr "Next Step"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_current_done_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_current_done_qty
#: field:project.mfgtask.report.line,current_done_qty:0
#: field:warehouse.task.report.line,current_done_qty:0
msgid "Current Done Qty"
msgstr "Current Done Qty"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:mrp.production:0
msgid "Approve"
msgstr "Approve"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "三"
msgstr "三"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_task_group_by_team_brief
msgid "Tasks Done by Team Brief"
msgstr "Tasks Done by Team Brief"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,supplier_prod_name:0
msgid "Supplier Product Name"
msgstr "Supplier Product Name"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "* All PO product lines must be existed in PR lines"
msgstr "* All PO product lines must be existed in PR lines"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ht_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ht_prepare_qty
msgid "Ht P"
msgstr "Ht P"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Issued"
msgstr "Issued"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_qty_out
msgid "Outgoing"
msgstr "将出库"

#. module: metro_mrp_drawing
#: view:pr.generate.po.wizard:0
msgid "Generate PO"
msgstr "Generate PO"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_task_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_task_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_task_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_task_id
#: field:project.mfgtask.report.line,task_id:0
#: field:project.task.completion,task_id:0
#: field:project.task.line,task_id:0
#: field:warehouse.task.report,task_id:0
msgid "Task"
msgstr "Task"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_po
msgid "Requisition's Purchase Order"
msgstr "请购单相关采购单"

#. module: metro_mrp_drawing
#: field:drawing.order.history,user_id:0
#: field:product.do.line,user:0
#: field:project.task.modifyhistory,user_id:0
#: field:pur.req.history,user_id:0
msgid "User"
msgstr "User"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_wizard_warehouse_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_xls_wizard_warehouse_id
msgid "Warehouse"
msgstr "仓库"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:generate.pr.wizard:0
#: view:generate.pr.xls.wizard:0
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_drawing_order_line_pr
msgid "Generate PR"
msgstr "Generate PR"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: view:pur.req:0
#: selection:pur.req.line,part_type:0
msgid "PMC"
msgstr "PMC"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_link_po_to_pr_wizard_po_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_move_po_line_wizard_po_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_order_id
msgid "Purchase Order"
msgstr "采购单"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "部件编号"
msgstr "部件编号"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "(lines),"
msgstr "(条),"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "TAXES"
msgstr "TAXES"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_task_group_by_assignee_full
msgid "Tasks Done by Assignee Full"
msgstr "Tasks Done by Assignee Full"

#. module: metro_mrp_drawing
#: field:confirm.set.pr.line.supplier.wizard,pr_line_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_confirm_set_pr_line_supplier_wizard_pr_line_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_set_pr_line_supplier_wizard_pr_line_ids
#: field:set.pr.line.supplier.wizard,pr_line_ids:0
msgid "Purchase Requisition Lines"
msgstr "Purchase Requisition Lines"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_purchase_order_line
msgid "Purchase Order Line"
msgstr "采购订单明细"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: selection:drawing.order,state:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,state:0
msgid "Rejected"
msgstr "Rejected"

#. module: metro_mrp_drawing
#: field:po.send.email.wizard,po_id:0
msgid "PO"
msgstr "PO"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "NAME & DESCRIPTION"
msgstr "NAME & DESCRIPTION"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_current_reserved_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_reserved_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_product_qty
msgid "Reserved Quantity"
msgstr "占用数量"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "生产单 MO:"
msgstr "生产单 MO:"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_move1
msgid "Purchase Request Move 1"
msgstr "Purchase Request Move 1"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move1_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move2_quantity
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move3_quantity
msgid "Quantity"
msgstr "数量"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_req_mfg
#: view:pur.req:0
#: selection:pur.req,pr_type:0
#: selection:pur.req.line,pr_type:0
#: selection:purchase.order,pr_type:0
msgid "MFG PR"
msgstr "生产部请购"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:project.task:0
msgid "Hide lines already have drawing files"
msgstr "Hide lines already have drawing files"

#. module: metro_mrp_drawing
#: view:mo.select.do.wizard:0
msgid "Generate DO"
msgstr "Generate DO"

#. module: metro_mrp_drawing
#: view:pr.send.email.wizard:0
msgid "PR lines to email"
msgstr "PR lines to email"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_need_qty
#: field:project.task.completion.line,need_qty:0
msgid "Remain Need Quantity"
msgstr "Remain Need Quantity"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Download CNC BOM"
msgstr "Download CNC BOM"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "* Order lines are exactly the same erp #"
msgstr "* Order lines are exactly the same erp #"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:24
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_task_list_selected
#, python-format
msgid "Print Task List PDF"
msgstr "Print Task List PDF"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_print_pr_mfg_wizard
#: view:print.pr.mfg.wizard:0
msgid "Print PR MFG Wizard"
msgstr "Print PR MFG Wizard"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "Download All PDFs"
msgstr "Download All PDFs"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "UNIT 型号:"
msgstr "UNIT 型号:"

#. module: metro_mrp_drawing
#: view:project.task:0
#: view:warehouse.task.report:0
msgid "Partial Transfer"
msgstr "Partial Transfer"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "SUPPLIER"
msgstr "供应商"

#. module: metro_mrp_drawing
#: field:pur.req.line,reserved_quantity:0
#: field:pur.req.reserve,product_qty:0
msgid "Reserved Quantity"
msgstr "其他订单 保有库存"

#. module: metro_mrp_drawing
#: view:task.deadline.wizard:0
msgid "Set"
msgstr "Set"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:28
#, python-format
msgid "Print Warehouse Full list"
msgstr "Print Warehouse Full list"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_drw_issued
#: field:project.task,drw_issued:0
msgid "DRW Issued"
msgstr "DRW Issued"

#. module: metro_mrp_drawing
#: view:pr.send.email.wizard:0
msgid "Total Amount"
msgstr "Total Amount"

#. module: metro_mrp_drawing
#: view:drawing.order.history:0
#: model:ir.model,name:metro_mrp_drawing.model_drawing_order_history
msgid "Drawing Order History"
msgstr "Drawing Order History"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "PR by Products"
msgstr "PR by Products"

#. module: metro_mrp_drawing
#: field:purchase.order,delivery_date:0
msgid "Delivery date (ETA)"
msgstr "Delivery date (ETA)"

#. module: metro_mrp_drawing
#: field:drawing.order.line,A_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_A_prepare_qty
msgid "A P"
msgstr "A P"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_supplier_prod_code
msgid "Supplier Product Code"
msgstr "供应商产品代码"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_expected_date
#: field:pur.req.line,expected_date:0
msgid "Expected Date"
msgstr "Expected Date"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "Engineer Name 工程師:"
msgstr "Engineer Name 工程師:"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ma_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ma_prepare_qty
msgid "Ma P"
msgstr "Ma P"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_stock_quantity
#: view:pr.send.email.wizard:0
#: field:pur.req.line,stock_quantity:0
msgid "Stock Quantity"
msgstr "Stock Quantity"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_task_completion
msgid "Project Task Completion"
msgstr "Project Task Completion"

#. module: metro_mrp_drawing
#: field:purchase.order,payment_date:0
msgid "Payment Date"
msgstr "Payment Date"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_total_kpi
#: view:project.mfgtask.report:0
#: field:project.mfgtask.report,total_kpi:0
msgid "Total KPI"
msgstr "Total KPI"

#. module: metro_mrp_drawing
#: help:drawing.order,purchs_type_qty:0
msgid "PS – Standard purchased parts"
msgstr "PS – Standard purchased parts"

#. module: metro_mrp_drawing
#: field:drawing.order,copy_order_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_copy_order_id
msgid "Copied From"
msgstr "Copied From"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_wizard_id
#: field:pr.generate.po.wizard.po,wizard_id:0
msgid "PR Wizard"
msgstr "PR Wizard"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_deadline
msgid "Set deadline for selected"
msgstr "Set deadline for selected"

#. module: metro_mrp_drawing
#: field:drawing.order.line,G_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_G_need_qty
msgid "G N"
msgstr "G N"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_amount_total
msgid "Amount"
msgstr "金额"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_need_qty
#: field:project.task,need_qty:0
msgid "Need Quantity"
msgstr "此单所需"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_po_supplier_ids
#: field:pur.req.po,supplier_ids:0
msgid "Suppliers"
msgstr "Suppliers"

#. module: metro_mrp_drawing
#: view:product.do.line:0
#: view:product.product:0
msgid "Product Drawing Order Line"
msgstr "Product Drawing Order Line"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "Q-ty Need 总数量"
msgstr "Q-ty Need 总数量"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_thickness
#: view:pur.req:0
#: field:pur.req.line,thickness:0
msgid "Thickness/Length"
msgstr "厚/长"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "任务表"
msgstr "任务表"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "页码 Page Number"
msgstr "页码 Page Number"

#. module: metro_mrp_drawing
#: selection:warehouse.task.report,state:0
#: selection:warehouse.task.report.line,state:0
msgid "Partial Transfered"
msgstr "Partial Transfered"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_task_group_by_employee_full
msgid "Tasks Done by Employee Full"
msgstr "Tasks Done by Employee Full"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_date_issued
#: field:project.task,date_issued:0
msgid "Date Issued"
msgstr "Date Issued"

#. module: metro_mrp_drawing
#: view:upload.multi.dxfs:0
msgid "Select DXF files to upload"
msgstr "Select DXF files to upload"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_done_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_done_qty
#: field:project.task,done_qty:0
#: field:project.task.completion.line,done_qty:0
msgid "Done Quantity"
msgstr "已准备量"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_dxf_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_dxf_file_name
#: field:pur.req.line,dxf_file_name:0
#: field:purchase.order.line,dxf_file_name:0
msgid "Drawing DXF Name"
msgstr "Drawing DXF Name"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_completion_lines
#: view:project.task.completion:0
#: field:project.task.completion,completion_lines:0
msgid "Completion Lines"
msgstr "Completion Lines"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "Q-ty 1 Unit 1台所含数量"
msgstr "Q-ty 1 Unit 1台所含数量"

#. module: metro_mrp_drawing
#: view:missing.erpno:0
msgid "Search Missing ERP NO"
msgstr "Search 未知料号"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
msgid "Employee 1"
msgstr "Employee 1"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_in_stock_count
#: field:pur.req,in_stock_count:0
msgid "In Stock count"
msgstr "备有库存项"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:mrp.production:0
#: view:project.mfgtask.report:0
#: view:project.task.completion:0
#: selection:project.task.completion,state:0
msgid "Confirm"
msgstr "Confirm"

#. module: metro_mrp_drawing
#: view:pur.req.line:0
msgid "POEM Part Type"
msgstr "POEM Part Type"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:30
#, python-format
msgid "Print Warehouse Transfer list"
msgstr "Print Warehouse Transfer list"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_pr_mfg_form
msgid "PR MFG Form"
msgstr "PR MFG Form"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Order Date"
msgstr "订单日期"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Copied from"
msgstr "Copied from"

#. module: metro_mrp_drawing
#: field:project.mfgtask.report.line,unit:0
#: field:pur.req.line,unit:0
#: field:warehouse.task.report,unit:0
msgid "Unit"
msgstr "车型或零部件"

#. module: metro_mrp_drawing
#: field:drawing.order.line,bom_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_bom_qty
msgid "BOM Qty"
msgstr "BOM Qty"

#. module: metro_mrp_drawing
#: field:drawing.order,notice:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_notice
msgid "Notice"
msgstr "Notice"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_stock_partial_picking
msgid "Partial Picking Processing Wizard"
msgstr "分部拣货处理向导"

#. module: metro_mrp_drawing
#: help:drawing.order,message_summary:0
#: help:missing.erpno,message_summary:0
#: help:project.mfgtask.report,message_summary:0
#: help:pur.req.reserve,message_summary:0
#: help:warehouse.task.report,message_summary:0
msgid "Holds the Chatter summary (number of messages, ...). This summary is directly in html format in order to be inserted in kanban views."
msgstr "Holds the Chatter summary (number of messages, ...). This summary is directly in html format in order to be inserted in kanban views."

#. module: metro_mrp_drawing
#: field:drawing.order.line,standard:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_standard
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_standard
#: field:pur.req.line,standard:0
msgid "Standard"
msgstr "国标依据"

#. module: metro_mrp_drawing
#: field:drawing.order,bom_download:0
#: field:drawing.order,bom_file:0
#: field:generate.pr.xls.wizard,bom_file:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_bom_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_bom_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_xls_wizard_bom_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_update_do_bom_bom_file
#: field:update.do.bom,bom_file:0
msgid "BOM File"
msgstr "BOM File"

#. module: metro_mrp_drawing
#: help:drawing.order,purchmc_type_qty:0
msgid "PMC – Cylinder Materials"
msgstr "PMC – Cylinder Materials"

#. module: metro_mrp_drawing
#: view:drawing.order.line:0
msgid "Aluminum"
msgstr "Aluminum"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_res_company_stamp_landscape
#: field:res.company,stamp_landscape:0
msgid "Company Stamp Landscape"
msgstr "Company Stamp Landscape"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "{\"invisible\":[(\"project_type\",\"!=\",\"mfg\")],\"readonly\":[(\"state\",\"!=\",\"draft\")],\"required\":[(\"project_type\",\"=\",\"mfg\")]}"
msgstr "{\"invisible\":[(\"project_type\",\"!=\",\"mfg\")],\"readonly\":[(\"state\",\"!=\",\"draft\")],\"required\":[(\"project_type\",\"=\",\"mfg\")]}"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "NAME 描述"
msgstr "NAME 描述"

#. module: metro_mrp_drawing
#: model:email.template,report_name:metro_mrp_drawing.email_template_purchase_confirm
msgid "Purchase_Order_${(object.name or '').replace('/','_')}"
msgstr "Purchase_Order_${(object.name or '').replace('/','_')}"

#. module: metro_mrp_drawing
#: selection:drawing.order,state:0
msgid "Bom Uploaded"
msgstr "Bom Uploaded"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Ordered Not Approved"
msgstr "Ordered Not Approved"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "STOCK QTY 库存数量"
msgstr "STOCK QTY 库存数量"

#. module: metro_mrp_drawing
#: view:mrp.production:0
#: view:project.task:0
msgid "P – Prepared Q-ty, D – Done Q-ty, N – Need Q-ty"
msgstr "P – Prepared Q-ty, D – Done Q-ty, N – Need Q-ty"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_group
msgid "pur.req.group"
msgstr "pur.req.group"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Reuse PDF"
msgstr "Reuse PDF"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_product_pr_reserved_ids
#: view:product.product:0
#: field:product.product,pr_reserved_ids:0
#: view:pur.req.reserve:0
msgid "PR Reserved"
msgstr "PR Reserved"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,amount_total:0
msgid "Amount"
msgstr "Amount"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_move_po_line_wizard_po_line_ids
#: field:move.po.line.wizard,po_line_ids:0
msgid "Move Purchase Order Lines"
msgstr "Move Purchase Order Lines"

#. module: metro_mrp_drawing
#: field:drawing.order,purchoem_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchoem_type_qty
msgid "POEM Qty"
msgstr "POEM Qty"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "* Purchase Requisition are in draft"
msgstr "* Purchase Requisition are in draft"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Upload DXF"
msgstr "Upload DXF"

#. module: metro_mrp_drawing
#: view:project.task:0
#: view:pur.req:0
msgid "Done"
msgstr "完成"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_request_date
#: field:purchase.order,request_date:0
msgid "Requested Date"
msgstr "Requested Date"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_mrp_bom
msgid "Bill of Material"
msgstr "物料清单"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_task_deadline_wizard
#: view:task.deadline.wizard:0
msgid "Task Deadline Wizard"
msgstr "Task Deadline Wizard"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Wa_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Wa_done_qty
msgid "Wa D"
msgstr "Wa D"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_link_po_to_pr_wizard
msgid "Link PO TO PR Wizard"
msgstr "Link PO TO PR Wizard"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Total Untaxed amount"
msgstr "总未完税金额"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "Q-ty Done 完成数量"
msgstr "Q-ty Done 完成数量"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "图纸发行"
msgstr "图纸发行"

#. module: metro_mrp_drawing
#: view:warehouse.task.report:0
msgid "Fill Done Qty"
msgstr "Fill Done Qty"

#. module: metro_mrp_drawing
#: field:drawing.order.line,drawing_file_name:0
#: field:drawing.order.line,dxf_file_name:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_drawing_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_dxf_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_drawing_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_drawing_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_drawing_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_drawing_file_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_drawing_file_name
#: field:product.do.line,drawing_file_name:0
#: field:project.task.line,drawing_file_name:0
#: field:pur.req.line,drawing_file_name:0
#: field:purchase.order.line,drawing_file_name:0
#: field:warehouse.task.report.line,drawing_file_name:0
msgid "Drawing PDF Name"
msgstr "PDF图纸 Name"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_project_task_completion
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_project_task_completion
msgid "Dispatcher Window"
msgstr "Dispatcher Window"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp1_kpi
#: field:project.mfgtask.report,emp1_kpi:0
msgid "Employee #1 KPI"
msgstr "Employee #1 KPI"

#. module: metro_mrp_drawing
#: field:drawing.order.history,vals:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_history_vals
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_modifyhistory_vals
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_history_vals
#: field:project.task.modifyhistory,vals:0
#: field:pur.req.history,vals:0
msgid "Update Values"
msgstr "Update Values"

#. module: metro_mrp_drawing
#: field:drawing.order.line,color:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_color
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_color
#: field:warehouse.task.report.line,color:0
msgid "Color"
msgstr "Color"

#. module: metro_mrp_drawing
#: view:update.do.bom:0
msgid "Update"
msgstr "Update"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_pur_req_all
msgid "Purchase Requisitions - All"
msgstr "Purchase Requisitions - All"

#. module: metro_mrp_drawing
#: field:warehouse.task.report.line,part_number:0
msgid "Part Number"
msgstr "部件编号"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "TEAM NAME 组别:"
msgstr "TEAM NAME 组别:"

#. module: metro_mrp_drawing
#: view:force.close.task.wizard:0
msgid "Please fill the MFG IDs"
msgstr "Please fill the MFG IDs"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_drawing_order_line
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_order_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_order_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_order_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_order_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_order_line_id
#: field:pr.generate.po.wizard.po.line,order_line_id:0
#: field:project.task.line,order_line_id:0
#: field:pur.req.line,order_line_id:0
#: field:purchase.order.line,order_line_id:0
#: field:warehouse.task.report.line,order_line_id:0
msgid "Drawing Order Line"
msgstr "Drawing Order Line"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Upload PDF"
msgstr "Upload PDF"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp4_kpi
#: field:project.mfgtask.report,emp4_kpi:0
msgid "Employee #4 KPI"
msgstr "Employee #4 KPI"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:pur.req:0
msgid "Description/Notes"
msgstr "描述、备注"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Update PDF"
msgstr "Update PDF"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_mrp_production
msgid "Manufacturing Order"
msgstr "生产单"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "UNITS Q-TY 单位数量:"
msgstr "UNITS Q-TY 单位数量:"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: selection:drawing.order,state:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,state:0
#: view:project.mfgtask.report:0
#: selection:project.mfgtask.report,state:0
#: selection:project.mfgtask.report.line,state:0
#: view:project.task.completion:0
#: selection:project.task.completion,state:0
#: view:warehouse.task.report:0
#: selection:warehouse.task.report,state:0
#: selection:warehouse.task.report.line,state:0
msgid "Cancelled"
msgstr "Cancelled"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: view:pur.req:0
#: selection:pur.req.line,part_type:0
msgid "PMS"
msgstr "PMS"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "单位"
msgstr "单位"

#. module: metro_mrp_drawing
#: field:drawing.order.line,K_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_K_need_qty
msgid "K N"
msgstr "K N"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Hide not aluminum parts"
msgstr "Hide not aluminum parts"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "Update Quantity"
msgstr "Update Quantity"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Manual PO"
msgstr "Manual PO"

#. module: metro_mrp_drawing
#: selection:project.task.line,state:0
msgid "On Working"
msgstr "On Working"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Request Missing ERP No"
msgstr "Request 未知料号"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_supplier_prod_name
msgid "Supplier Product Name"
msgstr "供应商产品名称"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_reserved_qty
#: field:warehouse.task.report.line,reserved_qty:0
msgid "Reserved Qty"
msgstr "订购量"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_pur_req_line_set_supplier
#: view:pur.req:0
#: view:set.pr.line.supplier.wizard:0
msgid "Set Supplier"
msgstr "Set Supplier"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_available_quantity
#: field:pur.req.line,available_quantity:0
msgid "Qty Available"
msgstr "Qty Available"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pr_generate_po_wizard_po
msgid "PR Wizard Purchase Order"
msgstr "PR Wizard Purchase Order"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "START DATE 开始日期:"
msgstr "START DATE 开始日期:"

#. module: metro_mrp_drawing
#: field:drawing.order,message_unread:0
#: field:missing.erpno,message_unread:0
#: field:project.mfgtask.report,message_unread:0
#: field:pur.req.reserve,message_unread:0
#: field:warehouse.task.report,message_unread:0
msgid "Unread Messages"
msgstr "Unread Messages"

#. module: metro_mrp_drawing
#: field:missing.erpno,date:0
#: field:product.do.line,date:0
#: field:project.mfgtask.report.line,date_create:0
#: field:project.task.completion,date:0
msgid "Date"
msgstr "Date"

#. module: metro_mrp_drawing
#: view:pr.send.email.wizard:0
msgid "Thickness/Length"
msgstr "Thickness/Length"

#. module: metro_mrp_drawing
#: view:task.partial.transfer.wizard:0
msgid "Please only keep lines you want to transfer"
msgstr "Please only keep lines you want to transfer"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "车型 UNIT:"
msgstr "车型 UNIT:"

#. module: metro_mrp_drawing
#: model:project.task.type,name:metro_mrp_drawing.mfg_miss_deadline
msgid "Missed Deadline"
msgstr "Missed Deadline"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_purchase_form_action2
msgid "PO New Menu"
msgstr "采购单新菜单"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_task_deadline_wizard_task_ids
#: field:task.deadline.wizard,task_ids:0
msgid "Tasks"
msgstr "Tasks"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "QTY. 1 Unit 1台的数量"
msgstr "QTY. 1 Unit 1台的数量"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "{\"invisible\":[(\"project_type\",\"!=\",\"mfg\")],\"readonly\":[(\"state\",\"!=\",\"draft\")]}"
msgstr "{\"invisible\":[(\"project_type\",\"!=\",\"mfg\")],\"readonly\":[(\"state\",\"!=\",\"draft\")]}"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_history_content
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_modifyhistory_content
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_history_content
msgid "Content"
msgstr "内容"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:project.task:0
msgid "(lines)"
msgstr "(lines)"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "PARTS NOT DONE"
msgstr "PARTS NOT DONE"

#. module: metro_mrp_drawing
#: help:drawing.order,purchml_type_qty:0
msgid "PML – Long Material"
msgstr "PML – Long Material"

#. module: metro_mrp_drawing
#: field:generate.pr.wizard,delivery_date:0
#: field:generate.pr.xls.wizard,delivery_date:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_wizard_delivery_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_xls_wizard_delivery_date
msgid "Delivery Date"
msgstr "Delivery Date"

#. module: metro_mrp_drawing
#: constraint:hr.department:0
msgid "Code is invalid!"
msgstr "Code is invalid!"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Update Missing ERP No"
msgstr "Update 未知料号"

#. module: metro_mrp_drawing
#: view:fix.pdf.dxf.corrupt.wizard:0
msgid "Fix Pdf and Dxf Corrupt"
msgstr "Fix Pdf and Dxf Corrupt"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req
msgid "Purchase Requisitions"
msgstr "采购申请"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_note
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_upload_multi_drawings_note
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_upload_multi_dxfs_note
#: field:pur.req.line,note:0
#: field:upload.multi.drawings,note:0
msgid "Note"
msgstr "备注"

#. module: metro_mrp_drawing
#: view:pur.req:0
#: view:pur.req.line:0
msgid "Not Ordered"
msgstr "Not Ordered"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_req_reserved_ids
#: view:pur.req:0
#: field:pur.req,req_reserved_ids:0
msgid "Reserved Products"
msgstr "Reserved Products"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_task_prepare_qty
#: view:project.task:0
#: field:project.task.completion.line,task_prepare_qty:0
msgid "Total Prepare Quantity"
msgstr "Total Prepare Quantity"

#. module: metro_mrp_drawing
#: view:fix.pdf.dxf.corrupt.wizard:0
msgid "'Corrupted Pdf lines"
msgstr "'Corrupted Pdf lines"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Total:"
msgstr "总共:"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_warehouse_task_report
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_warehouse_task_report
msgid "Warehouse Tasks"
msgstr "仓库任务"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_send_email_wizard_attach_pdf
#: field:pr.send.email.wizard,attach_pdf:0
msgid "Attach PDF"
msgstr "Attach PDF"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_set_pr_line_supplier_wizard
msgid "Set PR Line Supplier Wizard"
msgstr "Set PR Line Supplier Wizard"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "NET"
msgstr "NET"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: view:pur.req:0
#: selection:pur.req.line,part_type:0
msgid "PML"
msgstr "PML"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_quantity_per_unit
#: field:pur.req.line,quantity_per_unit:0
msgid "Quantity Per Unit"
msgstr "Quantity Per Unit"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "TEAM LEADER"
msgstr "TEAM LEADER"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "* PO must be in draft state"
msgstr "* PO must be in draft state"

#. module: metro_mrp_drawing
#: field:drawing.order,create_date:0
#: field:drawing.order.line,create_date:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_create_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_create_date
msgid "Creation Date"
msgstr "创建日期"

#. module: metro_mrp_drawing
#: help:pur.req,delivery_date:0
msgid "Scheduled date filled by Purchaser (when he can deliver the goods)"
msgstr "Scheduled date filled by Purchaser (when he can deliver the goods)"

#. module: metro_mrp_drawing
#: view:drawing.step:0
msgid "Search Drawing Steps"
msgstr "Search Drawing Steps"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_warehouse_task_report
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_report_id
#: view:warehouse.task.report:0
#: field:warehouse.task.report.line,report_id:0
msgid "Warehouse Task Report"
msgstr "仓库任务 Report"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From Normal PR"
msgstr "From Normal PR"

#. module: metro_mrp_drawing
#: field:drawing.order.history,date:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_history_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_modifyhistory_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_history_date
#: field:project.task.modifyhistory,date:0
#: field:pur.req.history,date:0
msgid "Modified Date"
msgstr "Modified Date"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_fulllist_selected
msgid "Print Warehouse Fulllist"
msgstr "Print Warehouse Fulllist"

#. module: metro_mrp_drawing
#: view:pr.send.email.wizard:0
msgid "Total Quantity"
msgstr "Total Quantity"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "TOTAL 合"
msgstr "TOTAL 合"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "描述/备注："
msgstr "描述/备注："

#. module: metro_mrp_drawing
#: field:drawing.order.line,G_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_G_prepare_qty
msgid "G P"
msgstr "G P"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "型号"
msgstr "型号"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "UOM"
msgstr "UOM"

#. module: metro_mrp_drawing
#: field:drawing.order,sale_product_ids:0
#: field:drawing.order.line,sale_product_ids:0
#: field:pr.generate.po.wizard.po.line,mfg_ids:0
#: field:warehouse.task.report,mfg_ids:0
msgid "MFG IDs"
msgstr "产品ID"

#. module: metro_mrp_drawing
#: selection:product.do.line,type:0
msgid "Manual Upload"
msgstr "Manual Upload"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "制造编号"
msgstr "制造编号"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "* PR suppliers contain this PO supplier"
msgstr "* PR suppliers contain this PO supplier"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_res_company
msgid "Companies"
msgstr "公司"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "{\"readonly\":[(\"state\",\"!=\",\"draft\")],\"required\":True}"
msgstr "{\"readonly\":[(\"state\",\"!=\",\"draft\")],\"required\":True}"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_move_po_line_wizard
#: view:move.po.line.wizard:0
msgid "Move PO Line Wizard"
msgstr "Move PO Line Wizard"

#. module: metro_mrp_drawing
#: field:drawing.order.line,drawing_download:0
#: field:drawing.order.line,drawing_file:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_drawing_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_drawing_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_drawing_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_drawing_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_drawing_file2
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_drawing_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_drawing_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_drawing_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_drawing_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_line_drawing_file
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_drawing_download
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_drawing_file
#: field:product.do.line,drawing_file:0
#: view:product.product:0
#: field:project.task.line,drawing_download:0
#: field:project.task.line,drawing_file:0
#: field:pur.req.line,drawing_download:0
#: field:pur.req.line,drawing_file:0
msgid "Drawing PDF"
msgstr "图纸"

#. module: metro_mrp_drawing
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_req_canada
#: view:pur.req:0
#: selection:pur.req,pr_type:0
#: selection:pur.req.line,pr_type:0
#: selection:purchase.order,pr_type:0
msgid "Canada PR"
msgstr "加拿大申请"

#. module: metro_mrp_drawing
#: view:drawing.step:0
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_drawing_step
msgid "Drawing Steps"
msgstr "Drawing Steps"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "{\"readonly\":[(\"state\",\"!=\",\"draft\")]}"
msgstr "{\"readonly\":[(\"state\",\"!=\",\"draft\")]}"

#. module: metro_mrp_drawing
#: field:drawing.order,prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_prepare_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_prepare_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_prepare_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_prepare_qty
#: field:project.mfgtask.report.line,prepare_qty:0
#: field:project.task.line,prepare_qty:0
#: field:warehouse.task.report.line,prepare_qty:0
msgid "Prepare Qty"
msgstr "需准备量"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp3
#: field:project.mfgtask.report,emp3:0
msgid "Employee #3"
msgstr "Employee #3"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Stock Quantity"
msgstr "已有 库存量"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_po_send_email_wizard_attach_bom_xls
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_send_email_wizard_attach_bom_xls
#: field:po.send.email.wizard,attach_bom_xls:0
#: field:pr.send.email.wizard,attach_bom_xls:0
msgid "Attach BOM XLS"
msgstr "Attach BOM XLS"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_fix_pdf_dxf_corrupt_wizard
msgid "Fix Pdf Dxf Corrupt Wizard"
msgstr "Fix Pdf Dxf Corrupt Wizard"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Wa_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Wa_need_qty
msgid "Wa N"
msgstr "Wa N"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_price
msgid "Unit Price"
msgstr "单价"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:pur.req:0
msgid "Description/Notes..."
msgstr "描述、备注..."

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Fix PDF-DXF"
msgstr "Fix PDF-DXF"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_missing_selected
msgid "Print Warehouse Missing"
msgstr "Print Warehouse Missing"

#. module: metro_mrp_drawing
#: selection:drawing.order,state:0
msgid "Pdf Uploaded"
msgstr "Pdf Uploaded"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "TEAM NAME"
msgstr "TEAM NAME"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_reject_message
msgid "Rejection Message"
msgstr "拒绝信息"

#. module: metro_mrp_drawing
#: view:link.po.to.pr.wizard:0
msgid "Please note that:"
msgstr "Please note that:"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_task_partial_transfer_wizard_task_lines
#: view:task.partial.transfer.wizard:0
#: field:task.partial.transfer.wizard,task_lines:0
msgid "Task lines"
msgstr "任务内容"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_time_spent
#: field:project.mfgtask.report.line,time_spent:0
msgid "Time Spent"
msgstr "Time Spent"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: view:work.order.cnc:0
msgid "Total Qty"
msgstr "Total Qty"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "总价"
msgstr "总价"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_email_template
msgid "Email Templates"
msgstr "电子邮件模板"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "NOTES 备注"
msgstr "NOTES 备注"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:mrp.production:0
msgid "Reject"
msgstr "Reject"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Reference"
msgstr "引用"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "ALL SUPPLIERS"
msgstr "ALL SUPPLIERS"

#. module: metro_mrp_drawing
#: field:drawing.order.line,item_no:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_item_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_item_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_item_no
#: field:project.task.completion.line,item_no:0
#: field:project.task.line,item_no:0
msgid "Item No."
msgstr "Item No."

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_days_progress
#: field:pur.req,days_progress:0
msgid "Days in progress"
msgstr "周期"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_sale_product_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_sale_product_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_mfg_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_mfg_ids
msgid "MFG IDs"
msgstr "生产ID"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mo_select_do_wizard_mo_big_subassembly_ids
#: field:mo.select.do.wizard,mo_big_subassembly_ids:0
msgid "MO Big Sub Assembly"
msgstr "MO 部件总成"

#. module: metro_mrp_drawing
#: field:drawing.order,purchml_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchml_type_qty
msgid "PML Qty"
msgstr "PML Qty"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "* Purchase Requisition have same type, same MO, same delivery date, same unit, same ids and same warehouse"
msgstr "* Purchase Requisition have same type, same MO, same delivery date, same unit, same ids and same warehouse"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
msgid "Employee 4"
msgstr "Employee 4"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "APPROVED BY 由审批:"
msgstr "APPROVED BY 由审批:"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_mo_id
msgid "Manufacture Order"
msgstr "生产单"

#. module: metro_mrp_drawing
#: field:hr.department,code:0
msgid "Code"
msgstr "Code"

#. module: metro_mrp_drawing
#: field:drawing.order,bom_error:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_bom_error
msgid "Bom error"
msgstr "Bom error"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_supplier_prod_id
msgid "Supplier Product ID"
msgstr "供应商产品"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_uom_id
msgid "Unit of Measure"
msgstr "单位"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "ASSIGNED TO"
msgstr "负责采购"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mrp_production_delivery_date
#: field:mrp.production,delivery_date:0
msgid "Delivery Date(ETA)"
msgstr "Delivery Date(ETA)"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp2
#: field:project.mfgtask.report,emp2:0
msgid "Employee #2"
msgstr "Employee #2"

#. module: metro_mrp_drawing
#: selection:task.print,report_mode:0
msgid "List of Issued Drawings 发布图纸清单"
msgstr "List of Issued Drawings 发布图纸清单"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_res_company_stamp_portrait
#: field:res.company,stamp_portrait:0
msgid "Company Stamp Portrait"
msgstr "Company Stamp Portrait"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_confirm_set_pr_line_supplier_wizard
msgid "Confirm Set Supplier"
msgstr "Confirm Set Supplier"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_rfq_sent
#: field:pur.req,rfq_sent:0
msgid "RFQ Sent"
msgstr "RFQ Sent"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,supplier_delay:0
msgid "Supplier Lead Time"
msgstr "Supplier Lead Time"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_project_task_completion_line
msgid "Project Task Completion Line"
msgstr "Project Task Completion Line"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ct_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ct_prepare_qty
msgid "Ct P"
msgstr "Ct P"

#. module: metro_mrp_drawing
#: field:drawing.order.line,part_number:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_part_number
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_line_name
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_part_number
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_part_number
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_part_number
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_part_number
#: field:missing.erpno.line,name:0
#: field:project.task.completion.line,part_number:0
#: field:project.task.line,part_number:0
#: field:pur.req.line,part_number:0
msgid "Part Number"
msgstr "工程料号"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Start Date"
msgstr "Start Date"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_pr_type
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_pr_type
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_pr_type
#: field:pur.req,pr_type:0
#: field:pur.req.line,pr_type:0
#: field:purchase.order,pr_type:0
msgid "PR Type"
msgstr "请购类别"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_warehouse_task_print_transfer
msgid "Print Transfer"
msgstr "Print Transfer"

#. module: metro_mrp_drawing
#: help:purchase.order,payment_date:0
msgid "Date of full payment. PO Should be paid not later than this date"
msgstr "Date of full payment. PO Should be paid not later than this date"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_line_item_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_item_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_item_no
#: field:missing.erpno.line,item_no:0
#: field:pur.req.line,item_no:0
#: field:warehouse.task.report.line,item_no:0
msgid "Item No"
msgstr "Item No"

#. module: metro_mrp_drawing
#: field:drawing.order,workorder_id:0
#: field:project.mfgtask.report.line,workorder_id:0
#: field:warehouse.task.report,workorder_id:0
msgid "Work Order"
msgstr "Work Order"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From Outsourcing PR"
msgstr "From Outsourcing PR"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Days left"
msgstr "Days left"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:12
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:42
#, python-format
msgid "99+"
msgstr "99+"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_upload_multi_drawings
#: model:ir.model,name:metro_mrp_drawing.model_upload_multi_drawings
#: view:upload.multi.drawings:0
msgid "Upload multi drawings"
msgstr "Upload multi drawings"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_po_need_count
#: field:pur.req,po_need_count:0
msgid "Need to generate PO count"
msgstr "需建采购订单量"

#. module: metro_mrp_drawing
#: field:fix.pdf.dxf.corrupt.wizard,dxf_attachment_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_fix_pdf_dxf_corrupt_wizard_dxf_attachment_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_upload_multi_dxfs_attachment_ids
#: field:upload.multi.dxfs,attachment_ids:0
msgid "DXFs"
msgstr "DXFs"

#. module: metro_mrp_drawing
#: field:drawing.order,reject_message:0
msgid "Rejection Message"
msgstr "Rejection Message"

#. module: metro_mrp_drawing
#: view:project.task:0
#: view:warehouse.task.report:0
msgid "Full Transfer"
msgstr "Full Transfer"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_hr_department_code
msgid "Code"
msgstr "代码"

#. module: metro_mrp_drawing
#: help:purchase.order,deposit_date:0
msgid "Date of deposit. Need to send money on this date to start the order"
msgstr "Date of deposit. Need to send money on this date to start the order"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Project Name"
msgstr "Project Name"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,supplier_prod_code:0
msgid "Supplier Product Code"
msgstr "Supplier Product Code"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Fc_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Fc_done_qty
msgid "Fc D"
msgstr "Fc D"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_state
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_state
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_state
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_state
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_state
#: field:project.mfgtask.report,state:0
#: field:project.task.completion,state:0
#: field:project.task.line,state:0
#: field:warehouse.task.report,state:0
#: field:warehouse.task.report.line,state:0
msgid "State"
msgstr "状态"

#. module: metro_mrp_drawing
#: field:generate.pr.xls.wizard,filename:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_generate_pr_xls_wizard_filename
msgid "Filename"
msgstr "Filename"

#. module: metro_mrp_drawing
#: field:missing.erpno.line,product_id:0
#: field:pr.generate.po.wizard.po.line,product_id:0
#: field:product.do.line,product_id:0
#: field:project.task.completion.line,product_id:0
#: field:project.task.line,product_id:0
#: field:pur.req,product_id:0
#: field:pur.req.move1,product_id:0
#: field:pur.req.move2,product_id:0
#: field:pur.req.move3,product_id:0
#: field:pur.req.reserve,product_id:0
#: field:upload.multi.drawings,product_id:0
#: field:warehouse.task.report.line,product_id:0
msgid "Product"
msgstr "涉及零部件"

#. module: metro_mrp_drawing
#: field:pur.req.line,mo_id:0
msgid "Manufacturer Order"
msgstr "生产订单"

#. module: metro_mrp_drawing
#: view:po.send.email.wizard:0
#: view:pr.send.email.wizard:0
msgid "Compose"
msgstr "Compose"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp3_kpi
#: field:project.mfgtask.report,emp3_kpi:0
msgid "Employee #3 KPI"
msgstr "Employee #3 KPI"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_transfer_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_done_qty
#: field:project.task.line,transfer_qty:0
#: field:warehouse.task.report.line,done_qty:0
msgid "Transfer Qty"
msgstr "调用量"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "期限"
msgstr "期限"

#. module: metro_mrp_drawing
#: field:drawing.order.line,D_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_D_need_qty
msgid "D N"
msgstr "D N"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_ordered_count
#: field:pur.req,ordered_count:0
msgid "Ordered Count"
msgstr "Ordered Count"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_prepare_qty
#: field:project.task.completion.line,prepare_qty:0
msgid "Remain Prepare Quantity"
msgstr "Remain Prepare Quantity"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Generated PRs"
msgstr "Generated PRs"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Fc_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Fc_prepare_qty
msgid "Fc P"
msgstr "Fc P"

#. module: metro_mrp_drawing
#: model:project.task.type,name:metro_mrp_drawing.mfg_in_progress
msgid "In Progress"
msgstr "In Progress"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: selection:drawing.order,state:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,state:0
msgid "Approved"
msgstr "Approved"

#. module: metro_mrp_drawing
#: view:pur.req.line:0
msgid "Canada PR"
msgstr "Canada PR"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_estimate_qty_remain
#: field:pur.req.line,estimate_qty_remain:0
msgid "Remain Qty"
msgstr "Remain Qty"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,state:0
#: field:drawing.order.line,state:0
#: field:drawing.order.line,status:0
#: field:project.mfgtask.report.line,state:0
msgid "Status"
msgstr "Status"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_task_print_is_full_mode
#: field:task.print,is_full_mode:0
msgid "Is full mode report?"
msgstr "Is full mode report?"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.mfg_product_normal_action
#: view:product.product:0
#: view:pur.req:0
msgid "Products"
msgstr "产品"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:22
#: view:print.pr.mfg.wizard:0
#, python-format
msgid "Print"
msgstr "Print"

#. module: metro_mrp_drawing
#: view:drawing.order.line:0
msgid "Search Drawing Order Lines"
msgstr "Search Drawing Order Lines"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Hide existing erpno"
msgstr "隐藏ERP料号"

#. module: metro_mrp_drawing
#: field:drawing.order,purchmc_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchmc_type_qty
msgid "PMC Qty"
msgstr "PMC Qty"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_po_send_email_wizard_po_id
msgid "PO"
msgstr "采购单"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp4
#: field:project.mfgtask.report,emp4:0
msgid "Employee #4"
msgstr "Employee #4"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_brief_name
#: field:pur.req,brief_name:0
msgid "Brief Name (简称) "
msgstr "Brief Name (简称) "

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: selection:drawing.order,state:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,state:0
#: view:project.mfgtask.report:0
#: selection:project.mfgtask.report,state:0
#: selection:project.mfgtask.report.line,state:0
#: view:project.task.completion:0
#: selection:project.task.completion,state:0
#: view:warehouse.task.report:0
#: selection:warehouse.task.report,state:0
#: selection:warehouse.task.report.line,state:0
msgid "Draft"
msgstr "Draft"

#. module: metro_mrp_drawing
#: view:confirm.set.pr.line.supplier.wizard:0
msgid "Confirm Set Supplier for PR Line"
msgstr "Confirm Set Supplier for PR Line"

#. module: metro_mrp_drawing
#: view:generate.pr.xls.wizard:0
#: model:ir.model,name:metro_mrp_drawing.model_generate_pr_xls_wizard
msgid "Generate PR From Xls Wizard"
msgstr "来自表格的申请项 Wizard"

#. module: metro_mrp_drawing
#: field:drawing.order.line,K_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_K_prepare_qty
msgid "K P"
msgstr "K P"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:17
#, python-format
msgid "Fold"
msgstr "Fold"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From MFG-O PR"
msgstr "From MFG-O PR"

#. module: metro_mrp_drawing
#: field:drawing.order,purchs_type_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_purchs_type_qty
msgid "PS Qty"
msgstr "PS Qty"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "iVBORw0KGgoAAAANSUhEUgAAAbgAAAB2CAIAAAA1PRGUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlz                 AAAOwgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xMK0KCsAAAN+NSURB                 VHhe7L0HnBXFtvZ9wj3ZBEzaOc4MQRCzgjlgjscsCJJzzjA5zzBEUczhmDNmMWDOGSOiogJmkTRM                 3t+/+tlTtsPAAbz3fc93X9evp6e6umrVqqq1nlqru3f375qbmxMt5E5vD1G6MZFocPZsycr8a25K                 bomft2Zna2pq+G3b+sYQOeNntobmRC1bwuzrNbT2XHIzA/sb/Ua/0f8UNTY2YpUkfkdKWTtBmKog                 8meUNKYLcmLY2oydO1s91u4YvIObMvLf9q33ZhxZrUg6G1ipYWRIHWLwWs6ZzRz/Rr/Rb/Q/Tr9L                 /t9Z+tlmDQkigcWaRGKjs5Ewm5wjg5VNDc2NTc2Nid/2W+6bWHCazJ7Fq4Gtqb6xuc4Z1RZA/A0o                 f6Pf6P8GJYES91Ie5q8gqmPS8h+T+NjiS+IZsZm48jfaFuFL4lmyOU6luVRhnHUGtmVq+G9R0ozm                 r5yy3+g3+o22RQ0N5oIYif8WoKQimzviVrRoGMqiTXjenIzQdbHy/5ktOQLbudXVJhrqjFNpA/CW                 4XWI/7aoOdeS/xv9Rr/R/yQlb+bs6G2cFpINg4l2M6abNGTHP2p0tgb2DSac/GJVw8rVtV+sqvt/                 Y1/n9LdhO/dfrGpasybxw3eJjRsS9fUGZRlGFrDGRhYehzTeyfHV8W/0G/1G/4OEAeJX/sprlBhq                 /cZ13wKRm2s2GpcU2ybMdsBx/YbEZ58lnn3m26uufHHipJsG9b9s4ICrTzq5+oST55100oJW++OP                 n9vrhNn/6/Zzzf74+ccfP3/L/fEnXnLiiZccd8KCXr3mHtNr7gknLDj11Fm9jhl58UXT1v7gOJUC                 w0SipmZjciFTIO6caGaIHaDUIrdp0yb29fX1dXV1puRWyMYNSlBeeyXWr19vC4jhvyXbOhVFypcY                 aJgOIZ2qqanRIVRbW8uefIrBR4WpqJLi3Mgq4cimu44qwyl7E5IEh6piObAnRxzYqyFItVR48+bN                 tgnlq6G1a9ey1ylYKXNrZFuxTdhOsXfXtSW3RnbAKWaJQyrq1MaNG53zJgfhSWzYsEE56oLKb42s                 ABptSQhRUWkSP/30kzIhdcROB+Suwt5OMfl2juw4qC3lUwYioZLi8/3337MXqTsiVURPVJfC2+7X                 vyWNm3sudoJ+LVA21K5jSBvqHe1vTqz9EXU3nuOa1Ymrrn79hBPyQqELvd4LgoGLvZ6+KR0uTksf                 l5I+ecutQ9qk/6XblDa39ql0OZlulzKJjZz0jKGR0KmjR5Su/8kAZV19op41x6Bhi644R8a/ZDWq                 q2+oN0rpth+0QTpH+TaJU1iXWy+pIiWW3q9evZqEcrZBsKLiljiCDBAJaxjswV/oM5bNFrIySxJr                 XXCzSCrLX7cOBUuS7BOiPPwpbHMgKqqDrdJuIhOR1EESOnRDmwYBab/99ls7SirWJnH2hx9+YE9a                 wtgBEYqRT86PP/749ddfK79NQh4rc6vBh617kFVGcq5Zs+abb74hYRFz20QtMNciMg2Rhjk8baO2                 1+qOmhOpjJoWuc+60wwpxSxbDY6EVI72tGXbtWKwh5QJkaauMrefUDDVSnJxumPb2gn61R5lM8Na                 24TtNifq65AGG0hce91bHTsODAQvTk8HH4eFAuMiwUmZ0RkdOxaGM/NDWQX/D22ZRW1u4aziVulg                 vDAYHx/0n3TtVQ83NaAfAGVzfSN6g74a22be62vNU0R1m1u8zeYkxKDu2OHkyZNjsRhGLpPbGiVn                 rsWwrfbA6s033+zevfuBBx54++23u43z3xLcaJe90tpD0v633nprzz337Nq163XXXYeo5MtWaXHR                 okVjxoxZtWqV4dLiVWnvFo+05KEK1UmIZLRYIF0uLi4eNWrU4sWLbR+VkAyOOAYZZcAY0sqVK19/                 /XWVVFsyb+X07t374IMPfvTRRy2m/1uSkUs8zYsy2ZeXl++zzz5XXnklBdokFYZII7CYSCplsocn                 CRjqLIkTTjghGo1ecsklTinTU9PJtsgWECtyNMi2aSuwgJIh1UAp00oCqaRYKV97psCcdrUiQjGS                 KYc4pSY+/vhj5WiItBepCUn4K0m2AHN3F3aCfn3oXfvTWkJvRgeZDEpeddVbWVmDO3eaFM+cGovl                 xOIFkUhBMJgbDOaHY4WeUE56uI0tLTTzf/WW22rviRZkREjk0nfSnmheajAnzT98/wMGvvfOD7rx                 7VyjZAdAoENG1w1mNic2b3KWJfz4WmPV6AE6fdttt/3tb3/74x//eMQRR1jD2JKsPZCQZqPW7FXl                 X//61+8cuvfeey1ktEmoHQQTSCWtbdjWlcMebvD8wx/+cNVVV+kURDFwyu/3c2qvvfZ6+eWXW4kt                 tgSDTz311NKlS1988cVXXnnlpZdeeu6555599tknn3zyu+++U0kIMWACq2nTppFWphiqg60I5ocd                 dhjlFy5cKJcQEiay//LLLzt37szZmTNntlndkrwkTFpWLWtsZflvvPFGIBCAW2VlpXK2JLXCXhws                 2THhlHtGcLRZftq3bw/boqIiBrkVHrUixoQylhsDSMdZty6//HIm5bLLLps7d+4VV1xxyy23IPan                 n37KODPaTz/9NPPC4EPkcKiRf/7555csWbJs2TJxk/DqL2k7/pL5jjvueOaZZ3RBQ0PNoI0bN+7I                 I49kYVYx9doqjDiILaP30EMPMek7ROgM9MILL5B+9dVXkZk5hdtO03/HNcoN67BbbJh+lZcviUQH                 EEJ6vBMJqNM9uZFYecfO8zKzZ/kCBe3TpgXjpW1ugVjJ/96taMt9KLOMvT9arHQwXuyLFHnDo48+                 Zvy3X5sbXwwmWkOEzQizNTRuRgMBR+WyNTU493paCPPu06cPZgNdeumlBsbaIkqif20aFXrfpUsX                 qp999tmySavx6K4ISxMpvxWJLfxbFcAg//KXvwDiV199NadkANAXX3yRk5Pzpz/9CYjPyMjIy8uT                 OVHAYs2tt97KWaQCZ9n/13/91+9//3sSf/7znzlFGcE9dr6bQ4Ayh5AgDBIrhEc8pany+eef447R                 NKx69er12WefWc+Rilgm+TQEOpBjBW6T4MyeEdP4kHaPMC0CQ3DD9fvkk0/M2LVFKmwbUsICN5wl                 OWTnsV+/frA96KCDEF4chIZtklM1Scg2depU9Z1J0Z5Bpr/BYHD16tX5+fnKt8TgM+BK/+Mf/6Ak                 E/rPf/7TXtO0Abvti+R8/PHHfT4ftXB7JQZCgpu77LILk3XqqacqRz1SXTsREFX69+//97//HQF2                 iKQzlnbdddcFCxa0Gocdol8PlERwRgB6uuTR1VlZ/XfdvXfnLiWhSEk4Niscm+0LVaZ7i1K9+cFo                 SWaXan+42Bcu3nIfiJT4IyX/G/fFBg3b2oOMvlChN1zoDxcZlAwW+ENj+19cvXH9z49S1jfV4EGi                 SyTNaDcnNq7f1IBJoleMfbNxuDQTGD+xpJRyG56Ltbe33377rrvuwoUkVr3nnnsee+wxvCdp1ciR                 I0EKok7oYYc4hB506AGHwCPSysdluPvuu1ECq4jSexGZuC0AHJyvvfZaZVoIhsCRUCj017/+lQI4                 NW47gXBezjrrrEGDBhFWEw4PGTLkoosukhk88sgjFIA/ILX33ntjydg5Afg111xDQ/PnzyfUJbRn                 2YAtidmzZ+MTiS2EQ3reeeeBF5h9VlYWsCvM/f7777t164YlgwjEy8cdd9zhhx9+9FYIt+jEE0/U                 LNBr/Eo7CGAHhwSYkUgEad3e9NZIw0ItSQIxRyNGjBg9evTEiRMnTZo0fPjwoUOHAnMMCBIyqnQ8                 NzeXAmPHjgU6SbRJjBvr6LBhwwBr2M6YMQORWBfHjBnDvBcUFLBakBMOh5Efd09np0yZQsnp06cr                 wX7y5Mk0R6MUIHZRZ+m4TbAnbROMHiXxfF977TW7DHD24osvJj89PV0BuKqLVIwcxoGZRbajjjoK                 PjtETBniAcTHHnssDUHV1dXiv3P0K4GSDjm/JGlIfPFl4p//LElNO7/zngXBSGE0c24gMscXqvZF                 qyNZs0PZFb5IXop3KrDoD5UGQqWt9sFwWSBc9r9tHykJmjWgeMt9IFSkNCjpDxaCmOREohOvu/ZV                 QNAApTO0tQ2gBli5qb6BrealF14cM2rsmFHjRwwbPXb0hFEjRqO+LLkQSowxxONxlvozzjgDi2qT                 MBUs9scff5T7CUawXLOXMgmttIdgpUSbxLqdTDnuEvEaKGwNhgQkH+emm26Sz3LDDTcIqSkAkRAs                 EkViomi2vW4F4fhQN3nQAiLUwtQzMzPBCBBcgEJ4mJKS4paHHlmfCCgkLQfq/PPPB9RgohgQOwR/                 AUQKjB8/XtAGrHMIB5oAjKjVyj1pRQiDayxuwDRzAZYNHDgQDJowYcI555yjYqeffjpIxxy1SVQB                 zpgg8I7EzTffDEM8LLDP8ZD+YLsDadVBKpupvuM36XBL2mOPPdjT0yeeeAI5EYxDlhyNMB0fMGBA                 u3btwEEOEYCzffv2tePPsFiYI7OkpIS2cMlJI6SFdSXgpopMN8PIAlZaWsqY66z2iMEphnfatGkw                 J0d+pXVIaQ45lSYfnjtEVIcIDgi6Y7EY3SHmsN3ZCfq1QNnYUIdBY9tPPvGN3987Fp/s9U31Bgs9                 gXJfqMobmZURqkgPFeM3BeOF4axi/MpQpNTZjNepjUxgAgwNhIyD2bIvIgGManMgVflOOljuD5Wz                 bylgaqm8wLflUExMvtko794o7Li027+567paaeH/i0359MvdEZMTCBeEokWReEkkVhaOljlCFoVj                 hdmdJi5bVgdKokubauoByqYEulLb2IQmmej7umuu/euf//b73/2B7a9//gd7WUgrRAPp0MI2ibOs                 sagmXgPuZ+fOncFWTB2c4hTav/vuu5ODy0AmDhquFkSaTAidAxMh0lQJBAKcys7O7t69O8EsXiom                 sXDhQlZv9JJghwTOHbG8oAfnSPl4kSqDr4ejh+uHiRYVFVF43rx5c+bMwSkmvWrVKoAVF09eFU2g                 cgAlotJlmsOEyBk8eDA5yIYHcfLJJ7PH18PRY3/MMceccsophx12WNeuXRkrYMtR2yQJpnGHcVr1                 tMrrr79OSAi3nJycL7/88quvvlqzZg1rAAFpmwREUhELZO3B1BkN6grI6K9mB6Rwxt4MvhJbEqcE                 5SLWMy0M999/P84XkwWg4+mzHIJxwD3TRLGePXviaRIpC2EZJfZtkoAY+GZIQRC8QqozGoI50ITx                 ZI4YUhoF4jl77rnnkqYw+1ZUVlZGgeOPP95imUirIDjFnsnCkQTN9913X+WIlYVCRhgmEOPPofqr                 szaq0PUTqjPCO0QWu1999dWMjAxaQS2lLTtHvzb0rqszT2801iaK8x9rv9uAzMwKPCl/pIzo0hsr                 9LKPFisCDUby2UiE47hahbGOxYFojic0Jd650BedGYjm+qOcLfRHCwPRfJOO5pIAc8OxSjZvqMgT                 IJ/q5cFYlcdfFoxWE9oHwhW+oOHvFM5zAl7jysGKHJg47RYCzRmeIp+/wuOpCEfnReML0jJKIvFq                 GNLWllsosygQK/CGcz2hHHxh3ZUmQA6EqwKhWWbvOIym3eRWYnLCFc7enlJfik0+tUzFCoQJRnI9                 gakdu1RG4xXpnnx6lOHPSfVNOPaEirXrErWbHX/SoZYY22zff/8tgZiMEPdk2LAROC9YUZuEJ9Im                 4UTgMeGsoYtr164FCNijVbgPsCUEXrp06bfffrtu3To8L4Dg66+/fv/997/55htUFlCgFmmqUAAi                 egUgKMYeaRXQyYMjYQlHBsiQo4oDq7MCEbqjhNKcorAOSRPjwxYBdPaDDz5A1998800OMWzk4ZBo                 Wk4xTgqHMl05KZC184qKCvwXkEIGCVFShk1CmdS68MILYY6F62ke6yOLMGNr55AMj734sGdsgXj8                 Si0YBOZw69ChQ2FhITnIAMSwDFRVVSkBYJEPlZeXk4mnxuIBh4ceegiGVsJWROgtIRkZOijhBRAq                 IHxpJTl7mwPgwuG8886jCTLlIbL4qdcCShYPJho1QFvY44PLr2RhoDpjzvIjbpBk4KyaQGxWPmYc                 ZWAV1ClTziXDu+++K19vzz33fOedd3RVV8VQS/bwXLlypZYr9m0Sp9577z1kW7FiBfqAcpLJ2qaz                 KDY6I43S9XHT8E7RrwRKZrGGMOuTj5rPOm1+yh5j4tE5kficjECRN5bvjeWyN8DnQEkYpzJSaByo                 cFm6L9cbygEoA7EZ/tiM9OBUUKnlRoc2g1PsDQg66GOuZkaLzZ2fWFkgirtaGYhU+8OzcF1xIcPx                 knBmgT+SBygLpgE7wz+aAyqBlbHMysysuVnZl8RiCwBKj68yNb04HJsViJb64rRV1GofjBdnAOux                 okjninBWaWowJz2QE4rjSArvBJQOFJrtl0BpATQJu4X+cJU/NDfAFq4yQBnN8YWmxrKKWFS8vpJY                 dhUl23uGn3Phgo2bkuYnYmqtYqFDrL1MOWHUkiVL0EU0icwdIiFaK41BR3EJ4Yzzpdbtko63gkfJ                 XodiQgKprA1LQirOmjUrNTUVNxPA9fv9uFddunTB34SzyOv1ejye9PR0wBHgw3fD0cPp6NixIwLg                 wIIp2D8eayQSwat97rnn4AwyYm9wxrQ4fOaZZ0BJWGHV+BoXXHABnLFq/D4jjYswbNtTwIhigwYN                 Io2o2JV6ivCUoVOwuuWWWxCAYsTIb7zxBjD04Ycfvvbaa8uWLUMG9uR8/PHHiIFhk4/TxHiq+xoN                 jRvcyIRwpugpkbUcHFqk2D333JOXl3f77beT04ooxpyyFzdJqDTiiS3VUQAGDXRTFfaQCm9J8uY0                 DlTX3gKlKZFIaAwBbh3in4JxOK1MClhG6MAkMpvMCzO7zz77pKSkUB6fXeXVBALAWQsVigqSUgaP                 XqgN2QUJ2JXY9IUylDzppJOcIkkJlXjxxRdRCZSESUFt2iTkQRMohkgQJaG0tDSGqFevXvBh1ihD                 K9u4cL899Otv5tTW1SeWPrEqOz7Mlz45HKyKxqrT/aCkAUrBhFDDAGW42Ocv9/pBE+MGxrIrszoD                 dkX4mIAdobQ/WPXzFqpkCxK/B8o9fhOYmwg9Yi7n+UJFoSiIM4sC3oAJnwWUxi39BVDik4KVxjMl                 tvUFijuk5Hq8BOCVPr8J/000HTKYC59W+1C0mr0vWOFgXCVwDMbFsua1oGTFzz6jMNEcCiu3ApTh                 2YEQ/m+V42bmgJWhaIHXX0QUH8+q4nCPtIHjp9xdnwQfQ+gKyicVZw9dd911TDneE1aqMjtH1rog                 1FeeIHp2xx13KNOafe/evTmFI4aVWvSUYeBR6tCaKL4G2MHCzh6IAYwAL2CFIA6ZsYf77rsPU3np                 pZfQZhxGYm1KUgvHAb9AjgPygIAwIYcRoNc33ngjMhx44IG6sPjoo49y2KNHD3AQNwF/AavAcZAM                 lLeCWYIP3hy1CGA5fPDBBzEeGN55550qgFSPPPIIQECZE044ARPF/Nq1a8eh7pkoOobkDrMHAQ86                 6CD7BKgcIjcRWiIYQIOTrhwJRoAM0J988slCDYaahNJu0oIk15j50iF4fcghhyAAUoHmuJ+sYfPn                 z8chBXzxSWkURCgoKGBsQVL5qoAyw0J1wRB7C5RM5SuvvEJwyuwwWYhBDuG86arjxQOXSMtZXE7Q                 WSuWBoHQG26WxJyGWMVxTinAKsiKgnowp9IZSA82iOgXo0FJOOPLM+lkAqP0GnrqqafQSdBQTbdJ                 zAtDQYKhpjB7gJU9WnH44YfD7fnnn2flZrIYB6fNnaRfC5TmzWnNidtvWxb09Y8G84L+Cn9A3p8F                 SoEIobcBSoLlSGx+NHNuurcI+APy2qVOC0UNdBoQMf7a7GDQYAr7YGhWLD43GCJuLQ7FqFtofMZQ                 bjBaFIyWUisYAdd0nRF3MscXnrk1oAzHiiOxcl+gEFSKZdJWXjy72OOfgU8HFre5RaIIUAWw+gMV                 8cx5SGLSoLnZ1CjwXeDsi34GSiWS6Fm4BVBWGNSO5kQy85EBoAyFK0ORkgz/pDT/4EXXvGV+l9hC                 ggnpn+j6669Ha1ECgBIDs57LloR2tkkwkaZSRnCJT9SpUyeU9YwzzuDQjaEgI54aVjF48GDKK7PN                 BAaGqJByWhHQg4eC+n700Ucc4pSh+rR48803WyaQsIA+6tAScEBhkAUARSRgTocA8cEHH0ya2O3x                 xx/Hrp588skXXniBYNx5iu4pLBargwMdJ9TF7EePHo3Far2B8ETIkX2ySJCDUeE2gmh9+vQ59thj                 8XRo6LTTTmNwSBx33HH0hXyGhcTMmTNBeSaCXmhs2eNAkfPdd98xU7So2yOQBocCcKahnj17qr8i                 rUzuhBs67cAiBnWFU7qU4QZxiFOghtJKcBZEEweNNnu3RwmqkqaMugAResP89NNPxzF89dVXGU8G                 lj2+PKD/8MMP0wXgiXGgiuWs6gATgAVDsIklzfaCYrZrQn8FNyx+jCTlYXjqqaeuXr3adpZZuP/+                 +x977DEapfU2iUWXFlnkHnroIUpq0glEyGEBQCTkR9kYhEsvvdStbDtKv/pmTnPTps2JooJ7A77B                 ACWhd3pGYTizogUoQYqktyWgjMSrA8YTNE4imZHMcjINcrlu3YRw34Ll7NnCoZJgsDAUyjMuWHi6                 LzSZPSjjDcykSihWxgZOeQK5nvAMX8Rco2xBq+Q1Sm0pnimUiWWVZXUC+KZ4fGPj2ZPD0UlwDgWL                 t9y8nrxgoCgSLmVDBiNGoMjnxTO1N3YMPjqbOVQfXVsSKI0M7M0aAFCaa5QCSvxfXyjfHywJA/fB                 /LSMUfv3yH3x1drGrUwlc4zOMdnyZVAFN6LtEFn7lBL/61//0kUcxSZ4RrSFsqKm6BnrPAYPUEp9                 yaEWGq94CtBxW7tOYQbWJGBFer/99oN/586dgQ/K4IXp4pRahAnFIJgT/WFmAwYMABNxQ8ikgC6Z                 jRw50mGZYBAQifCQqArTIpAHKNljaXSEwcEJIgEfAn/99gbhdV0P/4XDb7755rLLLsPfIQegweDB                 WfKvvPLKefPmkaBd2y/Z/5YkiIQzBRA1mdtCNIc8rA16hgluKgPnoUOHcgrwdQr+zN8yUa8h5diJ                 xj0UBuEAEvYSWkJAJ6sF43DKKaccddRRhx122BFHHMEeTP/nP/+J5055YF3TJ87sLVAyzkAkSjVu                 3DjpA8RQc/biiy9WeTv1VlS8V6DnyCOPJE0tFWAPzHXs2BFuOJ64pU7Zn11IOuIeKMuNVR8ZaBHC                 DXz77bcZWMEoZBNbI+urijhEEklOc7jJzAKcURsV2Dn6VUCJLPT1w+VrTzwxNz3l4pA3t1P2/Axv                 gQmlzQVKByhBDQe5AEogAxcyI1CQ7svN7FQZzcb7M0HoX3cZlOGf4PWPY/P52CY42yS29PQxGd4x                 Xt8oj3+ELzDUHx7uD4zK8I7yBSZ6A9PN7eNYKSG5N5zv3HJxB7+/AMqsLmUpnkn+8IwUz6h/7NbH                 GxwSig8ORgb7/CMDvjFbbpHQBE/6CG/GyHBwPIdpKUPZ77knfnGu4Ww2QaEbHLUpX5sbKHVxs0xA                 GYzlAZShSDl+bjiSm+4d1m/wDd+vMy+j2wbhgsmDYLVUDgqxQySAA8tIk/j22291DRHfyj63bIlD                 gm7OglykLfxZRbRoAlur95bIQWvx12COh3LOOefIlSBHN231xLglvAOAAKQjuEO/rQEACnSZWJI0                 HK644grqFhcXy+pwAAV5hHv77LOP3+/nkBbJgZuuciLnkCFD4Ey4ajg66wGszj33XDCLkkAJmRoc                 BfjqrECKhuiLYJGOk3YvD5DNVy06QluwLSwsVAGRut/PeVD8mGOOkfyqSAImppBj6uo7OQIvyixc                 uJBahMAoAOBIAclDXbFlr0mxxFLH9OFX0k0xVwH2FigBKQaNNGXgCTf2Cr0vuugiCqtrhp1DNMqh                 Vh0Bpc7iuaOTmggmd/z48ZJKHYHtjTfeCHYzWRpeEfkayc8///yAAw5gLqjL0A0bNkxuvh0iU3or                 5J4LewEEsTV3tEjwjlSzZs3SqZ2jXwuU6MVDSz7IzuqXnjY4HCyIR6v9QeLiIoDSbLrlbYEymhuK                 54ezCzICU7O7lnTIGNk+fWivEy496JCigw/L73FYTo/Dpx1y2JSWjfSMgw6e2ePQ/J6HzDygh8k5                 /JjcAw6cEs0c3rHzFPxBb3Aawa/BSue3PeY+jwsonbA3X5LQdAfPuKOOu/Lwo+bsvd+0o48r3r/n                 mAN7jDr0sMmHHjZly+2oo2eyP+jg8QceNK7nIZNIZHe8ODXt3GBsYjKcN1jZgsvJFoWSbhjVYfKu                 twnAzWUBI1IwhkdZiDsZiZTE47npngElVUtrm5JAuaVmoHDMPWEpUw5qvPzyy2TKLHeCUGKp17PP                 Pgs3YhMhCLpFPtqGgsIcz+v888+nRfxKOQ6cwvwQT4YqY0DdyZFJyyAlmHrx7rvv4u7BBIeIWnBe                 uXKlftI3f/586qoiyLj//vuTCRDYX9fAByjv1KkTHIiXlYkfSrFbbrlFvUCkbt264WPedNNNCIwd                 ks/44LTiSuBRwoRWMHs4l5SU0JzMD2GoTj4Ii0jkUJJomi7jeEK4abjS4BpwA872799/0KBB+FkE                 niTAhY0bN2oEIHVclJubu9tuu/35z38mcly+fDku0gcffEAT9JFIEP6cxYeCAzmsTx9++CH2/N57                 7wFbDC8cJKGIVogxFW6LEECn3BghSNK8KAfCe6U8zqbE04ywd1+jVOjNAiPvG554l7iE4ODtt9++                 ePFipuO+++6755572D/44IPk9O7dmy4AfKYNhyESKkpgRWTE6JdYSRgGgaULnu3bt1+zZg29Qx5q                 QZy106EYXEyAWtVlfq+55poDt0KHHHLIQQcdBMgSteCN0lM9UQ9Jr1544QWUh7n4vwyUtQ2JG25+                 LRTqi+eVFa/I8DgRNCD1M1CCI+ZesHk2KJrjjUyLds5L9Y3L7lqQ5ht5RK+5r72d+GF94pMvE5+t                 Sny2OrHS2T5fZbaVzn71V4mVXyaWf5L4fHVi9deJt95J3Hv/1wf3mNGx8yRfYLwvOAMHNhSv9EbL                 0oOlakuY5QT+SaxM90854bSb3nkv8cO6xIefJFZ9nVj2YWLNt8mGvvyy9X758savvk2sWZP4aIV5                 R+QXqxPXXvt0rxMmh+MjArEpgdgMx1UEKHV1VY1alNRmcdMBSoOSFeYSqiNPKG5+kBONEHcXxuPT                 09IvuOzKlzY778IwA+sCStLYuRK6uAYoPP/88zq7NTI62BZxSquubAw/RRaIL9CjRw9it+7du2MA                 hx56KAEd+7S0NM6Ca2gk6kiUCpz17NmTwuwpA02fPt2ipAwS5rQlRX/qqafUBDG+GsWK8BnJcf9Y                 BeAAyHAoFGJbVmC37gxgFXouMhQKofeAI0D28MMPA4777rsvBd544w2HkyHiNSyTgQKYhGV67qei                 okIFJIma0FPuGCogpTukIqxaCdYSJTB1uYokAA6tENQlIWuny6QJq1VeHaewhTlcQstNF2otUYYR                 yMnJ0biJOWmCd0lFxK3fs5988sl6boZVhJ4CtRySWLVqFTBENA2RyVmWAcqfffbZ6qmkZW+BUk0w                 rRzqJ4nk4FEiMzkQDimjbQ8hjQC9YC7sMFZXV5MJwLGoIAOZcui0Lysr0wVTQhOkIgeigxAJWqQY                 TBjDvn37/uMf/4hGo7pdKb1iFTcNb4XspViEJC2glGAQWsE8cmrevHkahJ2j7QVK2wYJTSREN+ua                 EhOm3BwKDQqHpwYDRcFQRTReDog4KJnv3FppwREn5GzvmZDdrdQTAmumBaITDzqsPLf4meUrE5ub                 EjWN5pd6qFtNk3FUzdacqGNrcvZ247Ah8fyL9X37Xf/Xf1wQjufEsitpxROu8kWraUs/iWkBSm35                 KZ6Jhx2zqKzyg/seqtlcn/hubaKmwXAzH6mgI1vZ19YnAC+l129MfPZl4tSz5v5lt96RbHPjyGee                 Ep+VmlGU2XFBEihNH51YuwUodWV2S6BM982MZlXGopWhQL7fO2rPPYe/uax2U619gLJtuvTSS9EJ                 jO2ZZ56R0u8oWVdF1fUzZPFUQmbsNmz2GDB76aKTbcimsVu8HmmF2MoAINAHcBc3XQeEcK86dOhA                 nLVgwQIshMK6tw6u4StRRcUgpMX4O3bsyFnBFo0iBnjKnvKzZ8+mXcGHFg8JAPZhbNjtm2++KVsV                 UOI9kbYKjNhKIAN4StOMMFLpUUdcV4gEKACRmDt37uTJkyUGLq2Mwk6E2GKiSIVr0yaxCGVmZjIg                 wAHRLpAKgVMnnXQSqxTQf9tttwkdxBAXmCWBFnGrlyxZQi/AKSZla8TIwJmO401zqDligsRQAsNW                 0HPWWWdJZpxEPERy9Nt2vGnSkUgEh/SCCy6ACQIDYYAgDjXedHZ2NiqB2BSm+3QZmJ4wYQKuNPCt                 lVjXMRhY1io9TtClSxc94MU4uzGLNEzEh4AAYZYuXWqRDmLxoNesl+gSITwrLtED+xtuuIEY69pr                 ryVfPdJFGzoFNyqyByhZ7NEWXX3eadpeoFTDrQgEIVrs0/9yr39IKDwzFi33B8rMb29wl34BlM5T                 hwZEcr3h3Oyu1d5gHmUy/JPSvcPC8YHHHj/j5Td+xIINSjbWN5hfRTbV1G7G2phGbaSTG7DVlNi0                 OXHV1e9H46MjWdNBJS9AGZmdEXSe6A6DUAJKYSX7/Gh24R6pQzqk9+u817CHHl1l0BYcbEzypG9t                 7p2b+j+nf9qUuPbm5fE9JwUzJ3tDM0KxsljWvNR0cLDlsUqnjy1Y6QZK41Ynb8c7vnYoVhyKlPq8                 hUF/Tjgw8sILFuDeIhVttUnMPcTKDDrgiaB8ZFo82iGiFrOJdkLgCAp0+eWX42qhfGDEokWLLrnk                 kuLi4quvvpo0niZGcsQRRwAZwAQIUl5efuWVVxI1c0hMhEgEmLC1QagIa4E/CTk1IOOKFSu+++47                 LAHHTb9Jv/nmmzEnzBWrphWQAlcI2fBrBBakdZuboO+KK64AKQgG8bCwFpxcbFUPzwMieD3PPvss                 haWoODU0AWpgJ7Ciy4AFLerZQ/e4AanvvPNO8qCFYEIZkRgy+Dqlu6jYLUDJoVBYgEtfVIwqWyMw                 giieRQJMpBb8hQjaIyoJiin/iy++0AMJXq/3rbfeIh+o4pB+EW+2Sfj7+PjEoSweOOC66AG8whzS                 jLCfOnUqA45HicCwRXK8TkoSdNMuYS9jO3jwYApTAKQGgB577DGkoi45DDUcCALy8/OZMoe36TUL                 m0ZAFyKFmDiqcIYhKuReBSEYUkZVLDH7ypG0kC4OEN/ouoTGByKhAtCjjz4KoONREuZzqFPs/08D                 JYTcCJc8cAjA+ubHxOHHFnn8o4LB3I7Zc/zBEnOPIm6cR4MXBiD0Uxbd7c33hUtDsdnpntJIfE4k                 Vh6L53ZI7efxnTX/0sfARYZnXc16B52YL0zFIKbzRUJyapvNr55JOFjZmHjllca9uk/wh8ZmBGb4                 Y1X++Lx0p6EWoASjcd+KvVH2hf7IzHT/6MxOY1M8p99xz7v4kqDkhs3wTGJTqz3jrDT4yHwpjfv5                 3ieJPfef2sE73BOcFoyWRjPnenzlwYhzlwZwTN47skBpfuvtAkojibnHFcuNZlWYsfIUA5TejAGV                 lY+b18K3CNAmYZNELqgCdvLee++R02o6toesUsoyIcwV9UXFlcNeZWAO9vXv3x8lGzVqFDpnqwgd                 0FoBBCSUtPKIA+WBIUAQmfGedArC6ZB7OM0hEhBWp2chVdfKCYm5oBMllBh6nBD0RHil5Q1xlvJY                 bzgcZqCI4JAKgVUGX48ykO0jYSaYBfLKqkV0VpQ8dhGoCh+AEncmmeW4SMmUw9m6hG2SfgQFiiWP                 tyAhu9IUZo0BlOkXfQfIQJxWP8R0k3vcoOHDh9OWfTJcPWKudbsGCKMh3VZmZJhocJZW9HoU/S6e                 U5ojJsiwaJkOVi9dlmHJpJj8R0johhiapieeeEJXJ0844QTakngIQB9fcV7jxqGkQp046x5zcsQN                 eZCtR48erXoHUUCkp2txonW5WXzY/18ASlpFIKWRGAKwlj67Pt5xTDA8xe/PzcyeHQiVApTBWF7b                 QGngg/Q8j3d2MDwv4CvPipf4fSM6dRqyYOHjdY5/t2kz+soQs9EWMAUkAmcbmxPMBOsJlsloouKJ                 j5Ynuu8zJsM31B/JCWRW+sBf57byL4AyUgJQeqPF0ewib2hcx67jQtFzX3j1O4Jc2nI+BvtviLYa                 GlhFiQ4MUH74WSLebWQH3+BQZo4nUOAPmud+wtE5LqB03er5BVCWWaD0xvIJ2wHKeLQ67J+R0v7C                 2297j8EEk5OttkUYP54CJoqzoAs9bq3aTrJrsvSYCZVNwrBnz54jR45UARFngWb0j4BLOciAYeAa                 6Kz2Ssh+RNZs9HsYnBe8TtBEYITu6qFlgkTO4gziVGKuGA8mRIFW9kAtNUFURZyFR/bCCy8gLRwI                 VGk3KysLLL733nslDHbLQqIrm0JPmgYCsBZ8ZPegwVA3/TFjOi4Nh9ocWBqCCB4pT6CKW82hHS6E                 tEAAwaFN4hSeGsCh341A9JoWSSAkpEwVZh367LPP8CXJgTNTxkChAKeffjpttUkqycKgtpg4pO3d                 u7cORfCZPHkyowFQckjryKDHSEOhEKMHHNOK9UMfeOABBIaIc2FOT+1FWEb1ySefVDGEl4+sQwYH                 NdB7hhjk559/XqdonQRxCfNOc/YH+xoEJSjDXjmoBHEATPbZZx+asEpiieqURwzK4EGjouSov+z/                 LwClJeRAVrrR2JQonfVkB8+gWHahx5cXjlSFIrhX+f7wjBag1N3eWebyHJF4NN8bKvOFqkHJSOyS                 gK8iEipM7TB4//0nvPzqemAIXMStZq7razYBGvWbzIgAUKiTA5GYH3vzpkaaXrM6ccSR032BIdGO                 +UBhWqg8I1LpAGVxC1CaX517o2wlsY7Fqd6Ru7Y/67R/Fq1cZa48wrap2XhGxovb5mY+kdaATInN                 9YkPVyY67jMqkDk6a8/iDH8+QElf/MHqFqCk1y6gdIT5WR7nIoCA0hssDIYqsjPnhnzT9+w0+sUX                 fmRmm5qNE21EaotefvllPRGmn5dIvXaC0B4US3uInLVr1yoyxVsBiVQMIh+T+Otf/4pfg4KSgxtF                 MUg/akQGYaLVXbRCaXSayPGAAw6AJ1GwAiIRxq87pBDmN3To0G+c7xlAWJcKnHnmmQsXLgS+YYin                 SYiNg0O4jXVR66qrrsICSd9zzz3YrW7meDwewJEoNTMzU5c18cUElIiEmSHJNddcIyyTERLI646K                 rl1ujdwogx3Ch6YrKirIZ4gQUoMD0ZAFu62R1p5jjz1WbJEEYiIsyEo2kbjZ4dUjpUwWAN0mMRrs                 kYqpwbcaNGgQkEd5y1yUk5Pzl7/8Bc9UMTL8wX04Z2RkMBd4cEw6MIqEVNT1R86yIDERgCNpoAc8                 pbDCC0s6VHPUYn4pzPrEoR0lCAdQyyQ+7/fff68u26Gz/YXIBFUpqaeRRNJeitFN6nK4ZMkSyij0                 JlNjy/7/NFC6J8+mQatzLlzQLm1IPLvY6y/A8gHKULRgq0Dp3Af3BEu9AYpVxyKz4tGicGjUwAHX                 MkRww3FjkJvqNzVsrgExGp3XQzhKarGSaTBACZwSMZx3/jyPf0A4a3paaGZ6uMSfOQs8crDJBZSR                 CoDSE8oJxiYFY4Pue2jNRsed3FTzY1MCB+fnfrUiesmAJw/MoJtriJ+uSXQ5YLQ3OjycNdPjL4rG                 F4QjCz0+A9BJoDQ3xNV340WGHaBMyuMCymCsjHUlHKzwpU/qd9F135iXAODhAjq/UGg3sZ4z32iD                 frvybw1yayQwgqS4wFm/fv1wkdDpSZMmkYl6Cf5Q+vPOOw+bwT6dGuaXs7gzyICZXXDBBXqgRITi                 SkHZK4eQDcWlsAJe2sV+cE/kj4BQfr9/1qxZWDX50mwIJNL7gTCku+++G7jUhTbRYYcdNn78+Pff                 f1/3B+CGqRPGkoZbp06dUlJSKN+uXTu8lc6dO+MAwpmmu3XrhgcK0COnhKR3SMiQEq/pcRYrgyVy                 0HYICTFL9p9//rmWq9GjR1OAuejatSuOG5AB+hDSTpkyBQTZGoEdwDpQS0DKaJNDFRJ62yMIRZqV                 A9de7htNaJrYIzlrJE2zAES2QvSakWFlYrWA9CvMM844Q13Tnu4omgas9foJVqY+zu+FGCU6Mn36                 dNLAqAUsFmmtPRAjhmPLSDKG6IkVUnIiJPxJPPvss1qEUB7r4YLj7CHQvKysTPpM3zlUvtVqykuR                 yCksLEQ5WeqYbv1GiLAdevPNN191iOWwurqaeWRq/i9fo7Tar1GAyPnu+0TPI6anB8YZjAiXhcKV                 5o5zOC8cNz+kMc8DGaCc7Q/PbgHKGbHOhaGsfE/A3Pb1+Wakp4/Kyhp99dVvmwC7HqBkYmrMd3ia                 653Y2MExNnptOu6E5Dh4QFhdYuP6xOSpd6RmXOiPTciIzvBml/gyzR2V5P0TBygNSkaqcCqD8eIU                 7+gDeua8v9zcNHc6A+YCB8wuM93G1thUy+bO4e+TNYlO+w1v7+vnj071BUsisfmB4HxzGWH7gFI/                 gWcfiJZG4tU+T7EndcKl85bVGR2DUCMaaYNQF13bAj7QDAbfzsgOEbVQZSVQIxZzDN6o/+9+BwCp                 jLSWiaak7GfYsGGk5SysWrVKdxiho446Cq1FNoGvCiiBG6iHJcPhMFBIJggoYELpZSF4ClJoGRuk                 i2LW3XjkkUcuueQSYAVvAogBN3VVlGIAIkwI6L777juFz3PnzmVkXnzxRfbE5oAptsRZmsAnkp3f                 csstahFCZt1nAOk4lJ1zdkuyOk+aETvooINw03ShEN8WDt27d2fNIJM06wodJN0mUYDusIc0CK2I                 TACdBeaiiy5CJPortJIMuNWgJE3gkrdJwkfGHLgE9QRVZ599tpHeYQIx2rp3j79/yimnsPLpp1O4                 yUwQisFZEAenXhOqSbn//vspg/CcYnitPkBaVpGW8dHhihUrDj/8cMoDUsy79VtVjD0EaKJXlIHh                 bbfdppmVcoqshiv0hlgAKLyL85MnpGW1ZqDAR9YDxoQCDI6udEsS9v8HgDKpHCJnntga6hvM4oAU                 rCXvf7BpnwOn+aPT07wzwrHKaKw6ECr2BnJxMJ139oCezmMxxqPUg9YzMsITQtkzI1mF0czCaCzH                 Fxh+2GHTV3xq3Ek204S5bggaNrDi/wIrzR/5xp00pQC7hsSCBc9n+HsHohOCmXmhTuUpwTwDlAYl                 zWYaNa2bx7x94ZkZwaEFpU+YO93NifUbNjU2MM1sTEwSB1ttTc11bCTMnaWGGoObDlDuecCINP/g                 SFZBKFrl9VelphebtxQngbLlGqW5IKvQGw8XlDT338175wxQFoKY6X5qzfL7cz3pwxffvZq+OiqC                 rtB0G8T6TFiECWHwdlmWNuwEYSrSQgU1qNoxxxzzpfNREVmFEoiEZWLeAwcOFJaBiTI2OaHUxYn7                 8MMPOSVrkUh4JbiNCrtAVeyEiB40QX6ITP0e5uqrr5bZYELwlJGQVhhIHA3Y4evdfPPNtGu9GyQn                 E++JMnrk6Pjjj1dhC7jWGkXIA4hQ3r71A8I3BFPIpHcSGxmMbruuVEIqbA0YdDj11FOpdeihhyJV                 ZWUlJnrEEUe89957uHugG/gC/gKjbRLjKV+YMJaI+MILL2QpwkGjCmmq4/1xeO655+pCMGQ7RXN6                 cAdPkBFok+jUxx9/TJQA4ZjDB2hjLsTBQk9+fr66wCQKYgAd++LkIUOGkKML04wDe5YuEIepFNYT                 L1s9kTZqfLRnodVNJFY7XRshU6Oqvmh2EAaV07wcd9xxCjiUr7nW4LPPy8ujDDrj8XjwxAkdcJyJ                 G1gPOAQ9WZI5hSoC/QyCu+7/FFDC3tnMXRThUxKnmgEmvOKauoafOGsQrDFRXvGoNzDSE5zpD5u3                 VBhoABGcV0U4F+mS1+YcECFhcMQXm+oJTw3Fin3BvMzMnNTUPuUVD9c4sbDTM9dmIMw4j9JhB9Qc                 XOPQEQnv89FHVqWknhPPykn35YazSn2RonDcefNFx4r2adPi2bPNtygCs4DvYHhCx65D3v+4ll4h                 f1Pj5mT/ksy3a0PIVd8leh41OcM30vw43bwzrTIQK/FFCnTjyLldk3ya0uCj1glnkfDGc8wWyzfO                 dXiWL1CZ1bHa5x+dldX/5dfWskhsrK2rR6pE8pPN0mn2mnL9aIxVFBCR7lrg2CFCHcVwzZo1RMTy                 bkBJLET5kDCCBIWxNBrV28nQY4sXwCJhI1AIBxRXv2iWAeA/AhaoJmexPSzWXgBlf+CBB44dO1YP                 nBMuOcySnVW/IL31i1ogLJmyNJ2VYG+99RZOBJiLa8Mh8fWyZcu+/fZbtx1CsJWriwyYGUb+4IMP                 igNlGEkwgkz3c+/bIAtYRKY0jYnCRC8lAt3I51Bl7Ei2SQMGDGBwqGLhQN3fGomn9v3796e58847                 T1Woa2dEo6RinFUB1gDaElBa+WlXHiV8wD4wGmiuqqoiANcg64qkLoW//fbb6B5zRxXa0lRCJPRE                 gXqhMacJYnn9HIjZhzOTgke5evVqITiL2TvvvEPITCiA708c3bNnT624rAFwcJPmDpo5cybTBA7S                 Ip470w0fQmwibtYnph59gC3KQHNCcE0BHABKMJTq9oGHnaOfgRLW8GZjgJ0bvA5OQezAKzIS9Y3N                 oORGUps2s74x5deaH2gHgUW9Ay35qggHItvagI/MHOP9gZuBvHB4cjh08d2L34W307TzGA4bLbJ3                 fD1kkmJjm/ZOTlKkxsSzz3wfDPTNjBd4/QWRzHJPiH0FQBnNKsvw50XiVRm+0kCwivg3JW3Aeb1n                 ffUDIX5DU2J9U9OmpLtqmG8vUXz1d4lDjpqY4R0TCJWalwxFygPxPF90prn+aC6JmmeAnCWhBShD                 5vqsCbfj07zxGQYo8a9DcwOB6mi02BcYcnDPkcs/3YwKSxw0VcpqmmuxH8JbXafDqcQeVECqsHME                 E/02AyvCbu27wiDrKWAVK1euxPGhmL0BCqF8EgALIS7Wzx4gXTnFiyEel5Ny8MEHwxkX7IQTTkBT                 ybz00kthi+UQLIM1++67L4ESNgZP2RuR8q233kpgRXX8CJkfBBOLCBQeP348MRcckFDC2LGSY0um                 zWHhwZugcOfOnXE3LB9AnFYOOeQQqtCQLd8m2V5DehIF5L399tsBfTiXlZXp1L8luqmbOUceeaSg                 bduEYHa02bNiUReQck4aApvooJSBUbJCQtRl4sA4AIteuzuoq5D2mS2q26GmmF6KATCddNJJ8n8h                 +6w+8isggAgsQD0bNS9duhQPUZdNaHefffbhEA44gF6vl9VRgTMRDKsvpLUTIo1jWOp8MQJWNqiH                 WHdxrilzyimn2HybUN/tnCrGt8RoXH755dJG1sVfYzK/U+Xk3tmQdGtA2dAEUNaQqtlsft539NEF                 5uUU2w+UkUJPeHooq8Afyg8EZ2R4Rhx5ZN7yTwij1bSz4kkINsflQy5HNBdQOvI01plrle+83dC5                 8/BIZIY/WBTNqkgHfGOVvqD5tkQ4XkY6NaPAXBAI5GR4B15z/RvoWqOB+3VNTRtMP9XwdhM1dg4o                 ddnBbCTM1YDZwLfXO93jH3Bhn+pvf0w++u58YtGQ9EDWDqwQUKBJTPbEiROtVXAW63WK7wBRC5Mj                 OMINBCVxi6zOgRc4hhgP1jV48ODevXvjaYJHYFxubi4WIltVo7rsSF3wEcMg9mGdf+qpp4Q+EG6C                 3EyIKkTZLPhwUEX9qhc70Ytwjj76aMJAEHb//fcXSqLcDz30EOVpF+zGScHa+/btSzxIAMtoIDyH                 nJKFqxcYDE4HvgMge9lll9177714fLgqWCY8ScBNRgXY7brrrrQCKDCe6tS/HU/q0hDOkeAD75iw                 jsTjjz+uOIDhJcFe5bckBCCwZVSPb3n12TYKQ9a2qcgeDxFc1jVHKqovGgFK3nnnndOmTaP7+twb                 uENDiIeHnjTwFu9VV5mZa6ZDksNKZfAr9957b1rR9U2IuPiJJ55gcITslKQ6eCcAAgQXL16MeBB1                 lcnsOFW3SkT6qM1ee+1FW6iZ3lvRvXt3tIgmmHeIBCQTwGG0d2nouBRDAK0yEPPSp08fRoB1C1gv                 KSkpLi7WZ4cZB/vDsJ0jA5QiHfPPAUpCb+bAQS4HmIRc+GLOk9oGR196cd0++4wPhCabD2O5gNIF                 i1tuhWn+6aF4YThWHArP9GQMzi94FG+Kllqg2WlIm2nVoKQjmoASY0gCZUOtAcqVnyUOOGCy1zve                 H8SLNECpWyiIxCFhuD9cHM+qTEkdc/gRRZ9+bvrjPLu+wQAlfJyubj9R/L8FKMkMR6p8/qn+UP/q                 uU9srDP302HeSJccsuCFUhJl6HrcfvvtBy5IgWQhO0EyS2zjhhtuwOqIhmCFzpEJ59tuu02LPEgk                 jYfC4TCegtv9QSmVQFNJA0noNyYn+MMAcCXuuusuCQn+0hyuoqqoLjGX7p5DeKNKYJlaD7p06eJ2                 J6muuw0QkCcj7NatG0ysqVhSVK7CWCPdweZJYzA45lJ1BNNlUAiPA5G2jVZQqwI33nijAB0CLq2o                 om1z04UF+7CLcGobBDfxJ0GwTN1Tna+8Qu666AyOs/X1IE0ljiGd1bBroiEBJdx0CFkE0AOJEOOM                 R4nXzCl0Q52yAw4W68cIY8aM+cZ5ugvmlOHw8MMPR7WIl8GpuXPnLly48NprrwXEWZyIuImdQb0V                 K1YQMv/444+AIMv2nDlz1ChdsLoNNysVRBqwbjVcHNI19Y4wvIPzWjl1XHsRixMt/tuh3gYlQ2/J                 ZFDJgY42gJL1tmYd01HfZH4rDWReesmzsejgYGga4AhKuoFS6a1t4XhJLKsEV3TPPce/8FKtfsGt                 H94kW5QQDm0BlA2Sp5EQvIlILXHUUbkpKcN9gQKQMSOAr1oejFSapxTNV8xoqCwcyW2XMqig6EkA                 HjxCfqa7uXmj6SKsWhraHmI2dhgozTVKC5Q5JJQZjVcFglM7dR351LPf1zq/bddvJTEJaaT2EDp6                 //334z099thjykEtWlnm9pM0T3uoFezq6R88O1w81B0vj9gKXUcYlVFFTALlthJC5FDgwQcfzMzM                 pDqehfLdqonMOhTmfvHFF//6179mtHwNFacVG5swYcKCBQtgruaoItvGOcKNAiDwPnAtcXjBbgkP                 UZgxASkozFoCEvXq1atHjx7Effgsxx57LHZyyy230LpkpjBmQ6P2rb3kKGbfGlGRMlDy2PkpCyEw                 eEdgiCSc2s5J0bONSOjmtg2iUxo3yjNEOO/nn3++2rIcNBQAEGwRiVE67LDDDj74YAYNX55ZU8ct                 n3HjxoFxeLUMmoaFVsQN5KIVwmT6xZiorppTK1rFlcZNo7yY2z24qVmDqG6JUzTBKatv0gTyP/ro                 I2IR4gn9UJLC5IsJZ2lRzr7yIemSWoSUQBKCBmacRbFr164k0Eb0mThMt8J/DRmPkmasBPxzNguU                 5naK2cxiIneyAZOuqU8MGHBZRka/QGQ62GdR8t8CZSy7KhgujkTzUlKHXHDBop/WG0/SeWkOEb0T                 WauxpDjmhJMUULJvkce5ycM4n35GZfsOg33BPGJtb6jI3F0JV+BImi9GBPNi8XxAba99pj1H2NeU                 2FRL4I2uMNM15gly9Xa7aUeB0rybvQ2gxOc1Lw1KzxhxxFE5n31pnmOHc30DY27IrY6WpChoGI6b                 1MKtKDtEQgSrrO5HN6BVzocPaU4CUMzqBmU4tBUpwykdUgVhcDdw6ORfQGpIxmD5235ZI4eDbQKi                 gLrGHoYWfdxllMmeTMvHEnWRBz6MFRw4tEzIpwqcddiKZJnbILoswdRrxspe0hUB8bSlyWqTaALH                 CtzHyZIwyRNbITVEozp89tlnr7nmGuBJveasEtqr43QZAThlx1zEWQ0+ZW666SYWG0IByxlSWxDr                 3JIlS2wvtjZc9NTGGRo6RsPOL12D4N9mH21blghubIs6S6fUL0sUUI6Yk+BQXbBC6mICfUc2dJtD                 K5K7sztKv3OE+VkaGne6BUdk/QVQopOgJ0XJ/WJ14pijczwZA4PmyUHzOTCQwnzRP1JEQodbboFI                 SSRe5fHlEbB7/YNvunlFXWPCefwbtAQlBYUuZXXcSUceuurAKAeSB1HqE7V1iYv6LkxNGxqM5Js7                 6eZTE7M8/pJwrBKw9vinhSI0NGTCpPvWbTTv76A5YNl5rrvGXOaEkcN9O4m+bw0onU9Otg2UBrgN                 UOa4gLIsFMpr175/vwGLflhvfEkzqgTe6qozr5p4plZKj1pIe6SRkNWqnSC4ia0OLY5YTaBdt1ZZ                 eyBTCqofCENWHncZK5tQmCryTUjLepVGADqrhmgaVu5GLaHrKg+pCgk3N0scSjDOqoD2gmz4uMuT                 plE3Cthx2JI0MuIGiaEly3kbHETiQ0+VUK02ey3SKac3yabdJMVQmpJwc7NS1+xEs7eTReuaI4lB                 LfHRHj4kyNSsKVNMNMs6SwIiHybiTMIWJq3eOQxMecqQzxAhGGfFQSNJSU6Rj1SQmEDMtdK2PESO                 hIFsAZjb5pwzPw8de07BwcneSfrF40FwhqvTDm0gCp1PZtEc/zfUridrU33i1Tc37b//JH9gjPlZ                 9w4BZazS78+NZ07ptteYr78zIXwNk2LaElBiA6SdEXG16+RTwLnbwUk2nNta8zvwocOv9niHh2P5                 wWgRQBmJV6ek58ezZ2d2rCC2DYbGxDMH333vl0Dk92sNHgGUzid2a8wDm80tbW0fUX2bQFmyXUDp                 /HaoU+fS1PSL84ru29xgRllxN0DJdEqDRZpdplyzjkE62clLRW4j335q5QRJxaVk7FEs2pIicqh2                 2asttavCluAgOdFaIYVyVBeyaq22RO40JJ7qu07BTRWVKcFIiCQJpDJqTgXsoMHHmo34izN7ythT                 2KoqbpvE1kIhw0gtOwWWM/tW4+MmNSqZrQD/lmy/JIPmxTbNQKldEWxVgHwO3acgziofImGHxQpj                 x1NtafBVTGJoBCwTOyAwURV761k51Nqyp8oRc6cpU9FN9pQOIbckIqXdJREezmLucDVEGnJX3Alq                 +zlKxoRGne1n7GRX39wEStY1Jx557Guft1/MvFPSfD5sOzdC76zMqpQO49qn9J2e88C3a40nST8a                 DQ4KCtkz7mZq1SxddhrX2RagNCfMrwvrGhJTpt2GzwhQ4lEakIqar/FEMiv8odx0z+hAeEjf/pf/                 sM4gsvPWCTZ1jVbYnA5uNyHqmu8Thx49yeMba4HSH8vdNlBSJhQvDMXzAuYjkXjTRcFIoS8wvmOX                 0U8++93mRhYe8/t253n7tqdzS6WUKkDSAzRSSkx1TpHphhiltRe5EbZVvvtQaTGEv21FZA1D5D5l                 BZacKilu4qNMu3cn3AJQ2LKlgMq06jukQbMFWpEdUspDtroK05wSW54SyYfiLHvG08qjwnaI2Ksh                 9d19lrqqpbaUFkObqbRlDinTikRCOZRRXasMSMVZkc2ELUQOaSsA5IYVkbtRumBPKQET9rYMMrjr                 qjtqRWXIURVlar/9ZMtbFbU9En+17m6RHJuppi1RQGW0/zX0b4HSwSZcPsfx2dxkftNHDHv5VW+m                 dOgbDM0AFFqh4TY2gDIaLQ0GJx9w4PQnn/7RvDfXNNDY0MygwBgNYyPhqIjpuZVHpxzURjSTixNm                 QunyqoeI4kPOGx6NR5llfgUEGPlDM/FbPd4LL7viRXNP2UFkhxWk3pmuOOntJThsEyi3CL2dy5EE                 2sFYQdD5HIWTXxyK5nl9ow49fOb7y5uwLXrb6EylnU3rOaIl0gkZyffff//RRx8RXZKJJqHWbsiD                 pDGQWzPEwc2HsxwqLXK7mdiStFOtKNOSaokbRAGbNqbZoqkPPfTQVVddhbNmcUrkFswWpkX46BRd                 UKPIYA3AWgtEMVsRVBIwUdKKQYtK245QxfIX2YFyEwXIh9wjQ1r5OqTpdevWqVFLNhKnpO3vM888                 8+yzz5Kw0kJWBiSUT6pDEYc0xykS1CKtum4ZLH9y6KAVjFo6RT6kTJ3lFCXdYqiDGiURaXuo6lRh                 j+dOPjm23U8//fSdd95BRcVERAHacjMh4Z617SSYaGzd1SWPNQpOWWEoo2KUUdNMtF7uKy1SJqLa                 gdo52gIokx4ckjGsbEmgxN8x93AazG/68ARHjrm5fYdBUfPNbv0CZ7s2PCmvZ4o3Y8TZ58xZV2Ne                 nVvnvG6y5cYRe/rM5szizxvCuICS/rI34jQBlP+6+U1/aHAgMj0cLzE3c2KgVYnXn+8JTM3qOCG7                 U/933jeDmqwkMil4qi0zB9tJMNkaUJqVYMubOS1AafzuSI5xJ6P5oUgJsJ7hHXJhn0t/2mQGgd7W                 NplJrTdXgA0prpQiohOo5vXXX3/mmWfuvffeHTt2PPDAAydOnCgjtMWkqTqUcqMoUCuTlt6ISFOY                 vTKtIYkhRHVpJKeIp2QJVn3dmsdZMYHIR6f322+/rKws+wETxLA6DcHQlidhW6SAWmRPWmVsSfpl                 OSCbEpbchdm/8sorM2bMsO8hF9mGRLRCSTIBBduKbQJf0u1OgmuSzU2aKfIpY8/SWdaz3XbbrV27                 dnowEBl08ZS2KGmBFdIpKyRnrSRkkn7kkUfoyHXXXecu06ojlqFEpZa9iGwTiKdadNAWgydpctzj                 6cZfSM1R+N577x0yZMgxxxwTjUZ79OgxYsQIfX/Y1lUteLbSuu2nb775pqCgYP78+fgEHEpCnRK5                 nzPTYJJGnazAX3755R//+Mfjjz9e8wgH5dtp3TnaDqAk09lwADfVG4/y9WWbDjlyRkraqEznFnYr                 NNzGZl6TEZiSmtp36vTbcUsNLjbVOE9QatZto2zmxkbLRr4DlByQZEBIGKBswFV85oXvYlkjvMEp                 AKUnWOgNF/oiRRHSvvHE3QOHLloHGJlOwdBpxfJ12nc4bi/RMkB5yFETdwgonVvw+c43xx2gjBaF                 YjNT0vpNnnZnbXKJqN9cbxQdlbBYyQRLre+8805m/XfO+wVQ0PT09Hg8jip06tRJNrAlwIlaHUqT                 YCv401kypUkkAAKbCYktCdVSMUiKa2u59Q9YsRZ7yCGHRCIRPZbRypAga0hqURBjvVqLOJAsmb0V                 wIrEHs4Wc9nDTXVJX3LJJX/4wx969+4tsBNJWjsy1ggtT52iF0pQAIZWbIjmYCj5xZkylg+1lMbg                 uzmkX09DGgQrqpP3cwK2Vio3seToGX6mG1DW8KokUpEj2bRHVBjKE0QM0qtWrXrggQdwAJXD3hJV                 aLRVph1MCIFJi/OKFSvOOuss80Si82YKv9+vH4kzyO6lQoUh8bGsIB1CyeOtEKLuvvvuVnPoKaxI                 ICfq8eGHHy5dunTNmjUW/XVWbNlzyBBhI/vssw85yGNbdIu3E9QaKFtAhOFDArTKTInygLbNzmdt                 7r7/o0CkX1r6hEisEjhohYbb2IKR3FhkUreuY5Y8/kVNY6KmsbY+sfFn/DJk2gU9HPRMtusUQC+d                 D8pwns6awgZkAMoVKxP7HjAtwz/BAGWowLx7Ipzbac+qdM/ocHzgY099i93UmguaCN7Cgc1wUAc5                 2F6i5R0FylC40nwKPJTvD800t+ajBWa1iEztkHbh7PlP0zxrTz322+AYsyOLdFcTTPimtwYMGzbs                 hRdeQG++dr4bhX+Rn5/vnnhUREpDdXSFtDQYkom2MgkO29QbmwkKqIpFCnhihMiAbOwhp2ASHSwa                 io466qhwOKwHKqloZXA3KrO3/N2YazrjPAtlM5GHhmQMKgBaUZc01VsJA+lzQAClCqikyPIkgQzw                 oTyHFIO/0hADaAFdCQkMWfODdIpaVgbJg5ctzLK1GAQJT0LyuH03K6G6JjFYJoF7PTv98MMPc8qW                 tzLYhLuPGnB9RGHmzJlqF2JIxdnmuCWHOLTDtXr1avYENOAOfLp27friiy+igYzbt99+S3iL2257                 B9EdpslydsuDkKLk8Vbo9ddf33XXXbOzs4FmpFJ52+Xzzz//z3/+85IlS3Qoku+J2GqXIKZDhw6H                 HnooaQlgp9sKthO0BVAyhkY2/sGUBswIkkHoTYpmyZp36ZOpGReGQnmBYKXztovWgLi1DaBMSx10                 4YWXrXdCTlC3MbHReVut00ZyDIFIA4LKcDYkweZbAeVmAeWPGxLHnVid6hkbihXjTgZiRenBabGs                 ojTP8BNOqdxYq4bgxnRuTHLQZjpE0ya1nUTLOxp6twBlbiCcA0qal3WGcn2B8VmdRt557yc0D4g7                 42D85YY6oxBMuaYWd0DvqqqsrERj1v3ynX2UwZKl4laTWGmt0osJhzrLHtNdvny5qkNyiERSd/Y0                 alVfigUHFI40zQmtdFYoYPnLH8STgugCXrDH4yEOwuZtFQgz+/zzzy0QQKoIf1kFh6i+vSBFXSuw                 CsCB6rIBMUEAawyQ5GEt+dOf/mR/pU5J26IS6pRty9qwgM/dBLansRJn8iUSsjEpjBhpN5Fv2xJx                 aHsEiQ8yqy2NJGwlA/l2xPDj/v73v48bNw41IOYlR2qgqWGmEIxaYggxehpPMmGud6mwZugsZAcK                 VaHvdESNwoG0uiySVJzVp99OP/10jRj5Ek8F6Jp6IUIkKaFEYk8BNWGp1aGb8ChDodABBxyA5th5                 R2aN3kknnYQkeuU7jSKMmqZRtM5G5e3btwcoaUVyUsaOz07T9gIlGylG8cdNidETrk7N6JOdXeEP                 6IW1rQFxa1swmuPzDl50+ZsAHCE3KNmYWNcMV7jTYFK1WgElIXMbQNncjCtqftWDn3th32vbp40y                 jwdFigKxglT/lHTf5MyOU6698VPzfLypQWsM9IafOZi2OAPnZKvbQ9TbYaCMlAsoWSTCsUIDlIHp                 Gd4xp591ybIPzfjWo0tGvJrmxqZGJxLiz/xzXgqLWrCKqnUITbWKLjVCA26++eZevXotWLBA+SgH                 StbXIcV9lJkzZ84JJ5xAzE5Ucthhh+FiyN5gCAofd9xxL7/8cllZmQoceeSRV155pVjJGPAjsBaA                 j7AIBLz66qv/+c9/Tps2DegUHxKTJ0/GhczIyADcS0tLCRizsrJWrlwpk4bged5550WjURb8fffd                 d8yYMURStjuDBw8G1K644ooBAwYQ2SHGmWeeSbuckpZj/3fccQcmlJKSstdeew0cOHD+/PkXX3zx                 woULHQZGWiVEsGL0kNMaiRIUY3gxrZKSEqDH6/UiM/4v48BZjTx+DbhA0Ara4kylpaVhvRMnTqSb                 nJVx4iwXFRUhCXHiwQcfPGHChOnTp+P442RxFjTv4xCeFxaLM3jGGWfQHQYcQgZWi3POOae8vJzC                 IjtQNvHVV18R5/bs2fONN97Qb5aXLVtmzwINNFdVVaVDeNKpyy+/nHEDu3EG6TvVqcWY77fffv37                 99dkcQpP85BDDmEi2rVrR9+ZUHUNsvzVTRaJQCDQsWNH+svgMIYW5lRARJoBRDcYTFxCBo3RQB64                 Idj2AyUgyGijhzSnYpovwimY6+fnjDn6Q08ZSfSHtZ/JYnxQDPJZFZhTeucWFbKatnO0ldDb8Edj                 0Dw2ozpkkNpYn/jg04aTzijZrX3vrE6VHr95drrFqdSNHXt7h8wS11lTIBib0qPnjHfeNW/YWLd5                 AwDRlHBWLVpgS3aKk+7Q2+BmErI5binZlAAojUcJFA4bfkeH1OGhaB5NhDOL/OEZ6Z6xhx1RtW59                 4ifn3RcgskFJe5VTWxIod4B2CihLnRey5YWiRZFYeShS4vNPS88YOj3nvvWbzcJTl2hyfizUYL4+                 6YyA1VS9zvqJJ55A4VAXcph4lEb6qjJQRUXF73//e4CGipyiMFaampoK1rz99tsUwGz233//bt26                 9evXD9NCjWBrP/mgX9QRVR199NGYFtbL2X/84x82wMG8qUsm6zmuDawwsL/+9a977rmnpKI5QHm3                 3Xbr3r07/EEfdB1IBSj1IgN0tLq6Gi0nH9ynXyg0DFH9jz76SCaq4I6GgGlE4pQK6FtR2CHLxl/+                 8pdgMIiTRXMwB7woA2LKHjAb9qRlIWDcH//4xyFDhtA6w6KhowALDEPEUFAXg6QAaAugUHjKlCmc                 hUBwxgR8YVFhhWBs9RaluXPnapDxzfXCY40qXZYwjK0+AkO/GENWDlYamgaJOHvbbbchgIh+kaNV                 UBMq8SCZNMPyyCOP/O1vf2NF4ZDmEEkvptOww4GzwBxpW5fRY+TBU9yrc889l+GilczMTJZSekoB                 AIjhpbMsOUwWXdtjjz1wvVn26BQFNHqSgYZYjeBAH3WovZWWBANCYZSQ/tJ9So4cObJLly7UYl3k                 FAVgSGFLrQ7dxDLDSFIdgIY5OTIHhgLF09v5WDlYjPXGJoCVfDJPPPFENIFusm7RO327jYa00kNa                 JHaatgBKIERoor35Y93A5ak3H8JuStxw83uh6JBgeFKaZ2ok7jxNDToAE+YljDlswQgYURyJVXq8                 pbicsfjcYLTUG8zLCExNybi4avajmzYbxNlcB9I1sVrQkPP6IPLoEm3V1tRuBik5rmnYbK5kmtad                 H63wZ/5RmlmsaWw2oSrcZs54IuAbnZY2tmOn0qA/p0t2yV/+dN7UKY821GE8zKXphXmZJnhMbxqd                 pgwf2DoBlPOzcXI2bUzGHY4SuLckUW/tpsRJZxThEvqDJZHobF+wZFs/YWSLFpH2hwsyfIXB4Nxw                 ZLbfPxN//Irrn9zkXHytc+KSWrM20xAZyeYwe70BAc0GJqSjuIr33Xcf7okePdHVGfwaTAj0kUpR                 EkcS2wAo33M+1vjFF1+89tprdv3Hhv/rv/4LK5LqYCrYGyimwmg2rhPIi2fnFE9QEjFmzZpFmpFB                 8xQJAiJgCpmypaFDh0pIaN68eQSMnTp1QkIMHqjFijBgEpSRjV1wwQUCMtLk6LUXmK6VU5cd9FVY                 zH4X572t+FaKgtesWQNSwwFXTh0XMW4ydXmUgKD7LIQAONScol9Ag6yRESNeYxwYXoR5//33KcCo                 6kW/lAH+OMSXYTo4vOmmmyjAmJMWpuDggDhIqLWBxYkRAP1ZRTi88cYbKY+LShr+iIRbBzzhcsJB                 AwJZBBHo9+jRg3F7/vnnKQ9b5ujkk09mfCQzviruG2ubatEvEowqVSQDOUwltazfSkPALuuNxREI                 3dAr4nFyVYZMCUBDAB8jX1hYqEP29FddppjG9sEHH2RyY7HYp85Lc6UG+kyx3vVJRWWyV2elORwq                 X81BjDPgbp+XEH+1i+LpIgBgSnnJyTqBMisaUGEERitATB1SRi3aJnaOWgElHIEN58UTyMbeQIhx                 x7Bl86h5Y6Kq+gVfYLg/PM0bmBmKlTrvDzfoYIAyNoPNvNs8XOwPlAWCVR5PRSw+z7yiIpYXzprp                 jwx48JGPYAxEOB/WNiBFQ020ab7z9ZMaMj9QSSR+WA8yNyXDUtNhU80BOCZpQ32T+Y2Q4VKfGDf2                 gWh4QjA42eedEg8X+NLGds4ae/O/ltdsakHATbiToGRzU21zPbE6zZtvTtRvrt2waWN9E4wczpvB                 ZKMoRlecztstSZzeIaDEj/aFzcdpgUt/qDwUXBiNXpLSYVx2p8EPPfGWkSDRyNoDX/NpXuQzg2Cc                 C2kGwRpqATg6jRt1QSHQSOyZfOwBw8NsyOQwJyeHMlo/MSHCJeiDDz6wigIBLiACIMvKjLNGDsok                 v5U4VI1C999/P+4hOEK0CweaAyCk2XBjj0i0DlDKGcQb/bPznS/SFuZASeI11B1LYKmniUsvvRRX                 Tmch7J++HHroocgAW71K7u677+YUAqPWw4cPxwYQbO3atXhk4BQenxUStnPmzAHQMUgOYSKTs3TN                 Nddw1l64kOQQ6wRLCKeWLl2qfHpBi0JPXDZYvfPOO6AYaCLsoAz9ApcR+OWXXyYHBCQNQJC27SoM                 1z03hohBxtkB4mG4aNEiWhTsCmVYvWiOQXaqGhIfxpkELbIkIAPxsrVw1hJy9BV1MmkC1x43X/Or                 DoKkID4epVrRC3rplFYXesGsweTWW2/l0CoG4SqDz/ImJuTbBKs1CnDJJZcgldHLlvGHSFMAgVnt                 aOX222/XWakKCzlThq9tL++KJ2R7ZIcOPqTZ4yH6/X48/RUrVlDFFoDgo4+P64IMxNLOUkF3GGSU                 BP4MNWDN1LDGqIy0S2mrnDtBWwAlKNnieZn9z0BpPolY15AYNuLmDM+wQGRmOFboCxX+Aigdj9I8                 Vh0xQAlE+vwV4Uh1uieH8t7QuAN6TPtyjWHc2FznXHl0gJLWTNLAH32prd9Mv77+dvPDjz9DSVCS                 TCManTXykOJwAzE7Z2vrEq++mjjiiEqvd2xWZqHfN22vLpUddh84csQthBEtD5nXOj/uNi0R8zcy                 8jDdbEL7z7/4avlHnycdTBPJm3aYUPPPNNZq2xmgNI8EmS8IlZi3dfgXZGYu3H33YaecVrn88w20                 Bm6ba7GN5m3tNGHeu250Jqk0eEOsja+//joqwiElMJ6FCxcSwcnbwrUkEyUmje9AWsiFnRA2ssIr                 9Ebhpk+fzkKNGVNSF3r08lfYjh8/HlW78847rVICjpTRbRBapzBOqzBOZvzVV18RZB1xxBEcAiXo                 Jbip1/BAclRBGeJZoTzxIEz0ekr6oobQYJAFIVFfVJmwHSiRVyvNBrnoPnvS8mHxy1SRdtmDqkhO                 x2EIyUpF9AsXjyq6682wUIAqpAmrwRfGh0yhiQjcpLw+HPTmm2+S1ufDJAwt0l8Q9t1330VgvEV6                 TfArm2d9okVCQiwcb5Qc7JxWwFY9yHLDDTew9jDI1FUVesoyoLBaTWju7GFubi4yEIRSBq+Z0Jgo                 AWcQVBIH3GFdyXUqJZ9SwKNkatATdU3jNnv2bOkPZRhw1jDSMCGTtuCDH81QjxgxghwNo8pD4oD+                 6BBiGOmvBR04IENKSopd0UVoUbt27UA9fGfxpAq6IRiFg50v2yJz9Oqrr9IpxSI6C6m/9EjXhR57                 7DENkZTz1FNP1aGKwYfZ0V1v8URga0E7TVsHSm3mD4duY5NzQRCgPOXU2R7vSH9oZjS7xBsscKDh                 F6G3gDIQLI9nzgclnWcJ83yhye3SB0zLfajBeUNtbT1xp5lI83UFWjPgRSdr6htqgDCQ6tY7niwu                 v2Sj+XADyt1yG4e9GRBmaKNzp9i8DSgv/9G0jEHpGRNjsaJ4vNiXPmnXv597zbVvgsR1iaYNdd81                 G5Q3d34azDOgJoSvb0jUEJI3J267dcnTS18TUCKJEYYSptfm/xbbzgBlOLMomJlvBiRckZE+KzM2                 t337oTPzHtpQ71xBaEJMcynAACWwbj7jYxoybTU2ylSKi4s5bDXNetP1vffeS1oepf00GASQYQ9g                 AQaPoYKk2CROEDHy4sWL8WswOdxVIRohMwhFLKm6aBurOjkoJYf4BRgnQIk8sg00DyXG7PFNOKQt                 jAFgBSDsZSDK4Omw2hOBIvnBBx+MV7JkyRLrUcIBhrhIYLfY6gPQ2Im1QH13paCgADOQT6ov/+ks                 hFtEJqGWQEFDRAES7Am96QWxrfsUgtE7QAFrFG6Sg9ik8dT++te/ChxBQzhr7ZGTjqWBWYAj3aRT                 rDqk9bEgEcxxivEiqUuaCB3sACgZH87qWSXNlwjHhxywSTepRZKTFvH9GVUK0AWkJQGxKjAX+Omg                 MANIRXpxyimnqCMQA8Ws7bHHHgClchQulJaWkqanCEacgWJo/FUGou+0wlCTyWDaU8wF4M6pY489                 lnymz6K5mzjLSommUV6YBRqCmzRNL9yQJ7JTLEIw9oI5hpQxREIGWcuPU8QQ3QQTGYGXXnpJrTAX                 6BUrusXir7/+GjHoI+rkVPoFtWp3h2ibQGmE4Z8Jfs2J5sTnqxIH9TRPt/hDudGsMvNuc/PLkwoD                 BD8DpcEFb6DUvHUxVu0LFHTuUhaMjA/Fhr/6tgmW4drQvLkp4TxTxoHzcsn6BtQRT6GOxlH7IUOL                 J0yucKbLwUoJk5QH1Nu4qb4GeTZuThx/gnEnMzNL8FujmcXh8NSTTp7z4QoT2IOH6xtX1SV+qm0m                 Tq/fWGeuCsLzpw211F3zVeLccyY/9OCLYm5Q0vBH451/JrfVtjNAGYoXApT+sHn/W3p6WShYjD9+                 zQ3vYNnONQ7TGOuECb2bGfi6xsZkpMD+rrvuwjaYdcyGHKYZZUIh0EJdrJGPdu2111Js2LBhVqvA                 R+IvvBtcHjIxLXATFbQ4Ba7hHymtL5wQN+mQdoGSXXbZRUApyLDfHpBOL1++HAXFgWIGKc8CTnNg                 HKd0SQ5zIh7XXW8O5QjYj5aog4TAYM1BBx0kC9l3332xAYXDorFjxwqjAampU6cSx4mDfDQIVwu2                 YIEOJZuYQ4TeWLh6IRKeMpi0Swdfe+015YtoDm5gCvLg7pEWUDLg8KQu/m9aWhogRRpjZqmgCxQQ                 kkIgKU60YnMcbYXe3zgvndN7gh944AGmQ+aKkbN69e3b16ISRENMLjk4TZRnbQPCnnnmmXvuuee5                 55579NFHWXKYa93SIdhkfE477TTKq+8IhiMPiDODHNIWnWKmdOOOfsFc36jRu02BWvl3DCzNXX/9                 9ZoLuIkh8hAoMJU0au9EMel0mQIUVl9YxtyXTTQgzz//POjZq1evb7/91lRreQednSDIfSlGqyz6                 xgLDSGqBgWiOthCVugAlkrzyyiswoRVhcXZ2NmftMDJ3TC4aS3n00N2cOrVztOU1yjaB0rhvYNz9                 D67p3HViMDwlEC4wL6EIF20NKP2hcrAyHK1I907LzJ6Z7ht43ClV62v0ojM28/Q6E2cOjEfZrG//                 M0309623arrvc96QEcXOXLElX9bryEOe4x4y8c2JV15risZHhyM52Z2qO6TPCEXzOqQMrKp+4aea                 xNfrN9YlahqM72nAkQ1XlXR9onFzo6m7+L4vAsFTH3349SRnbQ5QOoiz5bYzQOkN5wZiBYFISTRz                 dtBf4Umf2qXLhIceBb71BKXxcK1HSe/qnauVEFqIKujWKuaB2tmbkqyfpzuvB2e1p9iLL76I9uC8                 EImoAJEaitu5c2ewAEXBUUKZCIU4C+hgFZTHE+GQnuoh3ptvvhmNRLfIBPLAPsV0aDkAQYGKigoO                 IVwhEArzA+NkZrqWSkgok2BfVVWFX0MABV4gIQABxOBc0AvMG3397rvvBg8eDFu8GKogJBKCa08+                 +SSHsjQ9Azh58mTSjz/+OL3o1q2bsAlikWAloApwJrHdZgDDSy+9lOq4G5988glGSMcZN8wP4xTC                 AiIccgoJ33nnHVAJBAGP4KaYDndPZsbIgAj4v9gwJclhWZJsWsNAE8aHs2AKo8cU4BCxGnEofwpp                 KQ9qayHB34Q5YzhgwACYI4AFUOECg095sJ585HEU0uAgOM6Ccdxxx1GFQxZRggNk5iz04IMPgk04                 6W+//bbGUEGJ1hI4M18E0eSce+65NlIG2QF0ZgdM10hSElLf2euTjXiv1113HasUA4g8YNCyZctY                 CClAPgWIdukdh5yFdDOHLsAKtrQi+EYG0P+qq66S8kAUYE+P2DN6Ho8HfxCtRpFojr00H9KwCJER                 gOlD7dUKOQw7iPlP5xPExxxzDDKQiQaiVFqwfw21BZTsGSKSZqD4VytHDJibMfO+QGh4MAQkOZ9a                 jAGUekLIAKU/Zm5cEIODGmSGohW4k/7AtFBktD/c77Kr39ZVTsPV8NzcZEJu25BJ41oCGXOql3ZI                 Oea8C2duQHOMJC3Abf4Y05pGEz0nvv4hMXnq/e3aD/QGZvpDpf4wqDQ1GBn82ltNcGfCGfhv123+                 fq2BeGJtqtB+rdnITwwYeGNq6j+ffHI5XJPupHk800jkmJyadG/bAso2X4rBsPgieQwIxcKxWZFw                 eUbG+FNOnf3Bx+YBqHrn/ZOmQeefsySC5cl4UCqLKlxwwQXgGnMPYKHfxx9/PB4ih0CPrlECPbgV                 5ICn48aNI9jE4DnEocO1pABuC4eo1KxZswhUsSUOCZc4BVGe+E7XKGUbL7zwAi2ilIqzCJkxaWqB                 zvh33bt35xBfhuYcBmYNB2XgiTtTXFx8yCGH6AkkJERNxWTGjBlUAdcKCwuJQ8PhMEzwavWkJ6aC                 bdCobB7IgEBAmNAjcjAqxgFgxRmEAzLju9EoDO39EBmGEowercCQrtEWhTG/UCh01FFH4bMAjj16                 9IA5HObOnUuncO44ZAnRsDNu5IwcOVLWyx7CzaEMPi8DBfwxDmAWgwAY4em0a9eOQ2JGXEWGEdBh                 qbBBLpmUp/qJJ55YUlLC4OtKcf/+/TXmkJqGAAtOMYl4rxwC8ewlCajBtNIpPQxQVlZGyQ4dOowf                 P57IACzjEE8WNNdoAEmMM3TkkUcC6zQBT4YdDrjwTArLlSZL4+woYZIoLNlY1ZgLekexjIwMBhx8                 1+NQc+bMoQCTpVthTMe0adPKy8tBcCbLPgihhwRYWUmDfdTF0xSUI6f1K0kD8cwUhSnDxCEbrCB8                 aordcMMNsCWfYWR+kRa9pTDdufjiixkNpgMNYd4POOAAGNIFhpoCl1xyifg77ewMbQmUzuaYrmPE                 HGLUTYSIIM5ZZ81NSR0UCM4Ix8s8obxg3ADiFkBp3ifkDZiXmXu903EnI/ER++w36psfzNNFuIL1                 5o25BihhzkTU1xoNABxq65pZWjauT/TpvWiPdieeeXbuBkbSiPMLoJR7S51lHzTtd+D0DO+4UKQk                 w1eY3bW6vWdYj8Mnr9tsfrXzw6bEnYuf79u/4MzTCwrz7/viC+NFbmyu2WQeKEo8+9oP4eioSGTE                 U0s/g2stWcn+GnL0Q026t38LlK1fs8awhDKLvLH8dC8LRlkkUuL1jR41+mYGgdgfbjRjrsg6TTvr                 qmmF6ZS+aqVlOSV0AiXRQqwXxwpVwIm77777pIWUR/sBUNQFk8ChII5mXQV6yIcJik4kQnUKALLE                 UGeffbbucnAWaMOeLTf6jlXj36HxEgBtA2GFzoAdsRuWjO6i67JhCFeRfMSjAJaMC4nisqrLn4IP                 cMmyj2zYG13A+ZoyZQrrP2cxGBrF28KpwcKFCFBlZSXYhCkqKMNbwTPS93CwJfzBhQsXkgbOVF6D                 xmjQEfaYEJJgb4SicAZNSIOPusGFT0dFrSgMGr2jvIUJPWUNgOqQfLrACAMuuIpIi8wffvghPib9                 pToDuHjxYgYEHNED58uXL2edQH66I9cJU5f7w/QxNbhFVNeVZcrIhkEc2sK7j8ViYCg5giqd0gSB                 bgxjTk4OMlARDsgAWwTGkScEASNonVMSG8ccuKEMfZck+JK4/wIUtIJRAoDIty6enQKmXmlAilWZ                 hZCJowrN0bvDDjvspZde4izCs1qzgAFhnCIcQUJd7YVg8swzzzALVEdmYgKWEIIeTtmGEJViJNBY                 2DJTBh2dr3Uzd+3bt9dVJmwBiGTAWbaF7NAVV1xB7EK76BVmgvbiINunHfD9YYIFaYR3mgxQIiXk                 HAoRWoDSzBN2DL41NzYllq9IHNxjhsc31uPPiWZVmh8LBnIIKh1EMNDgBkpcvFCsNBiaGYtP7pBy                 9sjR1wJvRMIOOjDfWKAxQodMi6YhgGx94tEHf/Jn9Pd5Lzr2uCnfYWWSCB+yhlkk1bCpfiP1N9Ql                 Fl31WoZ3SDCYGwgVRzIr9kgdG+s89q77lhsMbkyUVd3arv0R8ejF7f5+QdQ37LRTy1589WumYlOi                 Zm1jonDWvZHY1D126//A/e8Zrk5/zSUHuprUTDXs3pJAeco/S1LSRoQi5f5ARTBS7ovmBOK5WwPK                 FO/UrL1mpXkKQ+FK85uc9AF33vUJHq4zDi30c2qrBOIQPuC7YZ+4mZgNE48VWeUGs/DOiK+BRQ5R                 XMroFJPLMo7xgxEUQ1mpBQlQKIb+YVGySeWoGJkQmZQEp1BxXC24IQB4h3Oq8trDBPtEANqiPKaF                 DKquMvBHNphAJNSc9pQHSSFhgTKpiwMFSlK9RT8NwL3xxht6yE53KrAT0hRQLYgEdemFZEAwmoMQ                 jCY4pZJUgT8CQyRsEzSHAVMdIiHhOQvBSu6PLJxa9OW1116DJ5IDl926dVNIiyuNz4gXqZEkB2IS                 CVc5xQoBc4SBm4ZIHVeCLiMqBZSDtBIYQhi4cRYOEoxijIm0AlYwVIu2O7QiOXFybSvMPoiPMOgM                 Z+2wk7BttUkAmUaMbtp+qS32bY6nlkPE0+Xa4cOHsyytXr3aXd0KpmFhBDRxjBh7CIFVgA7SXzSN                 JhgBSUsBAgX6SF24UZcEZyFGAybsaYJDMdkJMkD5y6GB1y+AssmJc7HtRx5d3b37VI93oseXD0AY                 d5LQuxVQOnE3YBGOm1+hRGM5ocjIHj0mP/zoF8Dt5l8AZXJonAQOVlOtE3eXl7yS1n5wakr/o46d                 /snKpDhsDXVUoaONG2s3o6QrVyUOPyY3FJkcChUZAaL5aYFR3fYb/c1Pxtl8+oXl3bqfEw333TM+                 LdBhcqdwTmqHs+ctfGRdQ+OmRNOyz77bt+ewdinjvN6Ji+9513SXJn7usiOUbfjn7d8CZRuhd0Zw                 ZrRLZZqXoagOBKdGooOWPv0VY9rS2o4RSrC1ySYf62VZls6Rdis9Z7EizpIgE3LzId+qNURFd3XM                 Uvk2AUSCUPPnzydNGbUIofpu8xYEQHCz/ElDSrdq1PKBMAwjpSMAolIS8yMtvwN666238CPi8TgW                 SEWVdBNVEIB8VacMe9trycZZGEKqbgVWLciyRR7l6BA7pF2lRThlLB74L+rFrbfeihNHiKoqNC1T                 Z3xsK5ySVDoUkcn4IJLNlzBKQxyqXzqkGIVhrkzI3U2IHM5abiRoVE2Tb/suIr9V9S1JdVuV2dp4                 WuYaFhANl5DgA1WxHGwZJdhLSKpDJKzwEDkSu1UmAGp1jwJqDqIYhbfdo+2h31kpISf9C44OUDYC                 Y/WNidz8xbHoWL9/ZjBUYT52GC8NZRoscN605gCls3kdoAxGS/2h/FjmzN3andev/8KaukS9E3fT                 AJjogKNtiLR5mhCXcdP6xJmnXO1Pn5SROrLnEVOXfVib/FiD2YxsjA2lsZWHHlv9913PjJtnJ4u8                 /gJvcEowc9iU/Ds4RYF33//ukJ6DghkXxbyTukYrfe3G77Hb6Zde8ZTjUSYuu+GR3dNO9vjy0tMm                 3nPXu816MMiRDGoZ0mSrrm1bQLnVmzmxfH9mcYa/LJ5V7feP33vvMR+vSEbbhpKNGv4t7bdNduJF                 UlZlMmut9MDqkE65p1jUqgqHW5YRUezSSy8977zzgEXC8+uvv56YGpQkjPr0008lgPbbIAq0klDU                 pmyQzZTqo+h4BLQ7cODAW265BQxCEgI0xLDXB3aI4L81eZKprRN9AciIry+44ALiX4QhiNadmT//                 +c/Eg+Xl5UTZxIaEqMi5Q+IhwNYE23KgyHGDBdTmYLYiymy7GGdbsd0aIRWjQWFH6m2NJ8U0Duzv                 uusu+/QS5BamTSZu2nYrIsnTZhe23fFtk/m4WDKZpF+0aoHyp3WJE08q8KQPD4eL45nzApFZQIMv                 krcFUOJYFROE+sw7xnPD0Ul/+/spxWUP4JCu2ygsYE8T7lbMjY2GpkbKPP90c9dO+bFgccA/rdNe                 I95cVmPubaAkjoyU4T/eyNc/JoaOuC7dMxhhgn7zRcM038hu+49ctqLux5o6rHbDxsRVVzx94N7j                 wunDQyljO4YnTZ14z7L3GgDKrzcmeg8s98X6R+NVu+8+ZvE97yMLHmXSqTRd1oBKSPe2M0AZyCrK                 iOT7Qub7tBmeEcefULBugwOKImdE6BlbMrkVQsOkENJjO2uae/YQBSDlWNIpUTKLzvzScdBZp3br                 6uSg2T7n3Qq77LKLrkIeddRR7tvTEJZg13NEBUqshG6CufEnW16TA8FfCTeRKQtkrxyqHHfccX/6                 05/0KNJJJ52055579u3b94svvlC7pgMOqbwlddOdT9rdKNJCyQPnbDLlIjIpo1MSiXCb+PH3v/89                 XqRujnXt2pUVZdGiRcAlh507d54yZYpTOxmnQyA+e/XOds2S8t2y2TQJyC2bPWWJs60KuKcY+VvN                 CKfUcfKR0HZw24SEtpjTYOsq8BFbEWkrA44ee3tIXbi5pRI3h2uSlA/Bxx6ScE+rmwlpiITNcTPR                 qZ2jVjdzWpMDlOYJytVrEvvsOxJHLxwqi8cvCUZn+yJF3rD5tWKbQOn8FiXXFxwTzxz06GOrAMHN                 hNbJiLtljpNdMEBZj1E0JaZPeiSYMTXiqwgHCzpknPfKW+tNN0Eup9ebmE1AsCGx9PnV/nCfjh1z                 fZ7iWGROdnZZqqd//2ELmQe4NwI6hPe1iZefXXfDFe9V5C998Zn6NavNPaDa5sSTL3154KFjPKER                 Hm9pSur4+xd/aMQxt6scrHTIGVwOWm07CZTpYZYT8+C91zNs5MhrGpwHpJxmHK7mwIyM09GdJ2kP                 qiDNkCbp1HaSOLj12GrbihUr3n777aVLl7700kv6Pa9Ilg9Ry62FkgEiXwytYJY4VBUS9pQ7LUIG                 XRak8DfffPPcc8+9//77H374IUEcmRTG/AiEnbLJ6rTIXjlKi5Qjsl1zk81MVnBIOZa+bXkq8Lvv                 vvv4449xLV999VXGBEtmNEDtTz75ZNmyZZ999plwAYIt1CY3SPlWTptpBm6LGVS+lVOkzOSBiwy7                 LXotarP8ryF4JlMuItMNmnZAmFBmE6JAKwm3Rm7+CO/GXxF82uyXm/92ttUmJYGSBn7RRgtD4046                 n6d5/vlvunYdEfRNDgXKA4E5AKXHfHAxPxgp1OYCyhK2QKzEG5ie5hnap+9V3/1gLnHCrNkEvi3m                 RBPJVgxQkly1JnFoj4KwNzeQVh4Ll+2ecs7S579R19jznyFnaf5xU2LepY+3Tz0vHsv3pJf4veXh                 0MyOXUY/8vQXzENNw6aauvWAsqkCJDUYxDQPdjvPTgKUk6bfEIxevEfqsFC4OjVtwl13vCO0AiXN                 rxt/JnJbbTsDlL54AR5lIDLH6y/Kyhx37XVvmEfMGQT2bHA1h/8eKJkd9ACyk01arkrruduK1lpq                 pS5b0x7yxZZW3AzJl/brZjRl0HjnTBusrGCtJBTZTFvRzcHaGALo7rksDTwSMlLAOmv/luAssodK                 uMmd6ZT9xaHtJiRXWn2XO8ahnR3dtYB0HwOipDrr5gnZw1b5FFZOq3yRzaRFsbXU6pCSbg7utKhV                 zpYFtiSaMCDnOL9KMwJtVrSZDJdFyVZjJYLPtpVWpBaTBw7RuhJws6csZ2W6G9pp2hZQsrNAWVJy                 Rzw+MBbKiYSqM7xV4fh8gDIYT6JkC1AW6uav2cKF6f4pwcjoa677mL44QInzj960CZQgWOL6G56M                 Bodmh8v9KVVZsVkZgb7X3vKqcUMZVuRwamIWH3+++azzi6Lx0aFQXsg3K+ApT2k3EjheV2fO4k5u                 rlUr5v6gM0ZNa77+CncSv/jtdzcc1HN0umdgundKx06Xtms/+vprXzDRvSOMuVL5MyFxq21ngNIT                 zTNjEpyV4S3o2bPkg49QETjRpHNDB65mEPDLzAiY5Fao9QS1EB1Ew1opmdUeSLoiksYorbNb1m1F                 61seAFq7xcekbNxt0UrIxSnbqPItkQMTyH2KwhKsVRpW7nCevQ6Vhmy7ttg2SJwdoQwpk8SW8myN                 bLuQFVIECsi5tmXkBbuJcaYh9tvTlqVWDbmJU60kd3eQtCh5vAUSSRKJlCzqUPL0TpEYuqXSHDE4                 tnW7eLjb4qwt0IqsVPBkeN3F1JzSthhEMdKcbUW2wE5Q8mZOmyyIX3XLu74pcfzx09NS+mZGCjNj                 s72B8ljHuRlh8wlvE3r/wp0s9hqwKPMG8wLRiXvvP+n1t5rgQu/Mi84MIrQYGw06G63wf/3GxIV9                 ijJSB2eFKz0plfFYlT82LKfkTgGluYSJrW6uBw0fWboi1XeaNzA6HCqJh+d16Tiv3W59585/dqP5                 9bS5AIp/urkGZwfj2VDb8G1D8w/N5hn1BAWq5y/J7DQ0EptsxA7N6tBh1KWXPo6903sjizO5IA9T                 0LL9gowMSaAc5TzuUxaMljpAmQc+OkDJ5gAli4cBSvN1Cl+sxOM3r6E8+ZTqOsJ/402iPY5TSQvs                 k1cklP43ZDUgeewilEYqQno71cLycZcnsWXdLWHRTaivONiKyiFBjo3Q2yRbEiIhS7DNyRKseQiA                 2KuKhchWrW+bVKxVYR2Kj3JEHFrxEIMRlnPEOEg2C462pAoonzIS0pq0iMKQEqqlhNJbkj2rWnZA                 IHJg7q5Ijoq5iQLU0inKuzlAyoco1kpUN1HAJuAgPmranhLZQ+tL2oTKq7qKkdMmk60Rhd0l3YdK                 tOLDYaucHaUtr1EiLu0CXvW1jT/q6e5PPkl033Ny2D/dm5ETjZbGOprbOGmBEvPqIPOTmALzIox4                 XiBWFIxVBCLV5k05kem+4IDcojvW1Rh8gYh/HSDgH6pj3nOxubYJGOYYl/L9j2qzO/YL+adEQrM8                 norMjnNSAsP7Dr6ijrGtT9TXGfRaX2ceUu89YF6a92J/KDcWmR32V3pSJx584LQ3XltnWDVvpoW6                 WtMFjMh5q/na5sT6RvN2jMT3mxIHHjk5PTQkGJ0BioUj1R06jJi34FFahzkbdRvNj3oAAlS85REe                 I7Mhc5bJbkpc0G9++w5jgqGqcLSCvicfihJKmmdIQUkDkc7V2xJfsCKaOdvjn5buGzhkxBXmxSL4                 tub1HGYcfm5CmxpyPVgDaYItPHHKfRayYIEiWu2nlk2TsDrqhjnxUXXbitUnKS57kc0nwSGJVuak                 Q7cA5MBQhSErg4iStiNuhux1KFFtKzqkiiSBm6pbJjBUGaqLgwpbDiJbXvlWYEGzvdypfMrYju8Q                 aW1gbCUJJIY6lJzuxG/0H06tgLKp2fzumsljOvEj1zeYZx8TTz/zY6fMaWFfod9jPo8VzTbvnfQG                 K/yhuYEwXlWR8+uUHLwnT7DYH6wmLA2EJmZm939wyQdUx8vDZMyPuVEVg3jOhVjHiePA/K6xOXHX                 vR9nZg0L+GaGwrN8/opQrGyPjBGnnjV3zZdoK/pkfkOJWM+/9s3+PSd1yBgeCJXGo3Pi0ZL0tMET                 xv1rbfLHoAZ6nHvKtLAh0fRjwnxqYrOuTj7xwtqs7qNTg6NC8Xw8wVCgPDV1RPW8hzfBn2VBcia/                 MM6RC8Uc4j99AYkv6De3fYexOKRh8+Ck+YWiwcckUBrP2gAlw+IAZTA8x/wWntHoNHTR1c+qIaAy                 2YQbjp0NM7amZc2ePeaKpbnvWpBWAfLxsKwLxqH14Fqt4RYjlG+Lke9GMdABC9+2DVufDqKwqiNV                 mxXdWEPaVhSRI8wSZAtQJCp71VWmSIWVb3vUitwtimBuC4ubysBN+e4mIHcrrQTeHhI3u4ePWhGr                 Vm39Bpf/+dQaKAEyC5TNiY0NRL3NiRtvWhb2jwMow8Ei8ynB+NRgfCbupC9UbR6oNLduCvAxAcqM                 QJE/VBmOlqZmDDuox4SVawwYAECbN28yoGjuLJOBxpjLDeggeRtrDVaOHnt9JDLM550aDFXgrPlC                 RXukj+l5ZN7Klcb3rGuoqU80b2pKTM67LsVzYSiW6/WVRMKl4cjEzMwBDz203D7fU+98gAc9r6tb                 m2j6Cfa0ZX462ZSYmr84NTggNTDWvPosWhrwlaZnjJiz4FHCcs46z8gS4IMdLqCEnD07NkTfUaAM                 R+d4Aywe4w4+dPr7K8wlAJhsAyghmQ17JTAtJSytW7fObWkyaSUsFggEwS9KtqpOR1vFwoIDiPJb                 ohg5IhVTjs7SolsS2xAFJEmrhiAroeWmBCRWIForHFEXxIrCYDSHVgZI7VKMuqwflBRPytjBMfrW                 0pBpssXjZm8XCTIpZnvBKXJIuNvafrI9tcubm+BpB0et/Eb/ydRW6N2MU9PgvFu3Bi3jX3nlY570                 ESF/EXG3eblkZApAGYxWCyj94SJfxABlIGaeM8edjETzPL7BYyfcvH5zYhP6SazZXGewF/BpdP4B                 ZA3mveUwZ3vx1R/33X+0PzjM450SCBWHY5W+UGFaYOpe+01+7wPCf+TYuLGpftUPjYceM3rXDn3j                 WZX+QEU4XOgN9L+gT+War1E14NC8ALh2cyNJtLShYR3Qal5z6Vxqfee95oMOm9reO8gbmRGKFSNn                 MFCS4Rkx/9LHMQsEQqktUDYrNJb26vKls1FsB4Gy2FyFCBWxbJxxztzaxgTeK0y2AZTYjzVLaz8k                 IOwKs7dnZecckslZDiH5lSovBw2SxbphlLPsYUh59jCx6ADp0HqsbRJlaE7CkLBYI1Cwh5xiTytq                 EYbKgRDGFoNsvojy5Kg7VmwSFlyoK56iVtUhndVeckLuYpatPStUbTUUydSOk7jRip0Ite7ughK/                 0X8+tQGUOH3gWpMJvc3D22u+TfQfcGV6yohwoDgWK/OHcr3hycFYbig+yxcyrzf3BAszgvlgZThe                 xuYP5Xt847vtPfmp59YBgqADSGVAgX9oiAmMcVIBnNqGJudlwE2JyuolaekXhMLj/YHpwEoks9y8                 Oz1amLnnxGdf/KK2sWlzs9Gpl5Z9E8q6wBOY7PGXRaKzY/H8cPTC2+58FWg0t5waE411Ri85MnG3                 uZlTb76qAyw1JubOfz7Ve5E3PDGcVQyQ+cPFOKTpGUNnzX2IqJzaGI1zz+m/GSh9gcJYVsnu7fuO                 HHcrfismyPYzUFrWLZsM29qS8GjJkiUDBgx48sknsT2ZH6Sf01pLFkJxlkx8rpEjR/bu3fvdd9+1                 IXkrm7dWas0YUnWI9EsOPfTQQw8++OD9999/3333sX/ggQfYQ2Q+/PDDCLZ06dLPne8lQKoIvffe                 e2+99dYLL7zAHkKMV1999Z133nnxxRdff/11cjgkc9myZR86775FGMkj1LZ8vmv5ACm9oPpFF11k                 v8HCXkNh4ZJM0rZfdgwhmwmJ1Zo1axD7008//fLLL7/44ovPPvtMh+vXrydNzkcffaRWJJLqbj9R                 xV0LwYS/NuEm24Xf6D+W2gDKJvO8DFjWUI8qJhKPPfn5/gdO9HjGhQGXeIk/kmPeZhbLDcYIkKvM                 PlwKVnrDhc5D5vle35TUtMGnnTHrp42GC7pmXDrHszP+k9E9kHg97mptkwHi735MnHlWdYfUfrHM                 maFoHtATJJAP5Zvbx9EJTz2/mjKo/IamxPV3vLFr6lnR7JJ0T2koPCsYmtZt78FffmWa2LixxjA3                 t70dR7hhrQFKIN9BvE8/SZx8cmW7lAGRrMJotvl0ojdYCOinewbPzL/5pxpzlYE+NzY34Uc7ENaC                 YtCvAcoIPm9uZlZ+h7Q+s+c9t8l5q7n5mpj53zZQyorcRg7dfvvtv3Peoga+cOg2e0iekTU24OOK                 K674m/NmLes0kcBuYU5C+GLxkQQMqU7Ctkt0r9eC/fnPf/6v//qv37fQHxxSWm+RgfQmGBF84HbO                 Oef84x//+Mtf/rLLLrtQ4K9//euf/vSn3XffHW4IRkUOU50v6lVXV1Necv7444/FxcVjxowZNmxY                 nz59WBumTp2qV8xCej3lZc4nqjUCFnFIWGBi/8EHH9xxxx0333wzOCuws8gLvfLKKyeccEKXLl0O                 OOAA9tBee+3VsWNHJWKxWCQSoe8HHXSQ3gO004QkGmrIRt+SmVFiqO2U2Wn6jf5jaQugxKFMAmXT                 pjrzQrSFi571B/qFw9MjkZKQ+aZgrj863dzqBReSH8wxb1rDR/MHC/2hmcHwpFB0yOz5z+BA1dQb                 FKtvqsEpNL4kiuEoc3NiE3DmvAQjcffiFZ27jPb7x0dj+ZF4gQHi0AygxxcuT/eNv/zqV/D4MIuf                 6hKV857fpX1vnNZguNrnL033jD3+xKKNm81bwmtrnZelm3cdwXmDA5S1evyyfmPirjs+CYcGhaNT                 zA8uY1XRzFnpvrxotDjdM3DcpCu/W2dwiw2gdO5H030zAoYhtH1A6Y2WmZditAbK/LD51NqEcGzw                 Pfd/sb7WcKhrQiz6TfKXcbchMzq4ivg1YMHq1au///57TGvt2rVnnnkm2ARYYGA//PDDN998g2cE                 EJDGCL/++uvHH3/86aefxl97/vnn9UWd888/H9fpiSee4BR+HyBLgWeeeQa37tlnn33qqac4pe80                 CWKs3QpPO3fu3KlTp2uvvfbqq68GeS93iISIzBtuuCE3NxdY0W/1kEccQIfjnY/NDhw4sKCgYOLE                 iRSYNGlSfn4+iWnTppFDR8BBMFdfYRThge6xxx7g6b777nvYYYelp6cDqeDmTz/99P777+s1hUcf                 ffTFF1/MaOBdnnfeeXBjiCT/G2+8ATiOGDEi5Lwq8cADD2SUWi050L333stZv99/yimngJhHHXXU                 SSeddOyxx/bq1evEE0887rjjONTrNfGmKU+nLCLvKAkoLWJec801jKdQG55kCvEtnv5G/7G0BVCC                 C+bZIPyypp82mNC4pGxJWkb/eGZBCPuPmO8pBuK5vkgejqQTdxcHouXhWKV5ojBQEApPz+40ufs+                 o97/yLDYZO7ENDU04ry4vCcDBzW1DevRF8pMmXp3+5S+kWieqR4HH2ekB6cGTaI8zTP55DOq3lue                 +H6Dua80e+HHab4xnkB+ODYrECpOSx/X7+Ib128wATNcmxoxiY3NCXzVDc6T7bWNztuKNq1NlBYt                 2fUf53TbqyLNm+sNlWV1mp/qyQmH8zO8g8ZMuPyH9Qa0DG7hV5qlAVEBSgfFNCBJwc19qB0Fynhm                 XoZ3SLfuo154eeNmJ+SuM8/vO0DcGigZliZAAXwBDrBh7PbUU0899NBDzzrrrKysLLwwDJgcLJn9                 EUccQRn2IOCiRYsAHbl4FANSSey2225kKsHekn6MrJcY9ujRw7qWIIJFOvbAzZ577gmiTZ48GZ9x                 3Lhx48ePJyEaO3YsIDVo0CCYU4byoLnh4rhv4A5NP/fcc2KoTPZu1+nRRx/dddddgUvSOvvmm28C                 zUVFRSALFfU5BH3vZdSoUTDce++94Yyvd8ghh4CDOK0pKSlgKAVAnAsuuMB073e/A23xYRkZImhO                 QUJSOXGsGfjIeqM7mRYEOSUx2LMG4PkKKHeO3Niq9FdffYVUaWlpLznvcBS1uqT7G/3HkgFKVESa                 ZMixWKBNuLCxLtH7oitTUocEI7n6wYl96aS50hcpC8UrU714gtWReJUvmIc7mZLee9S4683Tguic                 4cd/ZxMcmK2xqbkG321TnbndfPKpVXu0GxiOlhIR+8MF3shMb2SGuTUUriB0jWeN7bbPuJNOuayo                 9IOZ+R+l+aa0S50cihUT0uKBduw08647f0x+mNvcUv52c8O3AGVd3Q/GK2wyd3jw3oYNvjqtQ7+s                 7KKUjJmRrNkdu1zy993Gd+8+d/d2vceMvxKgBLqAbEc6GG0XUAaCVaEIS4UBykCsqE2gxJ3MzJq2                 yy5njRl/27pNifWbTX8B79oGzANmbQDlmjVr5BDhWGGr7LGu9u3bd+jQgT3Url07gECeFwTqXX/9                 9V9++eU999zzr3/9i5ATkKU6ntpdd9116623koMXc9111z3yyCPY/4033vjwww9TEsK3wv0UOgCO                 AjVZNZnRaBRcJtTFE5w9e/Yll1wCZpFYsGBBWVkZ+8rKSk6Fw2GA0qKtuOnjEF6vl3gWlxOUxz8N                 BoPxeBywI7wlkZmZSRkwV7Xg8OGHHxIC63W5CPPyyy9TYObMmbfccotgndYpKRyfN28eOQAoORA+                 OGdzcnJwS4FgTh155JF6E5p6pD2QRPc5q48HQJIcnjBRDsSgsdjcf//9AlP786QdJfmzn3zySZ8+                 fXCTIZoG5cFHLQZqdBtAqUvMCIDzjrfLcOm39nAmejj99NPp5jHHHIN3zILKXp9JEFv4b9iwgZ7i                 fTNf5OjUbbfdhjPOMoxiKFMCqLPU0ggTbQwdOvS0005DeQTo0hCdJQcVYqLtp3J0lj0r99y5c+ky                 IZEKf/DBB+jMueeey+LKQkWO2mJxraqqwg8gSmDiJDZV6DVBD/EHqx2LMQNoZUONTz755AMOOODs                 s8/m7JVXXmnXJCIn9IGzRDx6JaB+ZQupjCTcOTJvD/pFffPQDn2uIWqtbUi8+U7DkcdUpGWMASIB                 SgMEyZdOCihLIlmV6aFC8ymxUCk+WjQ2qUvX4XcvXm5+jYNkZnMQoQUUms03YRsa6s0t7/WbEs++                 +MOee030B6aAkiCjz3zOIResdICyDB82JX1oJD4hEJye7smJZVf5QoVd95ntDU0PxwppzueZ3q1z                 3lVXvoc6OU+b/9BoHpysaWrahINp7kg1JNZ/nzjv7Mqgf1AgNJnq+L+pGXmZnao7dJgUDI8aN/Hq                 n0xd3XRic0Q1WJmUnq3l/04AZU52x6kZnguqqp9k5XBuLMHHOOymiZYxSW5Ou+gW0IMBfPTRRzhE                 n3/+OR7Txx9/jHmgLtAKh8iBli9fDkTqN2GyKPQJJAKS9JEQoQB2gupI11FolWTSNfU6hGQtcrtI                 AGQAXHl5eXFxMVZK7AxQou4EziUlJeRMnz6duBjIJk15askqIKwX9xZVBubwQ/FGIRt3Ex3DDQcQ                 J3Hw4MGqQvW3nFdMwlaigo8sEkTZZOIDZmdnk6DXnMIpY5RYNjAnp7YhYnBwgcRrr71G6wTvDJpE                 olOMjPr15JNPAoJ0DecUS2MP0JAAEeSoYrfgNU0DuJS3P7nbIdJgyj6BAPARAg6YHRKMA/mMPxMk                 CNgGffbZZxdeeCECE2qwwODmy4lmEFgOzz///P79+3NKrzHWzS56TdMAHJMIphx11FH6NBhSjR49                 GiaoxPHHH89Cy5zaWWPYGSJFBnPmzPn73/8+cuRImmZtBljVF0nLGpmamopIzA6LMTnytNBGJpRG                 EZImVjnf4AQZyUGGvn37skbutddeDzzwAIVRYwafxQPJDz74YOIDkFdz9MMPP2ACBEygLfOOG/7E                 E08IRocPH84CTLsEFmA9iq3WCwoKkIelQh/LQ7vECrGpSIF/O87bptavWWsyv8Shz7X1jQ24P1df                 /3YkPi7DN91ByULrTvqjxYFIsfkJY7zUFytN9xb5gyWZmSX+4Igzziz/4ScDAy2gkJwGh/DxELeh                 bjPWmMDJmjj11jTvwEi8AGTxhSoJ532RIhPXOy9wC0WLuu5V6vNP9nmK/f5Z0fgCj78kFM/zhif7                 wzPi8dJwoHy3v43Zb+/cispHCGwbzdcicQ1p0WzmS+SNiQ0/JiaMvyY19exY1qR0/9RIdkWGPz8c                 Lw8E8jze4WPG/wyUhN4OvO8MULZ5MyccmRGJjMjMvPjuez4BtGmCZcgRzwyC5dtCpl08SrwnImuO                 W03N1kjoINLXEWbMmCHFxQ4BXILx3r17CzQhKZAKQGiSHB/tRRgPji26i3/arVu3/fffnwQK6vF4                 evXq1bVrV/QeWMEIaQ6/kiqSFm5YI3CTkZGBSwsKQ2ANPhHaj+V8++23lIFwhAnbLVDSIqE6jeI7                 YxtAld7tBrKQgy8MjGKcPXv2xBGmAHXvvPNO1YWErSIQBJhDYAaz1RjSR33nC/49evSgC3QEW6WP                 9IscQJM9HaQM8rvxbidI3Qe44QYxjHqNJuhmZw0DtnOxJVEdVGLl03vtgEhAByjXWU0lBAcgg8VD                 H7pAYGrhy7OkgUcwIRMFWLJkCZkEB+oRPjgDbj+TLWIk4fbOO+8wHUwWtXDeCVwuvfRSDXJFRQW9                 wEVlFWdxEgzB4bvvvgN8wS8WGE6JJ1VY226//XYwlJ6SDgQCyE/3UQmmlTlCGPpFXWZcF+UZdr03                 Hg7MOwowYMAAGJJPMZYZWkQwCn/zzTea4ldeeeW+++4jh/RNN91Ev66++mr3+Nj9ztEW1yjlUSY2                 A5TY9uRp9+62xyBzoybKZoGy2PlFs8nxhPICmWV4lMFwWVZ2cYcOfUrKH5Q76cAC2y+BEgiu21RX                 ax48X7UmcVCPSb7gKH8kx0AkQNmClcZjjeYHozmxzOke78TM2Nxw6BKvZ7YvWBaI5gQzJ3uDk0LR                 go5ZC7p1ubTdbkMikb53LX7N3FZuTmxyfh9JW+brETTYmHjssc86drrYHx7ii0wJZxVndpqV5s3p                 2nXe7nv0Hzzsku+AdXy8FvfOEdLl6yX/GxTdYaCMTktP79PzkPFvvLWZMdlcn6hrYECAcsejdDXh                 EO02/PDDd6gFvhjHsiX0QLYk4lAEskBORWP/EEoDgqDTeJqUJIdTKCiWyQJLGj1Tpt3DhwSkt5bR                 EEZFXVihmlgUMsjMUEHWf5BRcageTsIIcRXxXDgk0wKKQm8id5AIGAI399tvP2LDww8/HBgClTjs                 3r07nh2xJLXUBNaCE0ErcjZxS/FGMWMZP83deOON+iYX0H/zzTeTSV13XEwHsR+AEg+UhugFmTCn                 X3asMDzAEbbAt+0+CcqwFxHVnnTSSXj3bgTZIWJsGUaln3rqKWQGu9njo9ELRltnEZjmVKxNwr9j                 9P75z39qiCiMr4crzVipR0hImMlZpkbvnGfKwDgWErCMWcOtFsAxMjiG9lM29Je64CZTYAvoFIR4                 jK2EZBy01pLGPaQjBBlff/31e++955RN6hX4hesH8KEMBEPCLAg+tKU0hP+IqEoL+0hQ4OGHH8aH                 1XvskUQCwBZurFu6RENh1Iklwe3mwwSyTegUg4YWSc8hdcQtxo5SEihpSQkHJZqbEhuNQTcl+l58                 zS57jAhFq0BG8xacWK55ZbcTdDtAmZ8Rmh7IKglFK/zBokg0NxAY8MwL3xOzO/4Z446gPyOQw72m                 vm4jkNPYkLj99k+Dof6xjtM9wekE3Z5wpSdc5Y3MchAHoMwJRCdHM8eneYb7/fmx+LxodH4sbuLu                 SPaMcOY0H02HSgP+Yr93hidj6AEHj33ljXWNTShKg14I1FjrAGWTeeNGYcl96YEL/bFxnvDUUKw4                 3rEq4C/0eEedd2H5qm8MUNLfFjHNk6TJA+fY+b+zQJl23oABC9EZgLIef9qsIAjHsGwJlLBv+Oyz                 T9A2DMMcO5agOd4auZX77rvvxhSJR9AwDqX969atI3QiRiaNosgsxZlDmNupVya6NWjQIKCEpRtW                 QBt7wAuHSzeFhHonn3wyboWKEbTi6Am5IAxVX4UEJUFM0nAgkoID3EhgrgqdCJAxGysAAr/xxhsc                 4o9gjfpyHoSrQiaQsWjRIthCOLbEmDaybkVAIWVwRTFmDgUx2BiuKC7VM888Q4L9m2++CVwSBhIa                 E8I//vjjeG0UIJMcHUIcCnB3lAQB0LJly3DG6SydIo5Wpr33BbknsRW9/PLL+NFVVVWk6SwIi5/7                 t7/9jb1ynFIJ3D3cf8aNNCsHmEWLAAohLW4a0wT0c4q5YEakGFISJo7pICFCH9AKrdDwYdhRmKef                 fprxhBvpfv36sc6VlZUxjyxazCOgTGHwkUX63HPPRXkA35SUlBEjRoDgklAdVLsIgM6QEMFTSx3O                 LzJrwaZdKr777rt0H6cBYCWBYEwofUevKMzyjH9ql0lGmypoL8XQeSIGFiTy7Tjb6dg5SgKl7McY                 LcbcANps5Pj7tYkTT5qVkj41EKkGBX4JlGUmGDcOZo4/sxCgTPfkBoJTTzt9AQG1E/LWElv/AiiN                 OTQ1mQd3zENDmzYkLjh/oc87GMiTl+qNVHnDs9nMjyNNAD7FHx0dzR4RiY/o0GFUKFSUFZ9j3hPu                 mxrOmhmMTYpl56Z7pwVC5vdCoXBOSurQi/pdvanG/LymHjwzLQJG9fV15sXDn69OXDTo8r93OM8f                 n+IJzgxGS7yegnB48mlnFKxcZW7zM59JGUFEgFYH5lj/dw4op3g858+dt5SVjCZgwc4Zk18CpdOK                 yUk0fP31GlAAhbY2IK3dBrGEShGHDBlC2I6+or4sp8TvBJIYCVpO7IZmk49VoKnnnHMO4U95eTm1                 mHqrrFImoIGYCOADeW+77Tbipvvvv589qAGg3HLLLbhIRDfmufP77yf+Xbx4MVa0cuVKdFSohzdB                 lE3CorwSblyGcFWs+mK3eCg4XMRQX331FR2haaSS5WAVWBFYQKfIB2RtpxAMPkJD+MPn1VdfBZIw                 JwElRKO4mbjq1IJgpbtDeq4T7xWPiWVgl112Ac7wazilz8+Sv8cee9BZ8dlREjRAkydPhifyf/LJ                 JxKSTGbN7Rm1SXfccQci2WspEOOPVHqeFP7MHSOP8PrWm25f4E3TFrXoNaOBMtApYBTfnC4PHjz4                 o48+ItS4+OKLOWRPFYID6jJr5HNo/UFo2LBh+HHkoJOsjnCeMmUKbFEGBhkg/vDDD/EE6WCXLl0e                 fPBBVqAXX3yR1RSv3DrC2uOQIirawiGTYtcw1jb4EECQRovIRNS99toLpwG2w4cPV/dRDBY5EBC/                 uFOnTuFwmOCJ/FaE88tyDmjSBI2qLsLbMdwJ+uVdb3QYWDM/czHvJXv5jR+77zvZFygwP1UUUMZz                 wEqBgoAyYL6rlQsupGXkRGLTr7zqk5b73Rudl/dgwL8Ayvra7wDKpvrEyy9s6tRxpD8wxh+eEsw0                 bx7yRSt9kXm+yAJ/eJbz+vSJ3siQUPyiCVMeuLDPrfHMvL/9bVQwXNKxS2UwOsMbGR/OnhLKnNZ1                 71n+UH5aRh7heUrKyLvv+qiBcaY3pjnju9XX4+Aa2H7prea9e07zxScQ6XdInx6PVXm94085LW9L                 oPzv8yinhEJ9ljz2VQPrBk60GQlmC+UAHdoGyo8++gAjtxehIMzJguaW9PPcJRKgBiEnqo8hoV6k                 MQ/CWx3Clr2bAB2qU9FykN1KU/EU8OmuvPJKYr1rrrmGsK66upqcyspKMi+//HJ8unnz5pEPHqkK                 SgnD0tJSIBvrQr+x3v79+/fp06dv3744j2RyiN2iyngcFMNo4SBDokUcgfvuu4/ADfEogyeVl5eH                 0nMIopEGOmkLNwFj09OOOC9EbVSXAJgH3gfGjPeK2UswDJJ8OOMnsgzk5ORQEVflnnvuwbV8yCFc                 S4wQ46fYE088wWKA10aBRx55RGC9Q2SrCBMBCPAOgrnN1OBDFk+3JLw5MJ3RFqagDKxM8Ln++utV                 gLmbNWsWzp3u8EA4rZmZmTjUFo6BIZSBYrQIq6ysrGg0euihh7IssWbgjTJiDCYjGQqFJk2aJHkY                 OhZpligWJPAaJYQhcyEMcppK4PQxksT4ICNNwJxMWqEkaVYapoCKWshxMAOBALOvx7aYLEinWLyJ                 r6V+lNesvfPOO8A3s4C0eoyMzlpdpWnd4IID8Go9R7qDJIhN2sK0htqKvROUBEoxcqipsaEOUCAU                 vXvxp4HQMAze4wcFFHrns08CJaAQMw9UesNAQ7E3OK1Tl8nvfpCoqTXhZXMCP+hnjxLuTgNNzhOO                 TXU1iUvmPxcJDw4ExwWjeJQ5vrgBSn90voASnp7wOF+435jx126sSazfkLjv/pqzzr7J7x+fmj46                 HJ8R65SzS4eBWXvm754yxoTS2XPbdSgMhwvPO2fh11+Zp4UY0Pp62tpofo7ZbB7N2dyUmLXg5V06                 nE+L0cxSr78IVqedUfzFmmTozZa8meP4fiJJri0JlBfPMR5uwHxm0gBlbIZ5ca/jZTu3uczzAEED                 lGWRyLSO2f0++oheA9hi6TxVan7/03bo/cknH4N0+H1MP+qieUF1NEetiFPyBOVHEIpi8DgRWDsE                 fLDHooBLMBR/kFOYBFHYo48+yikOqcVAiZVVQYjWUU1sIB6Po8Gs9gRcEIrevXt3LAfdxX3AzMBf                 xThSboh8KuKI4cG1b98+PT199913J8Eem1cO/hpmSRlKHnnkkdLy1157DdUHuXBqKMYpmCtCx5Bu                 vfVW3DG8J4CAnmKBgjy8G9LOdCeHiw5Sl4oWwSGshb0sBwSnACBIGpNWLa1G1pYYAeWoyk6Qqotg                 wqCxYulr3ZACBZoWnG2N6ClelZ5UlSQLFy5k9J5//nlBDL4hoS7oQ1ruOePDlJFjBWDQGE+VgdAB                 /TYBoi5LAsjIaBBAgONkUkbDRQ5tqXWIFoFgFkKNKmNOi0T3eIJgMXrLBJEjRaIJcphNDS8OKXEM                 ygPAqS57tcIiiprRLpkW2tyDD3ajLchJGtLQIQMAjW7bKaNphgVtQWBYWbhnr+Z+DbW6mQNi4AnW                 1zXQQGLgwBt9/jHRWH4ss8K5621f4u28xztqbuwEYxWhOJ7gNG9w0IQpt5hf0RBmmt+3MItsSAnq                 GPih3+zBImbzp7WJQw8dFwoN8vhHAXbpwakOChugTPVVE3rHOpX9aZfex55YuGKFwd1N6xmdxCef                 Jk44qbRD2oXhrImhTODJeHNUBGTZe0I56YFJwdC4V141FwRx4BoT5jVrtGxcwaZEfW3i228SAwZe                 3T7l4lB4ZjhenuoZe+bZs1Z/a+6tON8cp15dkyltCeGNu4nk6sKm+sSI0Ze332NA1LxrMi8Uzwtm                 T/ZnTzHfpA0WpfkKAtFSf7goECrOzlzgSZ1w5OFjN6wzP9y07zdy5hXoNCPjTtTWMlxNepSEpZ62                 0RVNs/Rpa0QxGZs0BmXFEfvWubnMIdEK7sZFF12kAkRG3zjfd5ZRQdacIBvmk3nyyScDW3gK2ACQ                 BLYCrCgrig4Eo9ZA7aJFi1i99UwiVSSnHEAcsTVr1nzsPNiE6RL34R0ozR7TRU5iNOCD8ugxdYm2                 AFmcPgqDKUOHDoUJDbEnlsTGCACBAGKuzp074zEB3AUFBbSoURJw0Gs8Efzoo446Ss9R2g6ynGA8                 9JHoD3PC5TzhhBMID0nA+ZRTTjn++OOJJckkQfcVcW8byLZG7inTaOOuIhVNs2KBHRRgrmmUyXJP                 Ab0QsqhdZD733HMJQpUJH6INvD+mEoJJRUVFamqqfmFFXTJJ4Lyzhn3n/FKeKm+88YZ1QgUZcGNq                 8N/BOPdVFySRMOxZdBnhmTNncghbCUBMAGeF5+TAGQi77LLLaIt5Of/888mHWKJYPukss8whsbke                 e6TLHMJNrcCBWaYiqEoOh5KffpFmL2kVAWhdhyQqBVh1WGVVheqM8J577gmqcqjxt52Vhvwa+gVQ                 Gohs+h7vZ9Nmupo48fgFPt8Er29KwHweC0ep2PxmUZsByhyw0rxDyPzWe2ynvUY8sGQFc+vMOWIh                 PZszHC0ow0aCCPSJpWsi0QvD0ZHhzCmxTnkZkZmeWHFKoDgYvyTFWx7rODuSVRDuOPb6m97bCNAZ                 GDEos2Fj4p77PollDwzERoUycwTc5unFeJkvy7ksEJ2Slj7u/gdY1GgLgFvXlPjB+QW4wwS0akgs                 vufTffed4QtMNE+tByedfGrFl2sMUNYaZ7K+Cb9TQGm0AoIJ4F9vxHYkZwkZNfbKlHb9o6BhIC8Y                 y/NnTvRmTvTFCwBKX6gykjU7FC3yBwujweqMDmP6962s3eQ8E2Uu/hq25soAfI2iIJMZlbr6TRs3                 /VRn3lHcVFhYiBvF3mk9iX3bWA8FbVIdCKwBegg8//Wvf2k1BpgIWseMGYPhAXY4CDh6S5YsUXlb                 3YaKqBSKRQL7JHQCL850fi/4z3/+kzgaSzj22GNxAUATLJbwDRS+7bbbLMJCeJ04jzfccAPmhIUs                 W7YMjw+z/OCDD3B/li9fzh7QZI8LSayHo6GK4CaIgJAg6S677EIMpXwKY5wY7bhx46ZPnz5t2jRc                 BuwB4wfR1E3JDDFWIDt2td9++xHrgYyyGWsqLCEY53HHHXfYYYfpCcoTTzwRj5VDrA7XG+hUUF9d                 XU15xs0y337SlLntk/UJyVlX8KMJJ1kqGEx8LqZDgG5FtaTZv/3228PhMIAIKoFr9hofBE+GhZnS                 ISR4BVNQA+bo1Vdfxac7+uijWQk4xVgxIyyWxcXFKMkBBxzALKiiRS726AO+JE4oowQHpum5555j                 EuHw3nvvwRmGr7zyCu4bixwzyOwjOaE9g8aqyQoKyLKSMUfko4EsRajELbfcQnrx4sVMNF3TGsDi                 QXfIoSH2ujZKc/PmzaMJxINhRkYGmEjrS5culV6x2AwePJihoAqzjMBE+ug5s4mmMVDIRk8FvqZ7                 Tgc1ODtHrYCyoa7pRxwrPKs330x07zo9Epnh9U1tBZQBthag9AVLfKHCdmlDDjs65/t15plq5HIe                 f2GOHXgwhw7KOKjQ6LhnpaWPtO9wTixzajTbeIL4g4Gsqva+4lDmglR/aSS7rF3G0MOPK/kGjxAG                 TY3sAUq0iDD8mF4FqZ4BwWiOL1wMMHnCVb7oLH+8whcrwcNtnzJkwcK3ftxEWziDGxqa1hpkMkyc                 r/80Jtb9lOjd55rU9JG+cK4nMPHIo3M/Xek4jeb9HS0epdMHsxmRTUfMEQXA30bz6sy09kNi4bKA                 3zxM6otN9cSmpocKPOHKQGQWQOl8RCg/6CsM+8ddMn8JKGl+0+4IILZMnmNISXeStdOcdtwHdBdt                 wzY0wds/tdjkF198cdpppwEfepYCgiGqCegQy9MiWlteXg5/bOCOO+5QbGIv7sDBGjanBg4cCKqC                 j/CEwBR8Our26tULOwHdsHPACLO/8sorbS2awPsDDrAfj0OE7RgJCUJINB7IY+/3+0mg6DBEuZET                 PcZ5xKN84oknsBZWC9hqEDAMiuGS0AWKsYfIpzC4pjJI/tNPP9EXsACoxckC0AEjSgrEaYK9Kqrj                 qshZQa1Aikz44EEzRDhKKm+HZUdJSGcJeXB5WH7oDgNCLByNRhlkViDhlIhJl3dsdQDIprOMCYhJ                 vImoyMyeSBl8xwenGFUkpzrC/DIRlGecWU7wssmEWPNolHxQ24pnR0D6hpzAHK4i6xbOO3Ex88X6                 wSkgieZQBuRnkEnISRShXXBmpaTRPn36wJ9+DR8+nImmcCwWy87OhjP0/vvvg5jp6emsEwQu9I5T                 aAggSxWgvGfPntIQtG7AgAFEJ/DPy8tDnUBqWidiwJ/QQNE7dBLM5RT+KWUoMHHiRDkQDAtdkwLs                 NLUGygbzOVjzptubb/kkGhkTi+VEonmYfRIoCboNUBKJCyhzfIGCcCy/Q3q/4aNuoJZ5HRDV63Qb                 x/n+oQMBuhnCBFLg2+8TZ5xRnZE+KBYv8IWKUr25vlh5IKs6LVAWiM82oWt0+h7pfSbMuBMvz0EW                 g3QbNmDn5gLoqDG3pnsGBCLT/eYlZpW+4BxfqNp5qKgiEM3P8A0tr3rypxo8w7rk80mmZUnVAFQB                 5aXlz5tHjiJ56b7xBx00ccUK3WYx3Tfvf/sFUKJ5DhMQ0wLlmJvS2g+LMQi+cvOzy1iuJ5rjiZT6                 otXeYCWDYz5TEc/3+6bts9fMF1/4mtYdZ7EFKM3iZgQii3AblHR8SUOsk8IONBWVxUplKtsgtIoy                 aCSxD7qCEQ4ZMoS65KAfEIEVOqrrUzJ7HEBaAT0rKys5FGpA0jkI9YItqolnR+hUUlKC4pJJMIVs                 upU8duzY+fPncxZRVcs+2EH0SjHiVjwCrAh/BAeH2BA3gf3LL7/MHveBszgI6DTuhjjgAlCXQBsX                 ktAbD4UBueeee8hHWtxJFYMEKxgeThMJmTfOJvaGgYHRCAAHUAkzO/jgg/GqMBX3eLohjExxkF1B                 uC1wcD/QvnMkOTVBygHa4AwxUywnQCSwAlYCykyWLSk5VV3EsDPCLHucoqQy8e90yc+S+3YcEypH                 3paH8LbIgQnM6bW42YakIfhoOP4UA86YKTx02sXtpZgKoBsQU6/nZxk3mGhBQiV0aYW0iHWOQAdJ                 xI0IQzdzKE9JMI5eoCHMMi3SfQkG59WrV5NJGQoL/WkFfUY2OZKGu9NlytMKmobmQPCESFBLykwx                 cdhpagWUgIT5cAJoMn7CnQH/SL9vamZWkTcw0/kJYyugJO6eYV4KGZmQlT3kwUe+rHXeFeTACuDN                 xsAJZZgnNvOjn7r6xN33fh6JDPH7JwZCxRneskCkGpeQzRMu9wRLYx1LM4Ij9z14wnOvmddZMjHO                 bWKDkuBUTV0iJ/eBDF+/cHRaKFISClcHw/MCobnApT+IYHmpGRfOvWQJWu88yEmj5tKjcx/fiLG5                 PvHTxsTtd66mCaJmb2jCPvuOXP5RHX6uY0CU2ei861fASS1ARB1x1LfJvPgSoExtNxSgDPorQ9Fq                 kN0XK/VGqvzRuWle80PMQNg8J5+aNuyYo0vMZSKAktrOQmEuUxoDSD4NLrXTRP700/qZM3MxIT3Z                 iwZDJCAV2AYRoeDi4bgRKeMdiK0IrYKnBUohAh4TSy75w4YN4xBhIJkTjUql0DOcF6CHYkRq5BA6                 kUZ9kSczMxNT120EeTQimsANIaLUcxvwVE91SglLnMVhOeigg0gDBDk5OfhxeC44jzQEk7/85S+4                 tBgYCRqClZjQRwwDENTjAcrU7ylBSaAH8eCMh7LrrrviwAK+FNAwsteSwFBYZNRQiw9LDjE4AqgL                 1uPeIWpllu6+swDIqST4xSPGQye9NaC0fhDjY6WFKCA3EBJC0SnbinIgARk9Vd9VRXyUVj4EQ6pb                 DhLD5nCoAkqrlsUgkS2AJOQzAsoRK0hnIcCOMsqXQroTdugsc1vRdgRigbdVKKB8q29SZkuU/G8G                 SsLPmqbEmm8Sxx1XEgmNz/BMzuoEfgkoC9sAytgMfMOTT64kKMbbApxq65gk8IUNdax34EabCWCB                 4ElT79l19wuCoZn+UKU3MDuSvTDVb3zJUNy8/SySmdsutfcF/eZvbk5sMl1rYBVhT92160wTEybd                 tPsep0ei5rVs8VhVNDYnHJkdCFeZr31FZuzR/qRr//UUjSFLY7Nze8ExAeehTvNw6A/rEw88+lMH                 zyBvaIY3OGmfvUct/9A8YQ8KG2kBRMaAchyaigy6+uKAiIBy7L9SOgyIRYqD/opQZHbQfDCyKiM4                 yxeZl+6riGbODsVyw7GJ7TpcdFHfy8zsmEu/Djfz4BFsUIUkGNlZxy7uuOOu3Xbbg8CZBVb56JnO                 bmOOUTiKFRUVYWz77rsv8EEmHMC4qVOnkj9ixAhOsUeZpHBSL0IzYAVAkQ8CYTlqF0dPP8ul4nHH                 HYentmjRIvxB3DdycA0ohgtw7bXXEnkRD4JiIAs55EMHHHDA3/72N/w4giPiX2rh6lJShxAJ0AHO                 +JLIwB7BcDAJCeEPiIAglB89ejSh1u23344npRvl1IXVGc5D7IApoZbiQRrFMOg7QuIx4QHhwuC3                 4rwAdjgadI0xlAnZwdRo0Ivzzz9//Pjx+MiMGHuapkcXXnih9Vl2guzcuQkh1fpDDz3EINBZ1iG8                 ZvpOF1QGYoIE5WKiezKWYAIlDxyCp0pqr34BRhZHFDTYiYZ0KZACFnwpo+p2fMBom2NbVI4ltUUB                 C81bwiJELfLJoZvufPWahsiEie04REJiq2krHlWUsId2DynTdgGp1FyrEdsJagWUBs8Y3Vde29S1                 G3H3NL9/ZmZHc8vbPAxkXk/bGij9/smRwLiK8ldwFREPINi0EQaOR4aEbMisBKFrc+L95U1HHZeb                 7hsUjOTijgGUwfh8gBKsce4XF/gjk3Zrd9bUmXfUEjk7g8DgOx9HTPy03lxEvP5fr2R3JGAZFApP                 iEXzYrGiaLQYXzIYzA1Hxxxz3PiX3/icUakjpGBSaN0Zz6bm75sTaxsSDRvqE7fd82W79AHp/imE                 3vvvM+XjDwyYGyxzhDQCU5+Nlk2OI73TneZG82ulMeOvTkvrHYvn+oNFdIExwZ1MD+BRzk/3VsWz                 5wYiM4ORsf5Q/+o5Sw3+0vEG9MYZYSPMz4TaGM1pTPzw/bo5sxf84x+76hdmaLkm2K1V26Cnnnpq                 1KhRisLQCRI4jOAIKIY14mQRbqNDVmmUIJR++OGHOZRiSds4nDZtGs4pWEYBwOL111+HG0zIBP70                 MxVpHhCGzeMCx+NxvRyB/G7dutE00KnrmOeee+4pp5yCYwjAgW74gLhR7Dl76qmnIt4RRxxBLRzV                 OXPmgMiLFy8mYF/V8ggkRBz397//nVBaQHnooYf26NGDBHVh6x4iLA1SWhBgDckaDxYLZ8t8woQJ                 uK74nqAz+AjEM2iIB8JSUnYri91Rsi1aM0Y24YhQgzWAuJIm1AVasVVEKgyRb/vlhg+LfcIpGrI9                 VaPUauUR66xFGffoWdJZO0TuKirPvhUkidAN8lXRQjCFrfAQadsoJXXFRtJCOmXrQhY6LbHstSpm                 +cNHgilt5YRsYueoNVDSRSbnvgdWhcODcdACoaJQrNj4kkmgNC/rdQHlNJ9n1IH75z+1tG79OkbN                 AAFbE44fvNgYRnrE5hwClFdcuzQtcEYoa7QvMg1fLNVX4YFhfHZasCg9kBfvVBaKTOyQfm7V7MfW                 bnQw0jw0U79+/U/mMiLQuRmPNdHv4jkZnjN9vosj4ZG4lsT+wdCYQGhkIHLR5Vc9Ri2aNW+WlAzG                 W6RPP9Q0rK5pqiF11fUfZgSHI0BGYNwB+09Z8ZGRXNFxUlrS4mKmQ1lmhwx1zYmxkxeles+KZU3y                 h3C0S33h0oxQmTcyC8TP8FbF4rN9/mlA9l57j37siVXmuiRVqUvnnYSIvgBQyTSZzYkff1i/dOnT                 DmqZfKmOTKWVOrpJumJVR54Cde+9997LL79cj4uDdGSKlVt1LJGjJqTiuGZgEyXJ5BRGeM0115SX                 l19xxRW4k+SomPboMTnuS2NANlCoHMV3IkkIWW1GvwcNGqTH9FRSe9tfFfvss8+Iu/GR1Vll0p0h                 Q4bo5ZUcslfrSrOHibpAWobEoQbBctCe/mLhX3zxxfPPP483CmRb/whS4Z0ga+Fu6yUB0Sh7QZ6k                 taTxJCGZ1WVbxsoPTztKktaChc4q7SZYaYhsRfcM6pCGSLMXNxZssVIVnSJhcyB10z3RlmwZiLoI                 YHPcY+LmoEz1mr0OqYVspOm+m6d76BBYhyrAXkxIuEdyp6k1UBLw4ryNn3RrZva4cCQ3ECr2h4uM                 o2eBMlIhoDSv745OikSGHHrY5OUrjKtlXlmO89RsQm/nqzhAlbE0zJCY1XkpRKJ64Z27pBzljQ4I                 Z00PZZYBMVldF3bwFwQyy8JZ5ocuHTvntWt/Nr7Yuk3mqRxiZlHN5oaffqoFbZjcZe9uOPOMnKys                 C9q3O8nnOzct7czd2518+FHTSiofMC88Z3ScviTdSXP9kZbXrqtbxYAxWrlFT/x9937B+ExvaOze                 +wz/7DMj3PoaMBDtcx4zZsDNRk0yN7CZx4bMTSVzq2vRtY9GOp7TLu08nN80//SsPQ3Kmwus4Up/                 sDo9ozAruzglbcCxx+chjDPRP0+npaSSyNlskbPOuRemmZZJaHbdGqCETe8oyRiSB/8/JJSJLriB                 gKGQwYsYNw2diLNum7R9t3YFWW5K2CFSW84ZQ5zFpMXNMtwaqQCt05DSrYadTHLUImWU0HSrvJom                 rbkWmkD0zkoFkCkhslohDpAwwh5CEkP5wiZwVhWRoZWQ1pW2mGVZkWPBEZGUDx9IfbEJ4bg4215A                 FEimfkkW0SxPHULujkgkdYQydtLVKMQo2bSoVe92iLYAyqbEqm8Tx51cnJoxxBfMicQqQ7Ey8wUb                 58d5rYEyNjEt/dyTTslZ8blxtdbXN21urmk0P38EKM3jhzBkM5cLDeiZSPrZV1ceddLkQObAf7Tv                 H84qbu/N6eDL9WWWpoVyPaEcXzg3Gp+RkdFvxsz76py7N4xSPZrm8DGbc5mPMP/bbxJPP7366que                 mz330arqhxZd9cwrb6yjSZpgXHFq6xsbiKYb651Ljs0N62tWIxWDinDnXXhNu7ThWZ2LOniGZHa8                 8P5H3iN/U3PDupq19QnzxmKDzmxmB8uNVHSEN28BZjY+/SYxcNQlnuiFGaFRKb5J3lhheqjQHy8L                 RMuJxH3+0uysYq9n0MUDLmHxcGaW6dH2M9XU1KKW6hU9SvbQISZY0+8mm8NZqzqt9GD7SU2ID9q2                 NZX9Dye6b4eFdKvRcOdgIdbG6KytRf6WxkNJ5bvN0p2G4GDw2IXIrciNCJbAtcrKysEOTXJo9OjR                 AwcOXLJkiXsKLA6K7Cn3Ay62jORkb3OEntQiUxJKGFtdJVv1yEKhmlNo4ia6bDtlsYzAWbU02pDy                 W3WBijZHg2/G1yHSBB9KuPeQ20uFs3Xz6aB7eN3XUpVDr62EcLNNt+ryDlFroATvXnt7c3aX4WkZ                 I0zcHTbfePCEzG9g2gDK6CRfqO8+BwxedM1TX/9oQATxN+DzJhpYYmqdNzCazfmsdm1zY01Tgq4v                 +zhRteCdaKdp0U7FoY5l6eG8SOcKbywfoAzFC4Ohab7A8PPOu9Re9GSuSSMbA1iL895Ah40j1gwC                 Oo8+mqcf9egm+YxpE0uZ4y9Qx7iTbECfg3TNiedeqj3w4NJ03+RgNCcQG+ePnT96yqVra42n+eNm                 g6QMqvM+NHPfyfQiQfDP5gjfZDxKuvDZ14lHnq4dOPLhUFZuIKskPVRgfiAUKQpGKn2B4jAdCQ0r                 r3qowWkdiZDd2Vzk4KPBSh2ZcMnEidb2SEt3IXSLvc1Xghyrl9tPKI1l9b+DmGgz1y0DQgchEuom                 FmXTljhUDhUZT9IG85yRt0OqAhCDj8XaYVdb20n2siNTSUVMev/99x82bBhA2adPnwsuuGDo0KHh                 cPjkk0+mjBBERJqKEgZcoEfKV+u6vWMlsaBALWVaiHE6ajpi+6VLIjBXLRJq17ZOScuZMaFpNyqJ                 xMRdhb16SqbNp+k2nxkg3/bITXCAJJgV+Mcff7QMIdtZi5uaOIjhlQyQ7bUSkC22c/QLoKQRsGbx                 I194gv1imdMjsfIMX7EvXGxe+pAEyhIXUBaal1MERnZIu/CQI6ctuOKFNz+sW/ZJzQefbfz4y9rl                 nzUu/yyx/FNnI8HhytqPVja++ObGz79O3LW4tmPXgjTftHBWOUCZFpoZzC4GjsP4ZWFQZtK++85Y                 unQTY6VLk2wkbLeT4Sqnmswj6JsAZgaFQcT9BOCMy+VMA2WTQEnXGkBKEHDCxAei0ZnBcHGHjAkd                 98pP8V0c23PA/Kueeu3D9e8sX7vy66YPVtR/sjLx8SeJj5F8Zf3ylTUffc5W+9FnCbaPv0y89WFi                 1feJld8kxk97sYN3YkpgpidS5InmeMO5ZlgCRV7P5K5dJzz4yMeI5MwS/9G8pPIlyRELhbQTqTKt                 Zlpk01Z7UOWdm3hrAyKag6dl+59PskPMzD0+kO0C+VsOl8hdxW17IjvyImvJ7lqMnshpxFDyxFbI                 QoyqfP75571798bUrZFDOTk5esgJaTWnFHbOmKbtLJMG/tw94tCGxpJEndKekrpPIhngQ444k1Bn                 9fAQmWJLpvio77ZpHSKzQMrm65CzkHpkxdMdPx2yhy1isJdXq1ZEYoIDa9kij9JU1G+WIDs7tssC                 a+s+O3mGVFe9piHJgIRu/3QnqA2gnLfohd3anx+L5xJ3Z/hK8SKBM+d1GC0vWLNAGS6OxuZ2zLrE                 45lByLz3fgWHHlne66TqQ44sOfq4eUf3WnjMsYucbeExveYdc9ysY44vP+HU8jPOXnjE0Zd0SJvg                 CRT4wqVpQfN7bU+0INWX48OHjZREwjnh0Jhx4xav38BwmFtADCxDa4bDXCek502bNtTo0p7Jd7LY                 NtbXgqcmX91pwANtqq1ramhs3rC5fl1NYunTG7vtlZeRnhONzUn3m98FxTrO2iNtclbXnGNPnXfS                 6XOPOLbs4J6lhx8xt9cxi3oZsecec1zl0cdXHn3cbLpzdK8Fhx6Zf8wJRYcclXvwEcVd961I889M                 DRTGusz2Z+YH4rmhWHEsVpKRMf6kk6s/+dw8GOVohBHY2RwiqzmxGdh2zjGFzP3mzZsam8zNfYrJ                 g9B8W3uWtkEyOavTO0dws9b4/19ilBgfjYM1FboGKW0zKYlB2sL0Xd2npAxVRJq5wMYsB6qoANMB                 E2VClLFT0yapafbUshVXrlypl6FBnFKZgoKCXr162UwktI8lSUhyXn755YkTJ44ZM2bUqFEPPvig                 Kn788ceTJ0++6KKLRo4cyX7QoEE4qg8//DCiQtSC7r///ssuuwwf9pFHHqEW+Z9++mlRURF8+vfv                 P2fOnA9bvqvOnk6pRYj8a665Zvz48bCdPXv2B877dC2Bd7fccos4P+R8gg3OOvXee+898MADM2bM                 QFo6Qt+BY6Qix3wPZNy4e+65Bw1nhBnqp556qqqqiiYmTJhw4403rlmzRgAHzZ8/f+rUqTAZMmQI                 bdkxvPvuu1lXBg4cSC16DWe6ST5QW1JSMmDAAPx0vPWZM2ciiaqogO3aztEWQNmUmJx7z+4devvM                 d2lm+YPms93mpWetgDJc5gBlmTdjQTh0TWpKBZDaLnWyJzjNH52eEZia6pme6slJSy8wW0ZOmmdq                 mndShndUMDCs3R4XtW832ge+ZM0LRqsDmeXhjpW+eBF+mS9YFo1XhUIFaWkju3effP/95gVluoFT                 s7nO+c1MXVP9JuftO05k3WTQEBdyM2ukEJJMMyzGBszFTacU+Sj+ux9u6NWrNKXD2HhkfjA41/ko                 bn6qr8ofveTv7Se2yxjri0xK9Y72BXMC/sKMdIOnGZ7Jad4JbKneyaY7nunB8IRAZIQvNDQjNCYY                 K4hmz/HHqtt783xx8xohfyQvFi9ISRk+cvQdhPEOUDI9AsoWkoSOkMygM38qY9YAVnenkNFdTkmD                 rd2KrDJt21bbJNZVq3PwN0a8xTXv/2RCVAiZBRYiWSk51hhIqAAD6C5p893kRkY3UbhVPu3aJv4t                 2WlyRDZOHG4XWKb3RAATuF3kAHbYthrSXqSglRww68gjj9xzzz0BprPPPvtvf/ubfly/YsUKsGzR                 okVXX3314sWLp0yZ8oc//EGvFxMfcnbfffd99tkHkLVvzTjooIPECoTaY489wBQykc0Oi1SuoqKi                 e/fu+fn5AJbX683OzgblUR4NIHCfmpq63377Ifyrr75Kjqbg9ddfP+CAA/74xz9SYO7cubpEcMMN                 N3Tp0mXo0KEA7sknn4yQMIcP47DXXnudeeaZFAC4f/e7340dO5bynFq+fDmud1lZGd058MADd9ll                 F8rQCqfgg2BgKAsMrd93333yMVk29CP0vLy84uLi6dOn02X3ZFGd6Use7Di1BspV3yXOunCONzjU                 G5geiVcHw9WeYLE3/MtX9v5/7Z0JlFbFlceJnhjjcRloaPrbt15REh33xLgk5kTQcZkY0THgEETc                 QRQdoOkNummgFTTu4nGLBgQnJsZjNKJJVKKOo8ZlYqJRx8SoE41xoemVb363/u+rfv3RNA2ZxORM                 31P9ul7VrVu36tX9173v+773+oCyOZ25pmTMZaVli/fa55pM9cJ0Vf2o6Mwx8YvdR+TN4kxkFtn3                 1bML0tm5ucyc6oqGytzSytyV8diKspj9IGd0vD5e3pKpaUtm2jLZy4heI5EL47EZXz+x7an//MMf                 3a1e0JAFgFEEaVO3vcyRMncDstMepgZmugdPOOTp7gwmBUT6YEPHa7/94yXzbtx910ljRs3ds+rm                 WPTyWLouWdFQmlxWvfeN8crmstycWOWcMnu2W+3YyAKGhr/s7mPOJdnzie01Qc3Z7KKRo2Ym05dk                 KhtLSuvHxpakK69OViwn9I7ZDjE3k637h5GnL1n2KBjmfkbptAlTASjx6kiutntD+5/cF/WJKG29                 ysaKcNCHJ94z8qa4rWTOhpPw90tgQZEZKEO5YAJSIdOFLWm8HD3Iyt8xPlfujx52FdxBNBd8QDTx                 8hVvbol8mIk7Bpo89NBDP/vZz/Tja6AKQAHCxo0bt8suuxx66KFPP/30448/vn79+ueff55WDM2r                 MXXq1PLycq41OEWPMH/5y1+2DgoKK6hcunQpuPO7wvOSTzrppJ122km/VqREIwVhx48fr2dScEqn                 o0ePvv322+HxE6itBadPoiCcuJ133lnf4kIO2Apu/sK9nwPys4Q/CHqeffbZCEegro7mikFJPqf6                 rYHmU12QZ3Rz5swpKSnRLyZEjEu7Bd3p5/AM//DDD8cRRrgEanRIYHoBSlxUygWdEGziZA2QUeH2                 EUApWzUp+G4/uO834/edmcjNjCbnpnKL46mWWKopW91iSGHPIbeHLbpkL60GK1OZyyKJZfiemarF                 u5acV75XY6qqNlUZvKnRHvBj+NKUyNYlcvOT2bmJxCVVuaZ4pCkRW5JILI8n7eFDeKzEsNnqpYaq                 qRZ7aHmuvrJq7qiSEw86ePr37n6aOUE39jNCE1M1eJ2svntkU6UUxN3uxNxJF7O/9/6mp59985Rv                 zh85+mv779sSKWsAoBOpyzKVTfYczFxrJLvEfqxdfnG84qJY7iIAPVNpT7twaoeB0sYeizbtVbMi                 k2kcOfrCXOXyTMXlu5U0ApTxikXAbjRRmyuvG10y9eZbfgnIuVd4B3NbRPZhFHoa2H384LoftSxu                 WnH5snUP3Q8zF9u/yAli/XF87733fvzjHz/77LMq3G6IfOyxx3BACEwuvfRS8gMi8t8yuattxsls                 4DgQsuEZEZqp9oUXXsDDgvwvoDFsOPFlgIPXCq9hgJBDOdblwQ5oeOqpp/BibrvtNpmrTOuNN97Q                 84n9k3GZtCFaHb3QcOLEiYSc+Hfnn38+OELMe8opp+AxgTiTJk0655xz8KeIMUEK/E2cx3Xr1kkr                 EOett94CT4kovZ4tLS3xeBxUJe+Bntgc8NU8gAv4X9XV1YTAq1atQnl9kRaaMGECQSsZASUEbtKp                 hiOIJKNJZlVAlIC2+HSEunR3xx13jB07likilgea9UQMygG1k08++eCDDwZ8r7zyStYY7mTRuhKg                 M1icRDKscHUnQlX8X2Y+/EkRitHFyJEj9RJjmlRWViJftUCnMsi58847y8rK3nzzTZUwBC9cw4H8                 qLeDAErmGtQ3TwygWbp8/cixU2PpCyrG1UWTlwCXFTVN0fS/AXOWsguSmbogkbdT+2mjHQ1THE+B                 06U69710x5kFKOenMwsspQ1kzWVzv/kRm3Ea+JKsCe5nOndRScmpBx08t6Hx/qef6e3odh9w4y2a                 C9nTucl/qI7jRhmpt2eTfbeHGdKn4e++m7/q6kcPOHBmKv2vicw5eILWXa4ZXItX1scrDf3l7QoQ                 SU5PN8yCzqTC2BvSqeZMstnpbw1BT3tRbWZJusLebB6P18ViF2Qz0596srO7x35wOTjhYhBMnXLK                 pMmTT50xY3pDQx1Xl1X4dffOHEgbLysMy2eJ+MdYaGWzJrzF+mWhJpAHU6rEho+DyWGKWMuMGTO+                 +tWv0hGOlUAZpJAQNfTLSysvTCw4OL18GQCkcjI0kRpk1Lt4WNli4ChfA/Lyixa0pHk2ORfwqOSQ                 Qw6pqKgAcTB+pgVbBReIYYGhf3IvudZttQcffBAecOqwww7DycIOUYZ5AJX0RBwEStXrr78eUwcO                 vvjFLx511FH6fgzQSSF06qmnEiRySiHkxz4I0RHCmWGiRU6ZXo6UvP3220SFiAJ5hciaE/iZCvDu                 qquu4lQluKLEpAC9ShjmmjVriL51205TwUSBwsTRQnDKz3JPjTzttNMIRTOZDB7ZTTfdxDAZ3f77                 769WuiL+ob9+8v3n1LCp8P777wfCwD7yLNdsNot/d+SRR9IWOP62e2M4s11TU8O0T5kyhQkEs8B3                 v7XogkKoh0pcCF105Pt+wWsuKErqFi0bQ1tb20UXXcSEnHvuuXLPmS40GTVqFIjMRdGjlyXhhhtu                 YKL2228/PFbWwOuvv47+GqmQV+uQzPaRAWUPEGQPAkNW/qJLHhg55vx4em6uqiGW+jcy2cpG95s8                 4aOA7M9JoOrQU0NFZdMee0wfOepbR36t7dLljz/6+IbfvZP/qNO+DERiGkisMhLTRerstpcufPhx                 /sWXOm+59dkpp11bUzNzt92n2Eu9k/PdN+eb7Gnq5Y3RikaOgF1/9QZPTQClJQeU8rKj2UVgZSy5                 JJFsTaebErHzJxy16Lf/bd9eMt92y8Q+f+yxxxJYcfm52FxFXdF77rlHu7cWhz/ee++9ur2lEnwN                 VpWWAsRaZG1hjbJhpEGyQITDxhHbwIth71U5risrnmXN5i+wgPQkCIgSiAVNKzLvvPMOR3pBrBgg                 /Fx9cooEuTxSQHmwho7ol4accqQtmvguGK+8PA0cYmganY/7NBwJpLmsAmUwCTxi4ygQ8/Ooe9EV                 KhHc4XfAzyy98sorqEcXuEKyapxEvNH6+nq8OdkwvQCpejjjSy+9RIDMHkZzEId9hQx7yb777tvY                 2MiESEOIa6TMgCRVucTz58/3A4TohTB29uzZwB8YRAnyvSh2Lz2NmGmnHD/rU5/61IoVKygRuKxd                 uxZEwFE1bkc4cUAh7ioMdMpgic133HFH9g/GzmwDTDvssMOLL77IKdsDkwPEIIf9o7S0FGeW0X3n                 O9/BScTvlq8q5SFm5oQTTkAgJVyFAw444NOf/jThCHCvBQxyPfnkk+TRau+992b1osADDzzwuc99                 jv1GO4E0h+66667PfOYzxPLkWRtahyyJhx9+ePTo0Rq4iI3kuOOO4yojh51GHzpxZUF8lGxoaOAa                 Aax0jXAmimDruuuuI7xghQPfbIHMue9Cu4If1HYQQImluZtl9iu6/Alfv3lU6TxiTMXdFgsHyX0r                 yH6/WJRUPvRU1HywlEwtS2Vac7nFOXAtfuEeI6fEklOPOXZJbf0PHln/0VPPdLz8m/zv386/+4f8                 22/lX/9N/qX/yr/0q/x1N/zHpJMv+8f9LkilZowqmRaJXFhTsyyetE+K4qmlcXvRI4lwewnH4NtO                 Q0vJ1JJ0ajFACWLi/xpK5hoElNFEazS+sLyiKRY9s77+3i73BKLBacGCBbhFBAs69Yhwyy23sLuy                 mFigkF6tR5zIcmetw8b6xnLYb9nDWRlqiA3gVoB6BHr+llDYAikBqhACPvodnrgev0DQiUURFuEp                 4GL4BwLh3oImK1euZKPGpQKb4GRpAmR0zTrGM2XhorA8UwKlww8//Pjjj2dBE+DLL6MhcgQWRIV4                 JWRQGy+ABX3ooYcK8jCY1atX0x1tMUiUweQoZ31rP2As8ssYIPbz8ssvM13oQ7/eFCFG19TUBBjR                 0NsGpgIGgS/MCU2QA0gR/9JWDBSqFxRDB3CWDL6JvyEIYjLDysOpad8SMdUQGVxRfUYB0TX6cEGB                 MNxGMIWQGVF4XiwDsIY5ZOCE/+KHmE+8s9bWVthoS6cEv7FYjEsmBsYFRKZSKUESxG4aiURwqzU0                 WnGVQTE2Bk6Z6mOOOYaLzmW6+eab2TyuvfbaX7g3eeGE4pbOmzdPmjOl0MUXX0y57kgiED9Rwbsm                 FskoA+KDawTIrFK/tPRAORYVGmoREhVRwhali6X9Bn7WEn6uPvqnSqAGaYafe+65L3zhC1wFvz95                 nxdvnemScH8dIbAeGFX4JeLiBrntJXePkiGTepnEP4z/fNOYssZkZmk81QpUuedW2A9ODLlSbYV0                 WejYFlQN5bjtqaL628B0JIFKDalcbSQ5q6R02sgx38yUz9hr71mHHtYw8ei2445dMXHCpUcc2nzw                 QXXVlTNTqbPKojPiiZm53HyQK5VaGIk1GUQml8XTbfZCHgPKZWWZ1ki61f10fVCd+x/BymS6WT9+                 d98ECEJvm6h4Y668Lhr91pq1r3Bd7MuehY+wNycWBJERAETeuxtCAUJIFvrChQsfeeQRwsYTTzyR                 RcluT8Qh0ASeWNDgKV4PDgLeAQbG4gBlMLbm5mYWkL7I5o1fxMojYPn+97/vC1mURDEyIdbi2Wef                 jWUiIZlMIopCemFx40GgzKRJk3AZZCGAKfyEkOvWrcOQdtppJ1Y8PIlEAvvHYHAHiNFAdnTA32lp                 abH+3C22yspKhKAzUAXkAbjYLVbEnFx++eW77LILY6fhPvvsA5DJqFAY+X654zyiIY4DQZnCYWkF                 yY/AadLcgk0gCNLw3MFrOaoUcsRZYx8iQxcybx0xfuwWN408k4AagA6uNziLHAo9hed2QMKGacis                 6hTFwCC6Y7B6wiN+GcoQt1LOzMMPfoE7giqMH/cTT5Z58GMHRoEksFXa4lLttttuc9z7DzQuxDJ8                 BksTlQCd8OCXSSykHYgdjtE988wz5BWgoBsZtaI5Wx1Xn9lmejlFvYMOOoit0aMS64eLS4DMdO2+                 ++5wqhzOhx56CN9T/inE2uCSsflp7/TEFRk3bhwwTV5BN4QCHi5RiTXDAsMu2BeZcz8VLEumAoGC                 VL8GIK6gv38ls9JC2m4CKJ3vg2F35L99xUNjo+eUJe0uXiyzMJZelCpvLQOk8C718qwg4Yj5I0lV                 Qzlua2oujdVHUo3J8kW56pZc9cJcTWNFTUP1eBzMmZHY+ZHoeWWRc0mRyMx4ZFY0OnvMmJmJ5Lxs                 rj6eqo3E5yfSjZlcK94xPrLTwRI+oPuKeGNZ2j6ad8n6GsLRnGvLmxep1AxKAru5ystjicZ4fHZ1                 1VlPPP5hj/2giHVMsjU3IHEhwTgtSoWWIvwsPVaSPMZDaMNeyv7MJonbyLLAbnEiWIu0JQaRHdId                 xJpgRRLF/PSnP/UuDwvIKWMrBmsRULLaVIhlstBZcxiA36txdfFbYbj66qvxVqQkxoBiOBfogGfh                 P/fEfcNaKEQTgFj9gqEgiz7DBYvxf8mgAJ4aaGvN3KgJpkA6cJ+ome5wN8aPH08VyxqPGzNmmJil                 twQtdwALyZgiofGYMWOYHAqBSLHhbWGTukcJEe7hd2DGhMCcogPDQeaaNWt0ew5ihtWWaQGs99xz                 TwwYNiI+dMBJJ4rEf6dHeIZicqjNEZm4z6CY0IHdCy+Y3Q7iUjIKjviSoCHwJNhFVXw6E1EglMR9                 JsOSgEBAdkppSxOEM1jdNEBhiAwj3XnnndUphNoAjV68zhzqi+hMOCCIr+pxh2tBc4Ep8tlIcGYJ                 ycWgHlkqn/3sZ7VhMA9s1aAhE04tSsorFDARCO+6667sBPTIxWJ3ZN1SDtGLljfT/qUvfYkwiOa6                 hwNJPQhNhMi45KiqMULoQ9eMHR8Ch12F9AKRYRkQhpeXl3PdOfWjI6PJ2T4a0dnRa/cnu/M9G/Oz                 zr9pj1FT8ZVi7i2s9lOZSvv9IjjlPsIOPsXun1T+l0q5vZakqpvLMnVjYnNL4/MiqQWWkrXZquZM                 +cJEuj6aqLXnCifsA6Jstmn856/MVCyJJu0T6nT54lTOXvVFimX0XA+XcvZM8lh2QTRT60qKOx0s                 GWICtYXkUBK3NJ1riyUXlI4965hjlr72mu09nV1cY9LATgeLACRixyYDQPi1yCkGTOhHnsX0xhtv                 AARYFyCFm6n9mVgVS5Bd4UUCFjDj++CisveyacOJW2fdFAgGjqxgFqueYiuihP0c6Jw5cyYYF5S6                 F+PJ2yI6q6ioUFjHho8XiTMCCk+ePJkFLajFJNjACZEmTJigL5EwHHpEAn4TemJCS5YsUbkeBkwe                 mcuXL4efsWCQhNsU4syCqto26LqkpES3JmhI7yx0DUTE/HA6bdo0ENmXMyGAuO6CYU4ye2ALTY48                 8kiYHZcR84CZ+YboiaXdeuut4M5PfvITTS+bmd5fhBmTATS1PSBWDIOQzJKYQHNSV1fH9sO8TZky                 hdnmqhHXs7WgEiWg8H333UcTgIOoHM0VadILPuOBBx7IhWNTBCWZE30pEuKis40xaTqFBEAMFqeS                 eWAxsMb22msvuVfMAwOcO3cuiIYvBkrqHrHGIqCBQFi0BZuQwMbW2NhI1yAmVSA7uIaTy5YGRhM0                 sFQEbWvXruU6MqVca/xoRqQvdQKjlO+4447sxKxPJLMGuMQof9hhh9ELM0AJ5ddcc43uwoNxLB6Y                 EcXksMmRYQGwhxHWoPYVV1zBomLH1U7MESFYDc44PgQhDg4Bw2E+/a5GHlJ+O2hEd+HRuhs/yH/j                 nxeXlE5PVzVF0vPtO4bxeenKRYBmIhdCmaKU02caQ092a2/oaY+yC8tyCxLVi+IVTfZqnYrFqaol                 2apl+Lmx1MJktiVT0ZqtXJKtaEnnFiWzzXuMrh1V2hhLt1aMW5GrttfeApG5msXAYixb6xSYH2iS                 qS2UDD3poxuhpEXcDiUJ55fFk83pTF0sekZD/Y82fMxVyffYg9m3CJQQIScYpGhaJLjEPzrjjDNU                 QgyLe8gSAT1ZeezkXGxsibYyCTJYHRnWNLs9EvBN8D31KQHL2n+jCGNgf2YBIUrwAQFPACVxHMZw                 9NFHI1w64GZiybDh3sIgZhwiAmogG2+L7vzdVUXTAN9JJ52EMbgF2YufCH69+uqrYDHwiseKlUIY                 GEBPIWuahS7cAZv0CSZxJWBEhiFff/315IXRoLP8FKkHQOsUAgsAaMqZEDYSOkUfyhmvmL23Dqd+                 LMi40AQDBrYwJ2ElOrO7ANOCbLogBme8OJViYEQYPHp629M+MSAhX7gDFOZyudtuuw03UB8lQapC                 Q59hwoFRQK26upowwnEFqIdiRAn48swb8KFfwlBI7ywPRqQPlwV2urJoyDUCiHGEASOQxU8CQz7i                 iCNAnwcffNDPIR35QTFpoCdIerx7zxqKIQHYZSCaT1z1c889F7hkHc6ePVs3jtScyaFHLjdXRB9A                 oSTXFKCnBIGI+spXvnLssceySlGAiBuPm4EzNC4c6+GFF15gTh5++GGgliZE+jDffvvtmmouDRsP                 TjfE6NatW8c8UM7KBMrpmgVDL+xMeBiaW8hPsk63j0bYFw978p0f5//wu/xhh8wh9M5Wt+CyAZGl                 sbmpCsDIfuitu3LuCzFFR+DMvgY0tKN9B8gdDWGHcozmGkBJPXhibKoplmu1x4mnFttPerJLCf9j                 aXxGexacfe0xs6hqz6szVVdF0stGxxbaTYPyFoZgcjLzDRYztX1fWso0xNkDBtZzS0f7JqkPul0w                 ro+DFsfjdVVV9bnsmd/97sssJy6fe4PFFoESQ+LqstTwFAC1xx57TF8ZoerGG2+Uc8elZckS2uDO                 PPDAA6NGjQIoWZHs5zgFTozdQ5w+fTreBwEaRHiCP7Lbbrv98Ic/xLwJnEEN2RsmBOFZgFC//vWv                 WaYsZVYtLgO1LCy8FSyKlbpy5UoWHKEZSrJ1A7uYGUYCD4aqryuz4nElnnjiCRYrqxksoBfWMQ3x                 T/EuMSGgAV8Y4WhIHjeNSA3bEBQSYIJKcBLi4TLgA2JyaIsoaiGUAUABd7wM7Fb3TCHWPbMBdrAH                 XHvttcyhgizkl5aWMp/sPcwnR3TGqkEWPA6O6InRymCouvvuu/WxEsSs4tARKrKRgI+4zLqbCfRD                 4C/DPP3007kuWLgMz9+mGISYcGagvr5+zz333GGHHZhqOkIBgQtyBFWMERjCt0I+Y/EWjpIei30h                 hAQuDRmkCbzAC0GVSLUaKeUCevpSOZsQR5F4RIjiFFHqSxkKOQqPvCgorI/yHovpxdd6rbwcSdDR                 S5ZiEKcqgTR2rV5/KoU9v4YfHrs8ccir4WV6rbaDRtjHOD359g/yLz69sSozOZudh5uWyrSEjq2h                 Y7icY3Mq0wySDvkofo5qu/Wj3kiTyLYCi4lMWyJzqUvLk/a2nEuTmaVJpxjyk7lG4zee5Y6nrV+V                 S6ksyTRBeCbdyqA203Arx0R5faK8zo6uO6dncyazMJ2qraq8uKbmrGeftheXuyvCtWQ1DAyUusBc                 VH2kMH78eFwG3UQjJNS9eVYeiMZmDkIBo+zteIhc/qlTpxKkkGHp0JyohMWEMYN0OAv4gDTB12BZ                 CIWtP7eYKMFo2b1BK3wl/BfF8lqCICOSqQLXBNksyjvuuAOxGDynIDueCAhCOe4kziMuAJEO3mJ5                 eTkIAs+9996byWTAUCI1hd7oiXoEVnidCxYsIHoiOqOQsc+aNQtvgiqcYrwGmgMlxFaaHPYA8JG+                 iOAIMPX5A4Sd46DhgODq4towBMaFhkAzbCAy0MkomEM2GNATgAN8J06cCDLKojiiANAJWGtaCB4Z                 ZiQSYQMAT/fff39cbPCLvpgxdiYKGSYYKh1k9soPhfCLubgEB/hWA1IikQCpA24388jfpi6G6S9K                 I+x3f3hAnfnbb3okm/hGKjErHq8dOCXmDZTmbmMqaj5YiibmRZKkWkuJukiiwaVGjtF4QzRRB0M0                 OTeanBNNXRhNXcDRccJTR8bVXmK1yTlxpcQl0iERq03EGnADXUdh9QZLyImkL4ikZ6kvJxmBlyQS                 F6ZTM0eXTDrkkNnsZz3uMZruCRekYHssIr9tkgEy3n33XTZ8zAMDhrAQv+3jGWHMWKY2YRBBuObd                 BBm/ysPbNT4aHoowDpkcZXhgHLhAv3THKeQziKLK7+EiEBAN4adWkpEGiKsVitGL4nQaqjsIx5bo                 yXsZkP9sQXfo0RY5nl+EfA1cOtAv+oB0bW1tKB9mhgG/LDwuTqUqVbQi4xitO2ZJ4Bsm2noeCDYG                 CLaS4ejnX5owEPVCK0045C/i5iTFIN8v044jvHQLtGbNGs0t00JH6muY/nbIeZS9+Q/ey59zRks6                 MTGZOC2WOLN/mtEvJaf/WalI2taS/ercp8TZloJTqqZHU1OjqdOi6SnR9Dej6X+xIyWUW9U0Vzs1                 ljrNUnKqS9OkQyJ+ZiJ+biJ+doJewuptJSHzNJeQXBCVmJ5MTKuqmjFmzNEnT2r88IN8x8b8hvbu                 zs6N7snqA9sS9oC9bW69kIetsMGoEMvEAr19Ys/KCAhULhiFCKLxp5Dg4cBbuAjLBAXUBRjk+4Lo                 RRoG504BaSsIuOCCC6ZNm4bXNnny5JqaGmJqCtevXz9hwoTzzjsPnxF3b/ny5eJHMY+qHCG6Vnc6                 woAmQgpIGR1pgotNXm3hRysPQxDlqOpHHSbPhnwaQjBTiDIcJRB4pVacKgkTVUUzQ0mQC12pzcmz                 IdnrpjkckMRAR2GZg8gfpr8yjWDBdHflO9vz93xv/Z13/PzONb9aveZVl14pHEkvF44vr14Lgzsq                 qXAbkgQONa1a82qQ1r5SSC+79KtVd/1y1V0vrrrr+VX//pxLz9rRSijvS6vX+uS1RbLGqAF63bae                 rF/r3RRbfefrpDstvbJ2zS9vvnn94z//vdzJgmH1GdWWCNvAFIEJWQUGBgkjZKKUe2jwlhOGMNhk                 ae+//77sk1PPgASIjMJGMahkc/Lw4YlT3VATyRmkx9dff33RokW4QitXrtSvJtCN6Hj16tVXOPIh                 v5pA4IV6Z3QaCJJVSy8eTdQdnB7fyaMwuqk5RHNIGOQLyVAIJ9I8sFKi5pDYoHAeQg4l4mfewnML                 UYUQLhDlaginmohhQIJncwav6oAU7hpOJAyI/sP0idAI+1L0JvdVyl47Yuf6lbT9dlrH/9vk5W9r                 KpJDwgwGSf2ZWYD2FPT+qYhn60mPUne/N+/swQgt9ZAItC3WtgmkpH0jvPkNG9s77NWOA5PsHCIT                 FDmSuWJjwkqR5/FuF2yCGKqKLIq2MkgKw7YKugW5EA+EDtgnR51CslJI/SpPhnjW1RvS+Y8yaKha                 r4+3dkkmIzV0FDMDUcYTnXp04+hHhASq4CfPEQqrCnltg/MQURieXnHSHOESojmR8CJUkj7h5hCF                 Qc7lw9O7Oan3Ih5aDUhU+XmjlUqG6W+HRnBduHwffvgxcPnRh13mEG0pbbJHThRSt0v2HI2/bHIA                 1Jf6ut6CAgPp1uWTw0c72l3Z7q5NveQ921ZTnxz3DiCDyAJQ2mZjh/zGTnvrjkt2uk3kzQNT0d09                 0MfjguwZ8jf+wrYtWIRoa7BRQBzhgniQILulHBSganODpERtlVdb4YWgMNypyhEFp/SUtZNHiHdF                 ydOvUAlmFWo4lJNRj16yhFD49ttvqwTyOALRyisJaVAi9aW8z9CW3jcfbBHJh0VCWDik28cI0XhF                 RTpsiWBjNuid0dGc0wEJTkkjr5lUXplh+sRpRFe3PVsbawoK+hELyyeWiBJXMZy2svj+XGKp+BSo                 oX6lTKFKOhoPRHlBK1crFiX3Ysdu99ihdo7bqL8p4JCWoxpyJOEYftTVg5m1d3b/aVO+o73jI6C1                 yz4pG5jCJkce25BVeCPBLAUl4vQoyakM3kvwCOIRx5OvwlCV9/I9IU0QANE8bJzqVHDpUYyMeCSQ                 Wq+J3ExqvRrkBa+Q1EYBX+sHFVZbCE5DL1YI6+VA8FOLQPUulcKSdUpt0ZwIsCj3M0N3UPhUGSSI                 mYxKREijfPNpLCIEFjUcnBCrGSajhroornKYPnnCo+zqtQeGd2/cyKqV2YcTl0pHJYGUEteVY5h5                 CIk1sH3J2oZ1cHlVefEBJ1UDdRT8F9J1bLIXLmIVjnmoCWZGTSuOGr7mgZKPejfhQGHMiDWgBEk3                 2svCt0jYg7cKkUw6jAiQCkUycjLhVpiTzFucYbyQpRXZG20heHx5uAuIUw8EXXjg7j+pvb0jhPzd                 m3o7UZ8cIMx0+yYyeKNNPfbMUJtzGtvqIuN66u3ssA9zOO1z8pi1vhVotKGda2RPti+oB16b62pN                 JNTetdnZpafZIdsVAi8bOq2hyXElBovdTjfXRP6+3SXp7eECWZljYxR2u95GaA375sSps6GrncjB                 iTWR+te50UaqwgEJIcxGMM8o6EYcSHQlrjG1qBc48jalbihOtxDzMH2iBFCykNic7Vq6NVhEKtEF                 GzD9VShYjEVdk0IU8ED9y4vJt2XIziq2gXxDZXySKJ9U+PdPZtuaV5zlDywHhgQltiVYzp2GQMVQ                 xjFQZb/6YjockHXkN3WwITtoYYdjr7LyAieJhpS7VIBUtXU8rtY2OXcOsHTbtHeywee7O6jVRbDO                 rYtO8fe4cvduTiM7RR+ANbhpQnhBI+Nx3XBQwGFS3CisOyehwzrSe+Z7aW4QRjmpoKFP/ShcYXU0                 YOAGi3bq+mOLxRd3Aw+a2EcFpgQdgZVuVP3SYOS78ilMRVWkYRoiAZS20QkiBwLKYfp/TM5onTm9                 a4kcPmKAg0DnR5bDqmXvRnBbg8ACN9kbOyxaId/Tnu9tB8IsijZQMFeOcqGM/VkhSb+o7QNK8TiA                 MHQMmMl2UQJEdn1sENYPKOnCgBIMBBVdB0EvYCtutJV22RvfzdOzd7UHbR0btQ6jAlHWitJeZNJR                 BxWUhHlUrxTwh0lFPlkDBs40OOnB2N7P5//HhkSlY8MRd0CJeh87VHUD60tbIJMvAf1SmIqqSMM0                 RDKghIaBcpgGIIw2QL33LJHrA0r8IPsAEMvl4EogTuxcqOGB0oERbl+xRymgcJwqHBQorbwYKPEo                 N+R7A6CEzykTeJQGlA7FvT72kZyAMvAo+4CywOa8RQ+C9qcqEHmjAeXmPKrvS/0oXGF1NAh5lMHY                 2HLYhJxAxyaPkl56AqB03QyNfFdDTMM0RAqAUvdHhoFymPoRliTrNa+H8NCdBmuE0NsBpZKRqysG                 SvuGlIGR5Q1oXB6eIPRWckThwEDpxLtaASWkCoO5XoDSga9rYJ0bULpK8MYBqKGaE2KdAZ+GoA40                 Le7eDCgtuDZua0h9IKEz39GRb+fc8fDfOYCkoGlf6kfhCqujAQOnuTt14vtCb9eRJfq33QhO3UPf                 BpKAoadhGiKNEDgKKN3N5mEaphAFK6LvHqVKCh+FuVMlqxOcmXG79WRASd6KDAGDF2l6Nho53BG5                 wi0CpWMoBko7uEDbMTnd+M+pVUqEK+TUeinkDZOcsi7fry0oyVG5QBkHWz3mTrZLspPRB5QBbyH1                 o+I6hNsd0uBM6rlPAi3n2Zwy1oVVuT62QlLFOL2MIaZhGiKN0EdyfZ/xDdMwhckZ7ab8x4SBdopt                 Oct1368qfGRsPDJUki2nAlSFgFLg4tgdGTN5oaErHCJQul7Ulavtg0WXOHAawCLJFXJqJS4vmZZ3                 cbnPF+otBf96QUP0cSVuvPRFMm4HoEWtlPrRZnXusyAbnZ1JPQGiisLJyt3dzK2TVLFUJGOraZiG                 SCMEkYLLYY9ymPoRy8HsFNsm6nSwKHs0uLH7g7Z0gkJZqaEQbEHw68LtAIyMyd2F9DDhmnEO9Dg5                 /YCSczUkOWb9UwFszv8q8ARqOIEOiVwlfxQU2IyHfBgofTnkqvx/swOS+6SejKuxe4vu7qcjD5Su                 bugUBkoXX0NIMTguTgaUtrUMSlIinPpIYjRGpUDwMG07BaH3MFAO0wBkdmb41Z3vAhZtcfDHerF7                 dqChwZyR+9oNiygMlAYohjJE6B7LEBWGTmN2cnQ6AFCK0/qF7B/lgg8HlA5olFyVCSQF4TMFJsbI                 s0kgiYxOjdMIgSazr5A/p60KJRZtSYXaQtoWkm4DtC4u9cMZnDTIcOojxDCWcApkD9O2Uj7/vw1x                 pTMGUGJkAAAAAElFTkSuQmCC"
msgstr "iVBORw0KGgoAAAANSUhEUgAAAbgAAAB2CAIAAAA1PRGUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlz                 AAAOwgAADsIBFShKgAAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xMK0KCsAAAN+NSURB                 VHhe7L0HnBXFtvZ9wj3ZBEzaOc4MQRCzgjlgjscsCJJzzjA5zzBEUczhmDNmMWDOGSOiogJmkTRM                 3t+/+tlTtsPAAbz3fc93X9evp6e6umrVqqq1nlqru3f375qbmxMt5E5vD1G6MZFocPZsycr8a25K                 bomft2Zna2pq+G3b+sYQOeNntobmRC1bwuzrNbT2XHIzA/sb/Ua/0f8UNTY2YpUkfkdKWTtBmKog                 8meUNKYLcmLY2oydO1s91u4YvIObMvLf9q33ZhxZrUg6G1ipYWRIHWLwWs6ZzRz/Rr/Rb/Q/Tr9L                 /t9Z+tlmDQkigcWaRGKjs5Ewm5wjg5VNDc2NTc2Nid/2W+6bWHCazJ7Fq4Gtqb6xuc4Z1RZA/A0o                 f6Pf6P8GJYES91Ie5q8gqmPS8h+T+NjiS+IZsZm48jfaFuFL4lmyOU6luVRhnHUGtmVq+G9R0ozm                 r5yy3+g3+o22RQ0N5oIYif8WoKQimzviVrRoGMqiTXjenIzQdbHy/5ktOQLbudXVJhrqjFNpA/CW                 4XWI/7aoOdeS/xv9Rr/R/yQlb+bs6G2cFpINg4l2M6abNGTHP2p0tgb2DSac/GJVw8rVtV+sqvt/                 Y1/n9LdhO/dfrGpasybxw3eJjRsS9fUGZRlGFrDGRhYehzTeyfHV8W/0G/1G/4OEAeJX/sprlBhq                 /cZ13wKRm2s2GpcU2ybMdsBx/YbEZ58lnn3m26uufHHipJsG9b9s4ICrTzq5+oST55100oJW++OP                 n9vrhNn/6/Zzzf74+ccfP3/L/fEnXnLiiZccd8KCXr3mHtNr7gknLDj11Fm9jhl58UXT1v7gOJUC                 w0SipmZjciFTIO6caGaIHaDUIrdp0yb29fX1dXV1puRWyMYNSlBeeyXWr19vC4jhvyXbOhVFypcY                 aJgOIZ2qqanRIVRbW8uefIrBR4WpqJLi3Mgq4cimu44qwyl7E5IEh6piObAnRxzYqyFItVR48+bN                 tgnlq6G1a9ey1ylYKXNrZFuxTdhOsXfXtSW3RnbAKWaJQyrq1MaNG53zJgfhSWzYsEE56oLKb42s                 ABptSQhRUWkSP/30kzIhdcROB+Suwt5OMfl2juw4qC3lUwYioZLi8/3337MXqTsiVURPVJfC2+7X                 vyWNm3sudoJ+LVA21K5jSBvqHe1vTqz9EXU3nuOa1Ymrrn79hBPyQqELvd4LgoGLvZ6+KR0uTksf                 l5I+ecutQ9qk/6XblDa39ql0OZlulzKJjZz0jKGR0KmjR5Su/8kAZV19op41x6Bhi644R8a/ZDWq                 q2+oN0rpth+0QTpH+TaJU1iXWy+pIiWW3q9evZqEcrZBsKLiljiCDBAJaxjswV/oM5bNFrIySxJr                 XXCzSCrLX7cOBUuS7BOiPPwpbHMgKqqDrdJuIhOR1EESOnRDmwYBab/99ls7SirWJnH2hx9+YE9a                 wtgBEYqRT86PP/749ddfK79NQh4rc6vBh617kFVGcq5Zs+abb74hYRFz20QtMNciMg2Rhjk8baO2                 1+qOmhOpjJoWuc+60wwpxSxbDY6EVI72tGXbtWKwh5QJkaauMrefUDDVSnJxumPb2gn61R5lM8Na                 24TtNifq65AGG0hce91bHTsODAQvTk8HH4eFAuMiwUmZ0RkdOxaGM/NDWQX/D22ZRW1u4aziVulg                 vDAYHx/0n3TtVQ83NaAfAGVzfSN6g74a22be62vNU0R1m1u8zeYkxKDu2OHkyZNjsRhGLpPbGiVn                 rsWwrfbA6s033+zevfuBBx54++23u43z3xLcaJe90tpD0v633nprzz337Nq163XXXYeo5MtWaXHR                 okVjxoxZtWqV4dLiVWnvFo+05KEK1UmIZLRYIF0uLi4eNWrU4sWLbR+VkAyOOAYZZcAY0sqVK19/                 /XWVVFsyb+X07t374IMPfvTRRy2m/1uSkUs8zYsy2ZeXl++zzz5XXnklBdokFYZII7CYSCplsocn                 CRjqLIkTTjghGo1ecsklTinTU9PJtsgWECtyNMi2aSuwgJIh1UAp00oCqaRYKV97psCcdrUiQjGS                 KYc4pSY+/vhj5WiItBepCUn4K0m2AHN3F3aCfn3oXfvTWkJvRgeZDEpeddVbWVmDO3eaFM+cGovl                 xOIFkUhBMJgbDOaHY4WeUE56uI0tLTTzf/WW22rviRZkREjk0nfSnmheajAnzT98/wMGvvfOD7rx                 7VyjZAdAoENG1w1mNic2b3KWJfz4WmPV6AE6fdttt/3tb3/74x//eMQRR1jD2JKsPZCQZqPW7FXl                 X//61+8cuvfeey1ktEmoHQQTSCWtbdjWlcMebvD8wx/+cNVVV+kURDFwyu/3c2qvvfZ6+eWXW4kt                 tgSDTz311NKlS1988cVXXnnlpZdeeu6555599tknn3zyu+++U0kIMWACq2nTppFWphiqg60I5ocd                 dhjlFy5cKJcQEiay//LLLzt37szZmTNntlndkrwkTFpWLWtsZflvvPFGIBCAW2VlpXK2JLXCXhws                 2THhlHtGcLRZftq3bw/boqIiBrkVHrUixoQylhsDSMdZty6//HIm5bLLLps7d+4VV1xxyy23IPan                 n37KODPaTz/9NPPC4EPkcKiRf/7555csWbJs2TJxk/DqL2k7/pL5jjvueOaZZ3RBQ0PNoI0bN+7I                 I49kYVYx9doqjDiILaP30EMPMek7ROgM9MILL5B+9dVXkZk5hdtO03/HNcoN67BbbJh+lZcviUQH                 EEJ6vBMJqNM9uZFYecfO8zKzZ/kCBe3TpgXjpW1ugVjJ/96taMt9KLOMvT9arHQwXuyLFHnDo48+                 Zvy3X5sbXwwmWkOEzQizNTRuRgMBR+WyNTU493paCPPu06cPZgNdeumlBsbaIkqif20aFXrfpUsX                 qp999tmySavx6K4ISxMpvxWJLfxbFcAg//KXvwDiV199NadkANAXX3yRk5Pzpz/9CYjPyMjIy8uT                 OVHAYs2tt97KWaQCZ9n/13/91+9//3sSf/7znzlFGcE9dr6bQ4Ayh5AgDBIrhEc8pany+eef447R                 NKx69er12WefWc+Rilgm+TQEOpBjBW6T4MyeEdP4kHaPMC0CQ3DD9fvkk0/M2LVFKmwbUsICN5wl                 OWTnsV+/frA96KCDEF4chIZtklM1Scg2depU9Z1J0Z5Bpr/BYHD16tX5+fnKt8TgM+BK/+Mf/6Ak                 E/rPf/7TXtO0Abvti+R8/PHHfT4ftXB7JQZCgpu77LILk3XqqacqRz1SXTsREFX69+//97//HQF2                 iKQzlnbdddcFCxa0Gocdol8PlERwRgB6uuTR1VlZ/XfdvXfnLiWhSEk4Niscm+0LVaZ7i1K9+cFo                 SWaXan+42Bcu3nIfiJT4IyX/G/fFBg3b2oOMvlChN1zoDxcZlAwW+ENj+19cvXH9z49S1jfV4EGi                 SyTNaDcnNq7f1IBJoleMfbNxuDQTGD+xpJRyG56Ltbe33377rrvuwoUkVr3nnnsee+wxvCdp1ciR                 I0EKok7oYYc4hB506AGHwCPSysdluPvuu1ECq4jSexGZuC0AHJyvvfZaZVoIhsCRUCj017/+lQI4                 NW47gXBezjrrrEGDBhFWEw4PGTLkoosukhk88sgjFIA/ILX33ntjydg5Afg111xDQ/PnzyfUJbRn                 2YAtidmzZ+MTiS2EQ3reeeeBF5h9VlYWsCvM/f7777t164YlgwjEy8cdd9zhhx9+9FYIt+jEE0/U                 LNBr/Eo7CGAHhwSYkUgEad3e9NZIw0ItSQIxRyNGjBg9evTEiRMnTZo0fPjwoUOHAnMMCBIyqnQ8                 NzeXAmPHjgU6SbRJjBvr6LBhwwBr2M6YMQORWBfHjBnDvBcUFLBakBMOh5Efd09np0yZQsnp06cr                 wX7y5Mk0R6MUIHZRZ+m4TbAnbROMHiXxfF977TW7DHD24osvJj89PV0BuKqLVIwcxoGZRbajjjoK                 PjtETBniAcTHHnssDUHV1dXiv3P0K4GSDjm/JGlIfPFl4p//LElNO7/zngXBSGE0c24gMscXqvZF                 qyNZs0PZFb5IXop3KrDoD5UGQqWt9sFwWSBc9r9tHykJmjWgeMt9IFSkNCjpDxaCmOREohOvu/ZV                 QNAApTO0tQ2gBli5qb6BrealF14cM2rsmFHjRwwbPXb0hFEjRqO+LLkQSowxxONxlvozzjgDi2qT                 MBUs9scff5T7CUawXLOXMgmttIdgpUSbxLqdTDnuEvEaKGwNhgQkH+emm26Sz3LDDTcIqSkAkRAs                 EkViomi2vW4F4fhQN3nQAiLUwtQzMzPBCBBcgEJ4mJKS4paHHlmfCCgkLQfq/PPPB9RgohgQOwR/                 AUQKjB8/XtAGrHMIB5oAjKjVyj1pRQiDayxuwDRzAZYNHDgQDJowYcI555yjYqeffjpIxxy1SVQB                 zpgg8I7EzTffDEM8LLDP8ZD+YLsDadVBKpupvuM36XBL2mOPPdjT0yeeeAI5EYxDlhyNMB0fMGBA                 u3btwEEOEYCzffv2tePPsFiYI7OkpIS2cMlJI6SFdSXgpopMN8PIAlZaWsqY66z2iMEphnfatGkw                 J0d+pXVIaQ45lSYfnjtEVIcIDgi6Y7EY3SHmsN3ZCfq1QNnYUIdBY9tPPvGN3987Fp/s9U31Bgs9                 gXJfqMobmZURqkgPFeM3BeOF4axi/MpQpNTZjNepjUxgAgwNhIyD2bIvIgGManMgVflOOljuD5Wz                 bylgaqm8wLflUExMvtko794o7Li027+567paaeH/i0359MvdEZMTCBeEokWReEkkVhaOljlCFoVj                 hdmdJi5bVgdKokubauoByqYEulLb2IQmmej7umuu/euf//b73/2B7a9//gd7WUgrRAPp0MI2ibOs                 sagmXgPuZ+fOncFWTB2c4hTav/vuu5ODy0AmDhquFkSaTAidAxMh0lQJBAKcys7O7t69O8EsXiom                 sXDhQlZv9JJghwTOHbG8oAfnSPl4kSqDr4ejh+uHiRYVFVF43rx5c+bMwSkmvWrVKoAVF09eFU2g                 cgAlotJlmsOEyBk8eDA5yIYHcfLJJ7PH18PRY3/MMceccsophx12WNeuXRkrYMtR2yQJpnGHcVr1                 tMrrr79OSAi3nJycL7/88quvvlqzZg1rAAFpmwREUhELZO3B1BkN6grI6K9mB6Rwxt4MvhJbEqcE                 5SLWMy0M999/P84XkwWg4+mzHIJxwD3TRLGePXviaRIpC2EZJfZtkoAY+GZIQRC8QqozGoI50ITx                 ZI4YUhoF4jl77rnnkqYw+1ZUVlZGgeOPP95imUirIDjFnsnCkQTN9913X+WIlYVCRhgmEOPPofqr                 szaq0PUTqjPCO0QWu1999dWMjAxaQS2lLTtHvzb0rqszT2801iaK8x9rv9uAzMwKPCl/pIzo0hsr                 9LKPFisCDUby2UiE47hahbGOxYFojic0Jd650BedGYjm+qOcLfRHCwPRfJOO5pIAc8OxSjZvqMgT                 IJ/q5cFYlcdfFoxWE9oHwhW+oOHvFM5zAl7jysGKHJg47RYCzRmeIp+/wuOpCEfnReML0jJKIvFq                 GNLWllsosygQK/CGcz2hHHxh3ZUmQA6EqwKhWWbvOIym3eRWYnLCFc7enlJfik0+tUzFCoQJRnI9                 gakdu1RG4xXpnnx6lOHPSfVNOPaEirXrErWbHX/SoZYY22zff/8tgZiMEPdk2LAROC9YUZuEJ9Im                 4UTgMeGsoYtr164FCNijVbgPsCUEXrp06bfffrtu3To8L4Dg66+/fv/997/55htUFlCgFmmqUAAi                 egUgKMYeaRXQyYMjYQlHBsiQo4oDq7MCEbqjhNKcorAOSRPjwxYBdPaDDz5A1998800OMWzk4ZBo                 Wk4xTgqHMl05KZC184qKCvwXkEIGCVFShk1CmdS68MILYY6F62ke6yOLMGNr55AMj734sGdsgXj8                 Si0YBOZw69ChQ2FhITnIAMSwDFRVVSkBYJEPlZeXk4mnxuIBh4ceegiGVsJWROgtIRkZOijhBRAq                 IHxpJTl7mwPgwuG8886jCTLlIbL4qdcCShYPJho1QFvY44PLr2RhoDpjzvIjbpBk4KyaQGxWPmYc                 ZWAV1ClTziXDu+++K19vzz33fOedd3RVV8VQS/bwXLlypZYr9m0Sp9577z1kW7FiBfqAcpLJ2qaz                 KDY6I43S9XHT8E7RrwRKZrGGMOuTj5rPOm1+yh5j4tE5kficjECRN5bvjeWyN8DnQEkYpzJSaByo                 cFm6L9cbygEoA7EZ/tiM9OBUUKnlRoc2g1PsDQg66GOuZkaLzZ2fWFkgirtaGYhU+8OzcF1xIcPx                 knBmgT+SBygLpgE7wz+aAyqBlbHMysysuVnZl8RiCwBKj68yNb04HJsViJb64rRV1GofjBdnAOux                 okjninBWaWowJz2QE4rjSArvBJQOFJrtl0BpATQJu4X+cJU/NDfAFq4yQBnN8YWmxrKKWFS8vpJY                 dhUl23uGn3Phgo2bkuYnYmqtYqFDrL1MOWHUkiVL0EU0icwdIiFaK41BR3EJ4Yzzpdbtko63gkfJ                 XodiQgKprA1LQirOmjUrNTUVNxPA9fv9uFddunTB34SzyOv1ejye9PR0wBHgw3fD0cPp6NixIwLg                 wIIp2D8eayQSwat97rnn4AwyYm9wxrQ4fOaZZ0BJWGHV+BoXXHABnLFq/D4jjYswbNtTwIhigwYN                 Io2o2JV6ivCUoVOwuuWWWxCAYsTIb7zxBjD04Ycfvvbaa8uWLUMG9uR8/PHHiIFhk4/TxHiq+xoN                 jRvcyIRwpugpkbUcHFqk2D333JOXl3f77beT04ooxpyyFzdJqDTiiS3VUQAGDXRTFfaQCm9J8uY0                 DlTX3gKlKZFIaAwBbh3in4JxOK1MClhG6MAkMpvMCzO7zz77pKSkUB6fXeXVBALAWQsVigqSUgaP                 XqgN2QUJ2JXY9IUylDzppJOcIkkJlXjxxRdRCZSESUFt2iTkQRMohkgQJaG0tDSGqFevXvBh1ihD                 K9u4cL899Otv5tTW1SeWPrEqOz7Mlz45HKyKxqrT/aCkAUrBhFDDAGW42Ocv9/pBE+MGxrIrszoD                 dkX4mIAdobQ/WPXzFqpkCxK/B8o9fhOYmwg9Yi7n+UJFoSiIM4sC3oAJnwWUxi39BVDik4KVxjMl                 tvUFijuk5Hq8BOCVPr8J/000HTKYC59W+1C0mr0vWOFgXCVwDMbFsua1oGTFzz6jMNEcCiu3ApTh                 2YEQ/m+V42bmgJWhaIHXX0QUH8+q4nCPtIHjp9xdnwQfQ+gKyicVZw9dd911TDneE1aqMjtH1rog                 1FeeIHp2xx13KNOafe/evTmFI4aVWvSUYeBR6tCaKL4G2MHCzh6IAYwAL2CFIA6ZsYf77rsPU3np                 pZfQZhxGYm1KUgvHAb9AjgPygIAwIYcRoNc33ngjMhx44IG6sPjoo49y2KNHD3AQNwF/AavAcZAM                 lLeCWYIP3hy1CGA5fPDBBzEeGN55550qgFSPPPIIQECZE044ARPF/Nq1a8eh7pkoOobkDrMHAQ86                 6CD7BKgcIjcRWiIYQIOTrhwJRoAM0J988slCDYaahNJu0oIk15j50iF4fcghhyAAUoHmuJ+sYfPn                 z8chBXzxSWkURCgoKGBsQVL5qoAyw0J1wRB7C5RM5SuvvEJwyuwwWYhBDuG86arjxQOXSMtZXE7Q                 WSuWBoHQG26WxJyGWMVxTinAKsiKgnowp9IZSA82iOgXo0FJOOPLM+lkAqP0GnrqqafQSdBQTbdJ                 zAtDQYKhpjB7gJU9WnH44YfD7fnnn2flZrIYB6fNnaRfC5TmzWnNidtvWxb09Y8G84L+Cn9A3p8F                 SoEIobcBSoLlSGx+NHNuurcI+APy2qVOC0UNdBoQMf7a7GDQYAr7YGhWLD43GCJuLQ7FqFtofMZQ                 bjBaFIyWUisYAdd0nRF3MscXnrk1oAzHiiOxcl+gEFSKZdJWXjy72OOfgU8HFre5RaIIUAWw+gMV                 8cx5SGLSoLnZ1CjwXeDsi34GSiWS6Fm4BVBWGNSO5kQy85EBoAyFK0ORkgz/pDT/4EXXvGV+l9hC                 ggnpn+j6669Ha1ECgBIDs57LloR2tkkwkaZSRnCJT9SpUyeU9YwzzuDQjaEgI54aVjF48GDKK7PN                 BAaGqJByWhHQg4eC+n700Ucc4pSh+rR48803WyaQsIA+6tAScEBhkAUARSRgTocA8cEHH0ya2O3x                 xx/Hrp588skXXniBYNx5iu4pLBargwMdJ9TF7EePHo3Far2B8ETIkX2ySJCDUeE2gmh9+vQ59thj                 8XRo6LTTTmNwSBx33HH0hXyGhcTMmTNBeSaCXmhs2eNAkfPdd98xU7So2yOQBocCcKahnj17qr8i                 rUzuhBs67cAiBnWFU7qU4QZxiFOghtJKcBZEEweNNnu3RwmqkqaMugAResP89NNPxzF89dVXGU8G                 lj2+PKD/8MMP0wXgiXGgiuWs6gATgAVDsIklzfaCYrZrQn8FNyx+jCTlYXjqqaeuXr3adpZZuP/+                 +x977DEapfU2iUWXFlnkHnroIUpq0glEyGEBQCTkR9kYhEsvvdStbDtKv/pmTnPTps2JooJ7A77B                 ACWhd3pGYTizogUoQYqktyWgjMSrA8YTNE4imZHMcjINcrlu3YRw34Ll7NnCoZJgsDAUyjMuWHi6                 LzSZPSjjDcykSihWxgZOeQK5nvAMX8Rco2xBq+Q1Sm0pnimUiWWVZXUC+KZ4fGPj2ZPD0UlwDgWL                 t9y8nrxgoCgSLmVDBiNGoMjnxTO1N3YMPjqbOVQfXVsSKI0M7M0aAFCaa5QCSvxfXyjfHywJA/fB                 /LSMUfv3yH3x1drGrUwlc4zOMdnyZVAFN6LtEFn7lBL/61//0kUcxSZ4RrSFsqKm6BnrPAYPUEp9                 yaEWGq94CtBxW7tOYQbWJGBFer/99oN/586dgQ/K4IXp4pRahAnFIJgT/WFmAwYMABNxQ8ikgC6Z                 jRw50mGZYBAQifCQqArTIpAHKNljaXSEwcEJIgEfAn/99gbhdV0P/4XDb7755rLLLsPfIQegweDB                 WfKvvPLKefPmkaBd2y/Z/5YkiIQzBRA1mdtCNIc8rA16hgluKgPnoUOHcgrwdQr+zN8yUa8h5diJ                 xj0UBuEAEvYSWkJAJ6sF43DKKaccddRRhx122BFHHMEeTP/nP/+J5055YF3TJ87sLVAyzkAkSjVu                 3DjpA8RQc/biiy9WeTv1VlS8V6DnyCOPJE0tFWAPzHXs2BFuOJ64pU7Zn11IOuIeKMuNVR8ZaBHC                 DXz77bcZWMEoZBNbI+urijhEEklOc7jJzAKcURsV2Dn6VUCJLPT1w+VrTzwxNz3l4pA3t1P2/Axv                 gQmlzQVKByhBDQe5AEogAxcyI1CQ7svN7FQZzcb7M0HoX3cZlOGf4PWPY/P52CY42yS29PQxGd4x                 Xt8oj3+ELzDUHx7uD4zK8I7yBSZ6A9PN7eNYKSG5N5zv3HJxB7+/AMqsLmUpnkn+8IwUz6h/7NbH                 GxwSig8ORgb7/CMDvjFbbpHQBE/6CG/GyHBwPIdpKUPZ77knfnGu4Ww2QaEbHLUpX5sbKHVxs0xA                 GYzlAZShSDl+bjiSm+4d1m/wDd+vMy+j2wbhgsmDYLVUDgqxQySAA8tIk/j22291DRHfyj63bIlD                 gm7OglykLfxZRbRoAlur95bIQWvx12COh3LOOefIlSBHN231xLglvAOAAKQjuEO/rQEACnSZWJI0                 HK644grqFhcXy+pwAAV5hHv77LOP3+/nkBbJgZuuciLnkCFD4Ey4ajg66wGszj33XDCLkkAJmRoc                 BfjqrECKhuiLYJGOk3YvD5DNVy06QluwLSwsVAGRut/PeVD8mGOOkfyqSAImppBj6uo7OQIvyixc                 uJBahMAoAOBIAclDXbFlr0mxxFLH9OFX0k0xVwH2FigBKQaNNGXgCTf2Cr0vuugiCqtrhp1DNMqh                 Vh0Bpc7iuaOTmggmd/z48ZJKHYHtjTfeCHYzWRpeEfkayc8///yAAw5gLqjL0A0bNkxuvh0iU3or                 5J4LewEEsTV3tEjwjlSzZs3SqZ2jXwuU6MVDSz7IzuqXnjY4HCyIR6v9QeLiIoDSbLrlbYEymhuK                 54ezCzICU7O7lnTIGNk+fWivEy496JCigw/L73FYTo/Dpx1y2JSWjfSMgw6e2ePQ/J6HzDygh8k5                 /JjcAw6cEs0c3rHzFPxBb3Aawa/BSue3PeY+jwsonbA3X5LQdAfPuKOOu/Lwo+bsvd+0o48r3r/n                 mAN7jDr0sMmHHjZly+2oo2eyP+jg8QceNK7nIZNIZHe8ODXt3GBsYjKcN1jZgsvJFoWSbhjVYfKu                 twnAzWUBI1IwhkdZiDsZiZTE47npngElVUtrm5JAuaVmoHDMPWEpUw5qvPzyy2TKLHeCUGKp17PP                 Pgs3YhMhCLpFPtqGgsIcz+v888+nRfxKOQ6cwvwQT4YqY0DdyZFJyyAlmHrx7rvv4u7BBIeIWnBe                 uXKlftI3f/586qoiyLj//vuTCRDYX9fAByjv1KkTHIiXlYkfSrFbbrlFvUCkbt264WPedNNNCIwd                 ks/44LTiSuBRwoRWMHs4l5SU0JzMD2GoTj4Ii0jkUJJomi7jeEK4abjS4BpwA872799/0KBB+FkE                 niTAhY0bN2oEIHVclJubu9tuu/35z38mcly+fDku0gcffEAT9JFIEP6cxYeCAzmsTx9++CH2/N57                 7wFbDC8cJKGIVogxFW6LEECn3BghSNK8KAfCe6U8zqbE04ywd1+jVOjNAiPvG554l7iE4ODtt9++                 ePFipuO+++6755572D/44IPk9O7dmy4AfKYNhyESKkpgRWTE6JdYSRgGgaULnu3bt1+zZg29Qx5q                 QZy106EYXEyAWtVlfq+55poDt0KHHHLIQQcdBMgSteCN0lM9UQ9Jr1544QWUh7n4vwyUtQ2JG25+                 LRTqi+eVFa/I8DgRNCD1M1CCI+ZesHk2KJrjjUyLds5L9Y3L7lqQ5ht5RK+5r72d+GF94pMvE5+t                 Sny2OrHS2T5fZbaVzn71V4mVXyaWf5L4fHVi9deJt95J3Hv/1wf3mNGx8yRfYLwvOAMHNhSv9EbL                 0oOlakuY5QT+SaxM90854bSb3nkv8cO6xIefJFZ9nVj2YWLNt8mGvvyy9X758savvk2sWZP4aIV5                 R+QXqxPXXvt0rxMmh+MjArEpgdgMx1UEKHV1VY1alNRmcdMBSoOSFeYSqiNPKG5+kBONEHcXxuPT                 09IvuOzKlzY778IwA+sCStLYuRK6uAYoPP/88zq7NTI62BZxSquubAw/RRaIL9CjRw9it+7du2MA                 hx56KAEd+7S0NM6Ca2gk6kiUCpz17NmTwuwpA02fPt2ipAwS5rQlRX/qqafUBDG+GsWK8BnJcf9Y                 BeAAyHAoFGJbVmC37gxgFXouMhQKofeAI0D28MMPA4777rsvBd544w2HkyHiNSyTgQKYhGV67qei                 okIFJIma0FPuGCogpTukIqxaCdYSJTB1uYokAA6tENQlIWuny6QJq1VeHaewhTlcQstNF2otUYYR                 yMnJ0biJOWmCd0lFxK3fs5988sl6boZVhJ4CtRySWLVqFTBENA2RyVmWAcqfffbZ6qmkZW+BUk0w                 rRzqJ4nk4FEiMzkQDimjbQ8hjQC9YC7sMFZXV5MJwLGoIAOZcui0Lysr0wVTQhOkIgeigxAJWqQY                 TBjDvn37/uMf/4hGo7pdKb1iFTcNb4XspViEJC2glGAQWsE8cmrevHkahJ2j7QVK2wYJTSREN+ua                 EhOm3BwKDQqHpwYDRcFQRTReDog4KJnv3FppwREn5GzvmZDdrdQTAmumBaITDzqsPLf4meUrE5ub                 EjWN5pd6qFtNk3FUzdacqGNrcvZ247Ah8fyL9X37Xf/Xf1wQjufEsitpxROu8kWraUs/iWkBSm35                 KZ6Jhx2zqKzyg/seqtlcn/hubaKmwXAzH6mgI1vZ19YnAC+l129MfPZl4tSz5v5lt96RbHPjyGee                 Ep+VmlGU2XFBEihNH51YuwUodWV2S6BM982MZlXGopWhQL7fO2rPPYe/uax2U619gLJtuvTSS9EJ                 jO2ZZ56R0u8oWVdF1fUzZPFUQmbsNmz2GDB76aKTbcimsVu8HmmF2MoAINAHcBc3XQeEcK86dOhA                 nLVgwQIshMK6tw6u4StRRcUgpMX4O3bsyFnBFo0iBnjKnvKzZ8+mXcGHFg8JAPZhbNjtm2++KVsV                 UOI9kbYKjNhKIAN4StOMMFLpUUdcV4gEKACRmDt37uTJkyUGLq2Mwk6E2GKiSIVr0yaxCGVmZjIg                 wAHRLpAKgVMnnXQSqxTQf9tttwkdxBAXmCWBFnGrlyxZQi/AKSZla8TIwJmO401zqDligsRQAsNW                 0HPWWWdJZpxEPERy9Nt2vGnSkUgEh/SCCy6ACQIDYYAgDjXedHZ2NiqB2BSm+3QZmJ4wYQKuNPCt                 lVjXMRhY1io9TtClSxc94MU4uzGLNEzEh4AAYZYuXWqRDmLxoNesl+gSITwrLtED+xtuuIEY69pr                 ryVfPdJFGzoFNyqyByhZ7NEWXX3eadpeoFTDrQgEIVrs0/9yr39IKDwzFi33B8rMb29wl34BlM5T                 hwZEcr3h3Oyu1d5gHmUy/JPSvcPC8YHHHj/j5Td+xIINSjbWN5hfRTbV1G7G2phGbaSTG7DVlNi0                 OXHV1e9H46MjWdNBJS9AGZmdEXSe6A6DUAJKYSX7/Gh24R6pQzqk9+u817CHHl1l0BYcbEzypG9t                 7p2b+j+nf9qUuPbm5fE9JwUzJ3tDM0KxsljWvNR0cLDlsUqnjy1Y6QZK41Ynb8c7vnYoVhyKlPq8                 hUF/Tjgw8sILFuDeIhVttUnMPcTKDDrgiaB8ZFo82iGiFrOJdkLgCAp0+eWX42qhfGDEokWLLrnk                 kuLi4quvvpo0niZGcsQRRwAZwAQIUl5efuWVVxI1c0hMhEgEmLC1QagIa4E/CTk1IOOKFSu+++47                 LAHHTb9Jv/nmmzEnzBWrphWQAlcI2fBrBBakdZuboO+KK64AKQgG8bCwFpxcbFUPzwMieD3PPvss                 haWoODU0AWpgJ7Ciy4AFLerZQ/e4AanvvPNO8qCFYEIZkRgy+Dqlu6jYLUDJoVBYgEtfVIwqWyMw                 giieRQJMpBb8hQjaIyoJiin/iy++0AMJXq/3rbfeIh+o4pB+EW+2Sfj7+PjEoSweOOC66AG8whzS                 jLCfOnUqA45HicCwRXK8TkoSdNMuYS9jO3jwYApTAKQGgB577DGkoi45DDUcCALy8/OZMoe36TUL                 m0ZAFyKFmDiqcIYhKuReBSEYUkZVLDH7ypG0kC4OEN/ouoTGByKhAtCjjz4KoONREuZzqFPs/08D                 JYTcCJc8cAjA+ubHxOHHFnn8o4LB3I7Zc/zBEnOPIm6cR4MXBiD0Uxbd7c33hUtDsdnpntJIfE4k                 Vh6L53ZI7efxnTX/0sfARYZnXc16B52YL0zFIKbzRUJyapvNr55JOFjZmHjllca9uk/wh8ZmBGb4                 Y1X++Lx0p6EWoASjcd+KvVH2hf7IzHT/6MxOY1M8p99xz7v4kqDkhs3wTGJTqz3jrDT4yHwpjfv5                 3ieJPfef2sE73BOcFoyWRjPnenzlwYhzlwZwTN47skBpfuvtAkojibnHFcuNZlWYsfIUA5TejAGV                 lY+b18K3CNAmYZNELqgCdvLee++R02o6toesUsoyIcwV9UXFlcNeZWAO9vXv3x8lGzVqFDpnqwgd                 0FoBBCSUtPKIA+WBIUAQmfGedArC6ZB7OM0hEhBWp2chVdfKCYm5oBMllBh6nBD0RHil5Q1xlvJY                 bzgcZqCI4JAKgVUGX48ykO0jYSaYBfLKqkV0VpQ8dhGoCh+AEncmmeW4SMmUw9m6hG2SfgQFiiWP                 tyAhu9IUZo0BlOkXfQfIQJxWP8R0k3vcoOHDh9OWfTJcPWKudbsGCKMh3VZmZJhocJZW9HoU/S6e                 U5ojJsiwaJkOVi9dlmHJpJj8R0johhiapieeeEJXJ0844QTakngIQB9fcV7jxqGkQp046x5zcsQN                 eZCtR48erXoHUUCkp2txonW5WXzY/18ASlpFIKWRGAKwlj67Pt5xTDA8xe/PzcyeHQiVApTBWF7b                 QGngg/Q8j3d2MDwv4CvPipf4fSM6dRqyYOHjdY5/t2kz+soQs9EWMAUkAmcbmxPMBOsJlsloouKJ                 j5Ynuu8zJsM31B/JCWRW+sBf57byL4AyUgJQeqPF0ewib2hcx67jQtFzX3j1O4Jc2nI+BvtviLYa                 GlhFiQ4MUH74WSLebWQH3+BQZo4nUOAPmud+wtE5LqB03er5BVCWWaD0xvIJ2wHKeLQ67J+R0v7C                 2297j8EEk5OttkUYP54CJoqzoAs9bq3aTrJrsvSYCZVNwrBnz54jR45UARFngWb0j4BLOciAYeAa                 6Kz2Ssh+RNZs9HsYnBe8TtBEYITu6qFlgkTO4gziVGKuGA8mRIFW9kAtNUFURZyFR/bCCy8gLRwI                 VGk3KysLLL733nslDHbLQqIrm0JPmgYCsBZ8ZPegwVA3/TFjOi4Nh9ocWBqCCB4pT6CKW82hHS6E                 tEAAwaFN4hSeGsCh341A9JoWSSAkpEwVZh367LPP8CXJgTNTxkChAKeffjpttUkqycKgtpg4pO3d                 u7cORfCZPHkyowFQckjryKDHSEOhEKMHHNOK9UMfeOABBIaIc2FOT+1FWEb1ySefVDGEl4+sQwYH                 NdB7hhjk559/XqdonQRxCfNOc/YH+xoEJSjDXjmoBHEATPbZZx+asEpiieqURwzK4EGjouSov+z/                 LwClJeRAVrrR2JQonfVkB8+gWHahx5cXjlSFIrhX+f7wjBag1N3eWebyHJF4NN8bKvOFqkHJSOyS                 gK8iEipM7TB4//0nvPzqemAIXMStZq7razYBGvWbzIgAUKiTA5GYH3vzpkaaXrM6ccSR032BIdGO                 +UBhWqg8I1LpAGVxC1CaX517o2wlsY7Fqd6Ru7Y/67R/Fq1cZa48wrap2XhGxovb5mY+kdaATInN                 9YkPVyY67jMqkDk6a8/iDH8+QElf/MHqFqCk1y6gdIT5WR7nIoCA0hssDIYqsjPnhnzT9+w0+sUX                 fmRmm5qNE21EaotefvllPRGmn5dIvXaC0B4US3uInLVr1yoyxVsBiVQMIh+T+Otf/4pfg4KSgxtF                 MUg/akQGYaLVXbRCaXSayPGAAw6AJ1GwAiIRxq87pBDmN3To0G+c7xlAWJcKnHnmmQsXLgS+YYin                 SYiNg0O4jXVR66qrrsICSd9zzz3YrW7meDwewJEoNTMzU5c18cUElIiEmSHJNddcIyyTERLI646K                 rl1ujdwogx3Ch6YrKirIZ4gQUoMD0ZAFu62R1p5jjz1WbJEEYiIsyEo2kbjZ4dUjpUwWAN0mMRrs                 kYqpwbcaNGgQkEd5y1yUk5Pzl7/8Bc9UMTL8wX04Z2RkMBd4cEw6MIqEVNT1R86yIDERgCNpoAc8                 pbDCC0s6VHPUYn4pzPrEoR0lCAdQyyQ+7/fff68u26Gz/YXIBFUpqaeRRNJeitFN6nK4ZMkSyij0                 JlNjy/7/NFC6J8+mQatzLlzQLm1IPLvY6y/A8gHKULRgq0Dp3Af3BEu9AYpVxyKz4tGicGjUwAHX                 MkRww3FjkJvqNzVsrgExGp3XQzhKarGSaTBACZwSMZx3/jyPf0A4a3paaGZ6uMSfOQs8crDJBZSR                 CoDSE8oJxiYFY4Pue2jNRsed3FTzY1MCB+fnfrUiesmAJw/MoJtriJ+uSXQ5YLQ3OjycNdPjL4rG                 F4QjCz0+A9BJoDQ3xNV340WGHaBMyuMCymCsjHUlHKzwpU/qd9F135iXAODhAjq/UGg3sZ4z32iD                 frvybw1yayQwgqS4wFm/fv1wkdDpSZMmkYl6Cf5Q+vPOOw+bwT6dGuaXs7gzyICZXXDBBXqgRITi                 SkHZK4eQDcWlsAJe2sV+cE/kj4BQfr9/1qxZWDX50mwIJNL7gTCku+++G7jUhTbRYYcdNn78+Pff                 f1/3B+CGqRPGkoZbp06dUlJSKN+uXTu8lc6dO+MAwpmmu3XrhgcK0COnhKR3SMiQEq/pcRYrgyVy                 0HYICTFL9p9//rmWq9GjR1OAuejatSuOG5AB+hDSTpkyBQTZGoEdwDpQS0DKaJNDFRJ62yMIRZqV                 A9de7htNaJrYIzlrJE2zAES2QvSakWFlYrWA9CvMM844Q13Tnu4omgas9foJVqY+zu+FGCU6Mn36                 dNLAqAUsFmmtPRAjhmPLSDKG6IkVUnIiJPxJPPvss1qEUB7r4YLj7CHQvKysTPpM3zlUvtVqykuR                 yCksLEQ5WeqYbv1GiLAdevPNN191iOWwurqaeWRq/i9fo7Tar1GAyPnu+0TPI6anB8YZjAiXhcKV                 5o5zOC8cNz+kMc8DGaCc7Q/PbgHKGbHOhaGsfE/A3Pb1+Wakp4/Kyhp99dVvmwC7HqBkYmrMd3ia                 653Y2MExNnptOu6E5Dh4QFhdYuP6xOSpd6RmXOiPTciIzvBml/gyzR2V5P0TBygNSkaqcCqD8eIU                 7+gDeua8v9zcNHc6A+YCB8wuM93G1thUy+bO4e+TNYlO+w1v7+vnj071BUsisfmB4HxzGWH7gFI/                 gWcfiJZG4tU+T7EndcKl85bVGR2DUCMaaYNQF13bAj7QDAbfzsgOEbVQZSVQIxZzDN6o/+9+BwCp                 jLSWiaak7GfYsGGk5SysWrVKdxiho446Cq1FNoGvCiiBG6iHJcPhMFBIJggoYELpZSF4ClJoGRuk                 i2LW3XjkkUcuueQSYAVvAogBN3VVlGIAIkwI6L777juFz3PnzmVkXnzxRfbE5oAptsRZmsAnkp3f                 csstahFCZt1nAOk4lJ1zdkuyOk+aETvooINw03ShEN8WDt27d2fNIJM06wodJN0mUYDusIc0CK2I                 TACdBeaiiy5CJPortJIMuNWgJE3gkrdJwkfGHLgE9QRVZ599tpHeYQIx2rp3j79/yimnsPLpp1O4                 yUwQisFZEAenXhOqSbn//vspg/CcYnitPkBaVpGW8dHhihUrDj/8cMoDUsy79VtVjD0EaKJXlIHh                 bbfdppmVcoqshiv0hlgAKLyL85MnpGW1ZqDAR9YDxoQCDI6udEsS9v8HgDKpHCJnntga6hvM4oAU                 rCXvf7BpnwOn+aPT07wzwrHKaKw6ECr2BnJxMJ139oCezmMxxqPUg9YzMsITQtkzI1mF0czCaCzH                 Fxh+2GHTV3xq3Ek204S5bggaNrDi/wIrzR/5xp00pQC7hsSCBc9n+HsHohOCmXmhTuUpwTwDlAYl                 zWYaNa2bx7x94ZkZwaEFpU+YO93NifUbNjU2MM1sTEwSB1ttTc11bCTMnaWGGoObDlDuecCINP/g                 SFZBKFrl9VelphebtxQngbLlGqW5IKvQGw8XlDT338175wxQFoKY6X5qzfL7cz3pwxffvZq+OiqC                 rtB0G8T6TFiECWHwdlmWNuwEYSrSQgU1qNoxxxzzpfNREVmFEoiEZWLeAwcOFJaBiTI2OaHUxYn7                 8MMPOSVrkUh4JbiNCrtAVeyEiB40QX6ITP0e5uqrr5bZYELwlJGQVhhIHA3Y4evdfPPNtGu9GyQn                 E++JMnrk6Pjjj1dhC7jWGkXIA4hQ3r71A8I3BFPIpHcSGxmMbruuVEIqbA0YdDj11FOpdeihhyJV                 ZWUlJnrEEUe89957uHugG/gC/gKjbRLjKV+YMJaI+MILL2QpwkGjCmmq4/1xeO655+pCMGQ7RXN6                 cAdPkBFok+jUxx9/TJQA4ZjDB2hjLsTBQk9+fr66wCQKYgAd++LkIUOGkKML04wDe5YuEIepFNYT                 L1s9kTZqfLRnodVNJFY7XRshU6Oqvmh2EAaV07wcd9xxCjiUr7nW4LPPy8ujDDrj8XjwxAkdcJyJ                 G1gPOAQ9WZI5hSoC/QyCu+7/FFDC3tnMXRThUxKnmgEmvOKauoafOGsQrDFRXvGoNzDSE5zpD5u3                 VBhoABGcV0U4F+mS1+YcECFhcMQXm+oJTw3Fin3BvMzMnNTUPuUVD9c4sbDTM9dmIMw4j9JhB9Qc                 XOPQEQnv89FHVqWknhPPykn35YazSn2RonDcefNFx4r2adPi2bPNtygCs4DvYHhCx65D3v+4ll4h                 f1Pj5mT/ksy3a0PIVd8leh41OcM30vw43bwzrTIQK/FFCnTjyLldk3ya0uCj1glnkfDGc8wWyzfO                 dXiWL1CZ1bHa5x+dldX/5dfWskhsrK2rR6pE8pPN0mn2mnL9aIxVFBCR7lrg2CFCHcVwzZo1RMTy                 bkBJLET5kDCCBIWxNBrV28nQY4sXwCJhI1AIBxRXv2iWAeA/AhaoJmexPSzWXgBlf+CBB44dO1YP                 nBMuOcySnVW/IL31i1ogLJmyNJ2VYG+99RZOBJiLa8Mh8fWyZcu+/fZbtx1CsJWriwyYGUb+4IMP                 igNlGEkwgkz3c+/bIAtYRKY0jYnCRC8lAt3I51Bl7Ei2SQMGDGBwqGLhQN3fGomn9v3796e58847                 T1Woa2dEo6RinFUB1gDaElBa+WlXHiV8wD4wGmiuqqoiANcg64qkLoW//fbb6B5zRxXa0lRCJPRE                 gXqhMacJYnn9HIjZhzOTgke5evVqITiL2TvvvEPITCiA708c3bNnT624rAFwcJPmDpo5cybTBA7S                 Ip470w0fQmwibtYnph59gC3KQHNCcE0BHABKMJTq9oGHnaOfgRLW8GZjgJ0bvA5OQezAKzIS9Y3N                 oORGUps2s74x5deaH2gHgUW9Ay35qggHItvagI/MHOP9gZuBvHB4cjh08d2L34W307TzGA4bLbJ3                 fD1kkmJjm/ZOTlKkxsSzz3wfDPTNjBd4/QWRzHJPiH0FQBnNKsvw50XiVRm+0kCwivg3JW3Aeb1n                 ffUDIX5DU2J9U9OmpLtqmG8vUXz1d4lDjpqY4R0TCJWalwxFygPxPF90prn+aC6JmmeAnCWhBShD                 5vqsCbfj07zxGQYo8a9DcwOB6mi02BcYcnDPkcs/3YwKSxw0VcpqmmuxH8JbXafDqcQeVECqsHME                 E/02AyvCbu27wiDrKWAVK1euxPGhmL0BCqF8EgALIS7Wzx4gXTnFiyEel5Ny8MEHwxkX7IQTTkBT                 ybz00kthi+UQLIM1++67L4ESNgZP2RuR8q233kpgRXX8CJkfBBOLCBQeP348MRcckFDC2LGSY0um                 zWHhwZugcOfOnXE3LB9AnFYOOeQQqtCQLd8m2V5DehIF5L399tsBfTiXlZXp1L8luqmbOUceeaSg                 bduEYHa02bNiUReQck4aApvooJSBUbJCQtRl4sA4AIteuzuoq5D2mS2q26GmmF6KATCddNJJ8n8h                 +6w+8isggAgsQD0bNS9duhQPUZdNaHefffbhEA44gF6vl9VRgTMRDKsvpLUTIo1jWOp8MQJWNqiH                 WHdxrilzyimn2HybUN/tnCrGt8RoXH755dJG1sVfYzK/U+Xk3tmQdGtA2dAEUNaQqtlsft539NEF                 5uUU2w+UkUJPeHooq8Afyg8EZ2R4Rhx5ZN7yTwij1bSz4kkINsflQy5HNBdQOvI01plrle+83dC5                 8/BIZIY/WBTNqkgHfGOVvqD5tkQ4XkY6NaPAXBAI5GR4B15z/RvoWqOB+3VNTRtMP9XwdhM1dg4o                 ddnBbCTM1YDZwLfXO93jH3Bhn+pvf0w++u58YtGQ9EDWDqwQUKBJTPbEiROtVXAW63WK7wBRC5Mj                 OMINBCVxi6zOgRc4hhgP1jV48ODevXvjaYJHYFxubi4WIltVo7rsSF3wEcMg9mGdf+qpp4Q+EG6C                 3EyIKkTZLPhwUEX9qhc70Ytwjj76aMJAEHb//fcXSqLcDz30EOVpF+zGScHa+/btSzxIAMtoIDyH                 nJKFqxcYDE4HvgMge9lll9177714fLgqWCY8ScBNRgXY7brrrrQCKDCe6tS/HU/q0hDOkeAD75iw                 jsTjjz+uOIDhJcFe5bckBCCwZVSPb3n12TYKQ9a2qcgeDxFc1jVHKqovGgFK3nnnndOmTaP7+twb                 uENDiIeHnjTwFu9VV5mZa6ZDksNKZfAr9957b1rR9U2IuPiJJ55gcITslKQ6eCcAAgQXL16MeBB1                 lcnsOFW3SkT6qM1ee+1FW6iZ3lvRvXt3tIgmmHeIBCQTwGG0d2nouBRDAK0yEPPSp08fRoB1C1gv                 KSkpLi7WZ4cZB/vDsJ0jA5QiHfPPAUpCb+bAQS4HmIRc+GLOk9oGR196cd0++4wPhCabD2O5gNIF                 i1tuhWn+6aF4YThWHArP9GQMzi94FG+Kllqg2WlIm2nVoKQjmoASY0gCZUOtAcqVnyUOOGCy1zve                 H8SLNECpWyiIxCFhuD9cHM+qTEkdc/gRRZ9+bvrjPLu+wQAlfJyubj9R/L8FKMkMR6p8/qn+UP/q                 uU9srDP302HeSJccsuCFUhJl6HrcfvvtBy5IgWQhO0EyS2zjhhtuwOqIhmCFzpEJ59tuu02LPEgk                 jYfC4TCegtv9QSmVQFNJA0noNyYn+MMAcCXuuusuCQn+0hyuoqqoLjGX7p5DeKNKYJlaD7p06eJ2                 J6muuw0QkCcj7NatG0ysqVhSVK7CWCPdweZJYzA45lJ1BNNlUAiPA5G2jVZQqwI33nijAB0CLq2o                 om1z04UF+7CLcGobBDfxJ0GwTN1Tna+8Qu666AyOs/X1IE0ljiGd1bBroiEBJdx0CFkE0AOJEOOM                 R4nXzCl0Q52yAw4W68cIY8aM+cZ5ugvmlOHw8MMPR7WIl8GpuXPnLly48NprrwXEWZyIuImdQb0V                 K1YQMv/444+AIMv2nDlz1ChdsLoNNysVRBqwbjVcHNI19Y4wvIPzWjl1XHsRixMt/tuh3gYlQ2/J                 ZFDJgY42gJL1tmYd01HfZH4rDWReesmzsejgYGga4AhKuoFS6a1t4XhJLKsEV3TPPce/8FKtfsGt                 H94kW5QQDm0BlA2Sp5EQvIlILXHUUbkpKcN9gQKQMSOAr1oejFSapxTNV8xoqCwcyW2XMqig6EkA                 HjxCfqa7uXmj6SKsWhraHmI2dhgozTVKC5Q5JJQZjVcFglM7dR351LPf1zq/bddvJTEJaaT2EDp6                 //334z099thjykEtWlnm9pM0T3uoFezq6R88O1w81B0vj9gKXUcYlVFFTALlthJC5FDgwQcfzMzM                 pDqehfLdqonMOhTmfvHFF//6179mtHwNFacVG5swYcKCBQtgruaoItvGOcKNAiDwPnAtcXjBbgkP                 UZgxASkozFoCEvXq1atHjx7Effgsxx57LHZyyy230LpkpjBmQ6P2rb3kKGbfGlGRMlDy2PkpCyEw                 eEdgiCSc2s5J0bONSOjmtg2iUxo3yjNEOO/nn3++2rIcNBQAEGwRiVE67LDDDj74YAYNX55ZU8ct                 n3HjxoFxeLUMmoaFVsQN5KIVwmT6xZiorppTK1rFlcZNo7yY2z24qVmDqG6JUzTBKatv0gTyP/ro                 I2IR4gn9UJLC5IsJZ2lRzr7yIemSWoSUQBKCBmacRbFr164k0Eb0mThMt8J/DRmPkmasBPxzNguU                 5naK2cxiIneyAZOuqU8MGHBZRka/QGQ62GdR8t8CZSy7KhgujkTzUlKHXHDBop/WG0/SeWkOEb0T                 WauxpDjmhJMUULJvkce5ycM4n35GZfsOg33BPGJtb6jI3F0JV+BImi9GBPNi8XxAba99pj1H2NeU                 2FRL4I2uMNM15gly9Xa7aUeB0rybvQ2gxOc1Lw1KzxhxxFE5n31pnmOHc30DY27IrY6WpChoGI6b                 1MKtKDtEQgSrrO5HN6BVzocPaU4CUMzqBmU4tBUpwykdUgVhcDdw6ORfQGpIxmD5235ZI4eDbQKi                 gLrGHoYWfdxllMmeTMvHEnWRBz6MFRw4tEzIpwqcddiKZJnbILoswdRrxspe0hUB8bSlyWqTaALH                 CtzHyZIwyRNbITVEozp89tlnr7nmGuBJveasEtqr43QZAThlx1zEWQ0+ZW666SYWG0IByxlSWxDr                 3JIlS2wvtjZc9NTGGRo6RsPOL12D4N9mH21blghubIs6S6fUL0sUUI6Yk+BQXbBC6mICfUc2dJtD                 K5K7sztKv3OE+VkaGne6BUdk/QVQopOgJ0XJ/WJ14pijczwZA4PmyUHzOTCQwnzRP1JEQodbboFI                 SSRe5fHlEbB7/YNvunlFXWPCefwbtAQlBYUuZXXcSUceuurAKAeSB1HqE7V1iYv6LkxNGxqM5Js7                 6eZTE7M8/pJwrBKw9vinhSI0NGTCpPvWbTTv76A5YNl5rrvGXOaEkcN9O4m+bw0onU9Otg2UBrgN                 UOa4gLIsFMpr175/vwGLflhvfEkzqgTe6qozr5p4plZKj1pIe6SRkNWqnSC4ia0OLY5YTaBdt1ZZ                 eyBTCqofCENWHncZK5tQmCryTUjLepVGADqrhmgaVu5GLaHrKg+pCgk3N0scSjDOqoD2gmz4uMuT                 plE3Cthx2JI0MuIGiaEly3kbHETiQ0+VUK02ey3SKac3yabdJMVQmpJwc7NS1+xEs7eTReuaI4lB                 LfHRHj4kyNSsKVNMNMs6SwIiHybiTMIWJq3eOQxMecqQzxAhGGfFQSNJSU6Rj1SQmEDMtdK2PESO                 hIFsAZjb5pwzPw8de07BwcneSfrF40FwhqvTDm0gCp1PZtEc/zfUridrU33i1Tc37b//JH9gjPlZ                 9w4BZazS78+NZ07ptteYr78zIXwNk2LaElBiA6SdEXG16+RTwLnbwUk2nNta8zvwocOv9niHh2P5                 wWgRQBmJV6ek58ezZ2d2rCC2DYbGxDMH333vl0Dk92sNHgGUzid2a8wDm80tbW0fUX2bQFmyXUDp                 /HaoU+fS1PSL84ru29xgRllxN0DJdEqDRZpdplyzjkE62clLRW4j335q5QRJxaVk7FEs2pIicqh2                 2asttavCluAgOdFaIYVyVBeyaq22RO40JJ7qu07BTRWVKcFIiCQJpDJqTgXsoMHHmo34izN7ythT                 2KoqbpvE1kIhw0gtOwWWM/tW4+MmNSqZrQD/lmy/JIPmxTbNQKldEWxVgHwO3acgziofImGHxQpj                 x1NtafBVTGJoBCwTOyAwURV761k51Nqyp8oRc6cpU9FN9pQOIbckIqXdJREezmLucDVEGnJX3Alq                 +zlKxoRGne1n7GRX39wEStY1Jx557Guft1/MvFPSfD5sOzdC76zMqpQO49qn9J2e88C3a40nST8a                 DQ4KCtkz7mZq1SxddhrX2RagNCfMrwvrGhJTpt2GzwhQ4lEakIqar/FEMiv8odx0z+hAeEjf/pf/                 sM4gsvPWCTZ1jVbYnA5uNyHqmu8Thx49yeMba4HSH8vdNlBSJhQvDMXzAuYjkXjTRcFIoS8wvmOX                 0U8++93mRhYe8/t253n7tqdzS6WUKkDSAzRSSkx1TpHphhiltRe5EbZVvvtQaTGEv21FZA1D5D5l                 BZacKilu4qNMu3cn3AJQ2LKlgMq06jukQbMFWpEdUspDtroK05wSW54SyYfiLHvG08qjwnaI2Ksh                 9d19lrqqpbaUFkObqbRlDinTikRCOZRRXasMSMVZkc2ELUQOaSsA5IYVkbtRumBPKQET9rYMMrjr                 qjtqRWXIURVlar/9ZMtbFbU9En+17m6RHJuppi1RQGW0/zX0b4HSwSZcPsfx2dxkftNHDHv5VW+m                 dOgbDM0AFFqh4TY2gDIaLQ0GJx9w4PQnn/7RvDfXNNDY0MygwBgNYyPhqIjpuZVHpxzURjSTixNm                 QunyqoeI4kPOGx6NR5llfgUEGPlDM/FbPd4LL7viRXNP2UFkhxWk3pmuOOntJThsEyi3CL2dy5EE                 2sFYQdD5HIWTXxyK5nl9ow49fOb7y5uwLXrb6EylnU3rOaIl0gkZyffff//RRx8RXZKJJqHWbsiD                 pDGQWzPEwc2HsxwqLXK7mdiStFOtKNOSaokbRAGbNqbZoqkPPfTQVVddhbNmcUrkFswWpkX46BRd                 UKPIYA3AWgtEMVsRVBIwUdKKQYtK245QxfIX2YFyEwXIh9wjQ1r5OqTpdevWqVFLNhKnpO3vM888                 8+yzz5Kw0kJWBiSUT6pDEYc0xykS1CKtum4ZLH9y6KAVjFo6RT6kTJ3lFCXdYqiDGiURaXuo6lRh                 j+dOPjm23U8//fSdd95BRcVERAHacjMh4Z617SSYaGzd1SWPNQpOWWEoo2KUUdNMtF7uKy1SJqLa                 gdo52gIokx4ckjGsbEmgxN8x93AazG/68ARHjrm5fYdBUfPNbv0CZ7s2PCmvZ4o3Y8TZ58xZV2Ne                 nVvnvG6y5cYRe/rM5szizxvCuICS/rI34jQBlP+6+U1/aHAgMj0cLzE3c2KgVYnXn+8JTM3qOCG7                 U/933jeDmqwkMil4qi0zB9tJMNkaUJqVYMubOS1AafzuSI5xJ6P5oUgJsJ7hHXJhn0t/2mQGgd7W                 NplJrTdXgA0prpQiohOo5vXXX3/mmWfuvffeHTt2PPDAAydOnCgjtMWkqTqUcqMoUCuTlt6ISFOY                 vTKtIYkhRHVpJKeIp2QJVn3dmsdZMYHIR6f322+/rKws+wETxLA6DcHQlidhW6SAWmRPWmVsSfpl                 OSCbEpbchdm/8sorM2bMsO8hF9mGRLRCSTIBBduKbQJf0u1OgmuSzU2aKfIpY8/SWdaz3XbbrV27                 dnowEBl08ZS2KGmBFdIpKyRnrSRkkn7kkUfoyHXXXecu06ojlqFEpZa9iGwTiKdadNAWgydpctzj                 6cZfSM1R+N577x0yZMgxxxwTjUZ79OgxYsQIfX/Y1lUteLbSuu2nb775pqCgYP78+fgEHEpCnRK5                 nzPTYJJGnazAX3755R//+Mfjjz9e8wgH5dtp3TnaDqAk09lwADfVG4/y9WWbDjlyRkraqEznFnYr                 NNzGZl6TEZiSmtp36vTbcUsNLjbVOE9QatZto2zmxkbLRr4DlByQZEBIGKBswFV85oXvYlkjvMEp                 AKUnWOgNF/oiRRHSvvHE3QOHLloHGJlOwdBpxfJ12nc4bi/RMkB5yFETdwgonVvw+c43xx2gjBaF                 YjNT0vpNnnZnbXKJqN9cbxQdlbBYyQRLre+8805m/XfO+wVQ0PT09Hg8jip06tRJNrAlwIlaHUqT                 YCv401kypUkkAAKbCYktCdVSMUiKa2u59Q9YsRZ7yCGHRCIRPZbRypAga0hqURBjvVqLOJAsmb0V                 wIrEHs4Wc9nDTXVJX3LJJX/4wx969+4tsBNJWjsy1ggtT52iF0pQAIZWbIjmYCj5xZkylg+1lMbg                 uzmkX09DGgQrqpP3cwK2Vio3seToGX6mG1DW8KokUpEj2bRHVBjKE0QM0qtWrXrggQdwAJXD3hJV                 aLRVph1MCIFJi/OKFSvOOuss80Si82YKv9+vH4kzyO6lQoUh8bGsIB1CyeOtEKLuvvvuVnPoKaxI                 ICfq8eGHHy5dunTNmjUW/XVWbNlzyBBhI/vssw85yGNbdIu3E9QaKFtAhOFDArTKTInygLbNzmdt                 7r7/o0CkX1r6hEisEjhohYbb2IKR3FhkUreuY5Y8/kVNY6KmsbY+sfFn/DJk2gU9HPRMtusUQC+d                 D8pwns6awgZkAMoVKxP7HjAtwz/BAGWowLx7Ipzbac+qdM/ocHzgY099i93UmguaCN7Cgc1wUAc5                 2F6i5R0FylC40nwKPJTvD800t+ajBWa1iEztkHbh7PlP0zxrTz322+AYsyOLdFcTTPimtwYMGzbs                 hRdeQG++dr4bhX+Rn5/vnnhUREpDdXSFtDQYkom2MgkO29QbmwkKqIpFCnhihMiAbOwhp2ASHSwa                 io466qhwOKwHKqloZXA3KrO3/N2YazrjPAtlM5GHhmQMKgBaUZc01VsJA+lzQAClCqikyPIkgQzw                 oTyHFIO/0hADaAFdCQkMWfODdIpaVgbJg5ctzLK1GAQJT0LyuH03K6G6JjFYJoF7PTv98MMPc8qW                 tzLYhLuPGnB9RGHmzJlqF2JIxdnmuCWHOLTDtXr1avYENOAOfLp27friiy+igYzbt99+S3iL2257                 B9EdpslydsuDkKLk8Vbo9ddf33XXXbOzs4FmpFJ52+Xzzz//z3/+85IlS3Qoku+J2GqXIKZDhw6H                 HnooaQlgp9sKthO0BVAyhkY2/sGUBswIkkHoTYpmyZp36ZOpGReGQnmBYKXztovWgLi1DaBMSx10                 4YWXrXdCTlC3MbHReVut00ZyDIFIA4LKcDYkweZbAeVmAeWPGxLHnVid6hkbihXjTgZiRenBabGs                 ojTP8BNOqdxYq4bgxnRuTHLQZjpE0ya1nUTLOxp6twBlbiCcA0qal3WGcn2B8VmdRt557yc0D4g7                 42D85YY6oxBMuaYWd0DvqqqsrERj1v3ynX2UwZKl4laTWGmt0osJhzrLHtNdvny5qkNyiERSd/Y0                 alVfigUHFI40zQmtdFYoYPnLH8STgugCXrDH4yEOwuZtFQgz+/zzzy0QQKoIf1kFh6i+vSBFXSuw                 CsCB6rIBMUEAawyQ5GEt+dOf/mR/pU5J26IS6pRty9qwgM/dBLansRJn8iUSsjEpjBhpN5Fv2xJx                 aHsEiQ8yqy2NJGwlA/l2xPDj/v73v48bNw41IOYlR2qgqWGmEIxaYggxehpPMmGud6mwZugsZAcK                 VaHvdESNwoG0uiySVJzVp99OP/10jRj5Ek8F6Jp6IUIkKaFEYk8BNWGp1aGb8ChDodABBxyA5th5                 R2aN3kknnYQkeuU7jSKMmqZRtM5G5e3btwcoaUVyUsaOz07T9gIlGylG8cdNidETrk7N6JOdXeEP                 6IW1rQFxa1swmuPzDl50+ZsAHCE3KNmYWNcMV7jTYFK1WgElIXMbQNncjCtqftWDn3th32vbp40y                 jwdFigKxglT/lHTf5MyOU6698VPzfLypQWsM9IafOZi2OAPnZKvbQ9TbYaCMlAsoWSTCsUIDlIHp                 Gd4xp591ybIPzfjWo0tGvJrmxqZGJxLiz/xzXgqLWrCKqnUITbWKLjVCA26++eZevXotWLBA+SgH                 StbXIcV9lJkzZ84JJ5xAzE5Ucthhh+FiyN5gCAofd9xxL7/8cllZmQoceeSRV155pVjJGPAjsBaA                 j7AIBLz66qv/+c9/Tps2DegUHxKTJ0/GhczIyADcS0tLCRizsrJWrlwpk4bged5550WjURb8fffd                 d8yYMURStjuDBw8G1K644ooBAwYQ2SHGmWeeSbuckpZj/3fccQcmlJKSstdeew0cOHD+/PkXX3zx                 woULHQZGWiVEsGL0kNMaiRIUY3gxrZKSEqDH6/UiM/4v48BZjTx+DbhA0Ara4kylpaVhvRMnTqSb                 nJVx4iwXFRUhCXHiwQcfPGHChOnTp+P442RxFjTv4xCeFxaLM3jGGWfQHQYcQgZWi3POOae8vJzC                 IjtQNvHVV18R5/bs2fONN97Qb5aXLVtmzwINNFdVVaVDeNKpyy+/nHEDu3EG6TvVqcWY77fffv37                 99dkcQpP85BDDmEi2rVrR9+ZUHUNsvzVTRaJQCDQsWNH+svgMIYW5lRARJoBRDcYTFxCBo3RQB64                 Idj2AyUgyGijhzSnYpovwimY6+fnjDn6Q08ZSfSHtZ/JYnxQDPJZFZhTeucWFbKatnO0ldDb8Edj                 0Dw2ozpkkNpYn/jg04aTzijZrX3vrE6VHr95drrFqdSNHXt7h8wS11lTIBib0qPnjHfeNW/YWLd5                 AwDRlHBWLVpgS3aKk+7Q2+BmErI5binZlAAojUcJFA4bfkeH1OGhaB5NhDOL/OEZ6Z6xhx1RtW59                 4ifn3RcgskFJe5VTWxIod4B2CihLnRey5YWiRZFYeShS4vNPS88YOj3nvvWbzcJTl2hyfizUYL4+                 6YyA1VS9zvqJJ55A4VAXcph4lEb6qjJQRUXF73//e4CGipyiMFaampoK1rz99tsUwGz233//bt26                 9evXD9NCjWBrP/mgX9QRVR199NGYFtbL2X/84x82wMG8qUsm6zmuDawwsL/+9a977rmnpKI5QHm3                 3Xbr3r07/EEfdB1IBSj1IgN0tLq6Gi0nH9ynXyg0DFH9jz76SCaq4I6GgGlE4pQK6FtR2CHLxl/+                 8pdgMIiTRXMwB7woA2LKHjAb9qRlIWDcH//4xyFDhtA6w6KhowALDEPEUFAXg6QAaAugUHjKlCmc                 hUBwxgR8YVFhhWBs9RaluXPnapDxzfXCY40qXZYwjK0+AkO/GENWDlYamgaJOHvbbbchgIh+kaNV                 UBMq8SCZNMPyyCOP/O1vf2NF4ZDmEEkvptOww4GzwBxpW5fRY+TBU9yrc889l+GilczMTJZSekoB                 AIjhpbMsOUwWXdtjjz1wvVn26BQFNHqSgYZYjeBAH3WovZWWBANCYZSQ/tJ9So4cObJLly7UYl3k                 FAVgSGFLrQ7dxDLDSFIdgIY5OTIHhgLF09v5WDlYjPXGJoCVfDJPPPFENIFusm7RO327jYa00kNa                 JHaatgBKIERoor35Y93A5ak3H8JuStxw83uh6JBgeFKaZ2ok7jxNDToAE+YljDlswQgYURyJVXq8                 pbicsfjcYLTUG8zLCExNybi4avajmzYbxNlcB9I1sVrQkPP6IPLoEm3V1tRuBik5rmnYbK5kmtad                 H63wZ/5RmlmsaWw2oSrcZs54IuAbnZY2tmOn0qA/p0t2yV/+dN7UKY821GE8zKXphXmZJnhMbxqd                 pgwf2DoBlPOzcXI2bUzGHY4SuLckUW/tpsRJZxThEvqDJZHobF+wZFs/YWSLFpH2hwsyfIXB4Nxw                 ZLbfPxN//Irrn9zkXHytc+KSWrM20xAZyeYwe70BAc0GJqSjuIr33Xcf7okePdHVGfwaTAj0kUpR                 EkcS2wAo33M+1vjFF1+89tprdv3Hhv/rv/4LK5LqYCrYGyimwmg2rhPIi2fnFE9QEjFmzZpFmpFB                 8xQJAiJgCpmypaFDh0pIaN68eQSMnTp1QkIMHqjFijBgEpSRjV1wwQUCMtLk6LUXmK6VU5cd9FVY                 zH4X572t+FaKgtesWQNSwwFXTh0XMW4ydXmUgKD7LIQAONScol9Ag6yRESNeYxwYXoR5//33KcCo                 6kW/lAH+OMSXYTo4vOmmmyjAmJMWpuDggDhIqLWBxYkRAP1ZRTi88cYbKY+LShr+iIRbBzzhcsJB                 AwJZBBHo9+jRg3F7/vnnKQ9b5ujkk09mfCQzviruG2ubatEvEowqVSQDOUwltazfSkPALuuNxREI                 3dAr4nFyVYZMCUBDAB8jX1hYqEP29FddppjG9sEHH2RyY7HYp85Lc6UG+kyx3vVJRWWyV2elORwq                 X81BjDPgbp+XEH+1i+LpIgBgSnnJyTqBMisaUGEERitATB1SRi3aJnaOWgElHIEN58UTyMbeQIhx                 x7Bl86h5Y6Kq+gVfYLg/PM0bmBmKlTrvDzfoYIAyNoPNvNs8XOwPlAWCVR5PRSw+z7yiIpYXzprp                 jwx48JGPYAxEOB/WNiBFQ020ab7z9ZMaMj9QSSR+WA8yNyXDUtNhU80BOCZpQ32T+Y2Q4VKfGDf2                 gWh4QjA42eedEg8X+NLGds4ae/O/ltdsakHATbiToGRzU21zPbE6zZtvTtRvrt2waWN9E4wczpvB                 ZKMoRlecztstSZzeIaDEj/aFzcdpgUt/qDwUXBiNXpLSYVx2p8EPPfGWkSDRyNoDX/NpXuQzg2Cc                 C2kGwRpqATg6jRt1QSHQSOyZfOwBw8NsyOQwJyeHMlo/MSHCJeiDDz6wigIBLiACIMvKjLNGDsok                 v5U4VI1C999/P+4hOEK0CweaAyCk2XBjj0i0DlDKGcQb/bPznS/SFuZASeI11B1LYKmniUsvvRRX                 Tmch7J++HHroocgAW71K7u677+YUAqPWw4cPxwYQbO3atXhk4BQenxUStnPmzAHQMUgOYSKTs3TN                 Nddw1l64kOQQ6wRLCKeWLl2qfHpBi0JPXDZYvfPOO6AYaCLsoAz9ApcR+OWXXyYHBCQNQJC27SoM                 1z03hohBxtkB4mG4aNEiWhTsCmVYvWiOQXaqGhIfxpkELbIkIAPxsrVw1hJy9BV1MmkC1x43X/Or                 DoKkID4epVrRC3rplFYXesGsweTWW2/l0CoG4SqDz/ImJuTbBKs1CnDJJZcgldHLlvGHSFMAgVnt                 aOX222/XWakKCzlThq9tL++KJ2R7ZIcOPqTZ4yH6/X48/RUrVlDFFoDgo4+P64IMxNLOUkF3GGSU                 BP4MNWDN1LDGqIy0S2mrnDtBWwAlKNnieZn9z0BpPolY15AYNuLmDM+wQGRmOFboCxX+Aigdj9I8                 Vh0xQAlE+vwV4Uh1uieH8t7QuAN6TPtyjWHc2FznXHl0gJLWTNLAH32prd9Mv77+dvPDjz9DSVCS                 TCManTXykOJwAzE7Z2vrEq++mjjiiEqvd2xWZqHfN22vLpUddh84csQthBEtD5nXOj/uNi0R8zcy                 8jDdbEL7z7/4avlHnycdTBPJm3aYUPPPNNZq2xmgNI8EmS8IlZi3dfgXZGYu3H33YaecVrn88w20                 Bm6ba7GN5m3tNGHeu250Jqk0eEOsja+//joqwiElMJ6FCxcSwcnbwrUkEyUmje9AWsiFnRA2ssIr                 9Ebhpk+fzkKNGVNSF3r08lfYjh8/HlW78847rVICjpTRbRBapzBOqzBOZvzVV18RZB1xxBEcAiXo                 Jbip1/BAclRBGeJZoTzxIEz0ekr6oobQYJAFIVFfVJmwHSiRVyvNBrnoPnvS8mHxy1SRdtmDqkhO                 x2EIyUpF9AsXjyq6682wUIAqpAmrwRfGh0yhiQjcpLw+HPTmm2+S1ufDJAwt0l8Q9t1330VgvEV6                 TfArm2d9okVCQiwcb5Qc7JxWwFY9yHLDDTew9jDI1FUVesoyoLBaTWju7GFubi4yEIRSBq+Z0Jgo                 AWcQVBIH3GFdyXUqJZ9SwKNkatATdU3jNnv2bOkPZRhw1jDSMCGTtuCDH81QjxgxghwNo8pD4oD+                 6BBiGOmvBR04IENKSopd0UVoUbt27UA9fGfxpAq6IRiFg50v2yJz9Oqrr9IpxSI6C6m/9EjXhR57                 7DENkZTz1FNP1aGKwYfZ0V1v8URga0E7TVsHSm3mD4duY5NzQRCgPOXU2R7vSH9oZjS7xBsscKDh                 F6G3gDIQLI9nzgclnWcJ83yhye3SB0zLfajBeUNtbT1xp5lI83UFWjPgRSdr6htqgDCQ6tY7niwu                 v2Sj+XADyt1yG4e9GRBmaKNzp9i8DSgv/9G0jEHpGRNjsaJ4vNiXPmnXv597zbVvgsR1iaYNdd81                 G5Q3d34azDOgJoSvb0jUEJI3J267dcnTS18TUCKJEYYSptfm/xbbzgBlOLMomJlvBiRckZE+KzM2                 t337oTPzHtpQ71xBaEJMcynAACWwbj7jYxoybTU2ylSKi4s5bDXNetP1vffeS1oepf00GASQYQ9g                 AQaPoYKk2CROEDHy4sWL8WswOdxVIRohMwhFLKm6aBurOjkoJYf4BRgnQIk8sg00DyXG7PFNOKQt                 jAFgBSDsZSDK4Omw2hOBIvnBBx+MV7JkyRLrUcIBhrhIYLfY6gPQ2Im1QH13paCgADOQT6ov/+ks                 hFtEJqGWQEFDRAES7Am96QWxrfsUgtE7QAFrFG6Sg9ik8dT++te/ChxBQzhr7ZGTjqWBWYAj3aRT                 rDqk9bEgEcxxivEiqUuaCB3sACgZH87qWSXNlwjHhxywSTepRZKTFvH9GVUK0AWkJQGxKjAX+Omg                 MANIRXpxyimnqCMQA8Ws7bHHHgClchQulJaWkqanCEacgWJo/FUGou+0wlCTyWDaU8wF4M6pY489                 lnymz6K5mzjLSommUV6YBRqCmzRNL9yQJ7JTLEIw9oI5hpQxREIGWcuPU8QQ3QQTGYGXXnpJrTAX                 6BUrusXir7/+GjHoI+rkVPoFtWp3h2ibQGmE4Z8Jfs2J5sTnqxIH9TRPt/hDudGsMvNuc/PLkwoD                 BD8DpcEFb6DUvHUxVu0LFHTuUhaMjA/Fhr/6tgmW4drQvLkp4TxTxoHzcsn6BtQRT6GOxlH7IUOL                 J0yucKbLwUoJk5QH1Nu4qb4GeTZuThx/gnEnMzNL8FujmcXh8NSTTp7z4QoT2IOH6xtX1SV+qm0m                 Tq/fWGeuCsLzpw211F3zVeLccyY/9OCLYm5Q0vBH451/JrfVtjNAGYoXApT+sHn/W3p6WShYjD9+                 zQ3vYNnONQ7TGOuECb2bGfi6xsZkpMD+rrvuwjaYdcyGHKYZZUIh0EJdrJGPdu2111Js2LBhVqvA                 R+IvvBtcHjIxLXATFbQ4Ba7hHymtL5wQN+mQdoGSXXbZRUApyLDfHpBOL1++HAXFgWIGKc8CTnNg                 HKd0SQ5zIh7XXW8O5QjYj5aog4TAYM1BBx0kC9l3332xAYXDorFjxwqjAampU6cSx4mDfDQIVwu2                 YIEOJZuYQ4TeWLh6IRKeMpi0Swdfe+015YtoDm5gCvLg7pEWUDLg8KQu/m9aWhogRRpjZqmgCxQQ                 kkIgKU60YnMcbYXe3zgvndN7gh944AGmQ+aKkbN69e3b16ISRENMLjk4TZRnbQPCnnnmmXvuuee5                 55579NFHWXKYa93SIdhkfE477TTKq+8IhiMPiDODHNIWnWKmdOOOfsFc36jRu02BWvl3DCzNXX/9                 9ZoLuIkh8hAoMJU0au9EMel0mQIUVl9YxtyXTTQgzz//POjZq1evb7/91lRreQednSDIfSlGqyz6                 xgLDSGqBgWiOthCVugAlkrzyyiswoRVhcXZ2NmftMDJ3TC4aS3n00N2cOrVztOU1yjaB0rhvYNz9                 D67p3HViMDwlEC4wL6EIF20NKP2hcrAyHK1I907LzJ6Z7ht43ClV62v0ojM28/Q6E2cOjEfZrG//                 M0309623arrvc96QEcXOXLElX9bryEOe4x4y8c2JV15risZHhyM52Z2qO6TPCEXzOqQMrKp+4aea                 xNfrN9YlahqM72nAkQ1XlXR9onFzo6m7+L4vAsFTH3349SRnbQ5QOoiz5bYzQOkN5wZiBYFISTRz                 dtBf4Umf2qXLhIceBb71BKXxcK1HSe/qnauVEFqIKujWKuaB2tmbkqyfpzuvB2e1p9iLL76I9uC8                 EImoAJEaitu5c2ewAEXBUUKZCIU4C+hgFZTHE+GQnuoh3ptvvhmNRLfIBPLAPsV0aDkAQYGKigoO                 IVwhEArzA+NkZrqWSkgok2BfVVWFX0MABV4gIQABxOBc0AvMG3397rvvBg8eDFu8GKogJBKCa08+                 +SSHsjQ9Azh58mTSjz/+OL3o1q2bsAlikWAloApwJrHdZgDDSy+9lOq4G5988glGSMcZN8wP4xTC                 AiIccgoJ33nnHVAJBAGP4KaYDndPZsbIgAj4v9gwJclhWZJsWsNAE8aHs2AKo8cU4BCxGnEofwpp                 KQ9qayHB34Q5YzhgwACYI4AFUOECg095sJ585HEU0uAgOM6Ccdxxx1GFQxZRggNk5iz04IMPgk04                 6W+//bbGUEGJ1hI4M18E0eSce+65NlIG2QF0ZgdM10hSElLf2euTjXiv1113HasUA4g8YNCyZctY                 CClAPgWIdukdh5yFdDOHLsAKtrQi+EYG0P+qq66S8kAUYE+P2DN6Ho8HfxCtRpFojr00H9KwCJER                 gOlD7dUKOQw7iPlP5xPExxxzDDKQiQaiVFqwfw21BZTsGSKSZqD4VytHDJibMfO+QGh4MAQkOZ9a                 jAGUekLIAKU/Zm5cEIODGmSGohW4k/7AtFBktD/c77Kr39ZVTsPV8NzcZEJu25BJ41oCGXOql3ZI                 Oea8C2duQHOMJC3Abf4Y05pGEz0nvv4hMXnq/e3aD/QGZvpDpf4wqDQ1GBn82ltNcGfCGfhv123+                 fq2BeGJtqtB+rdnITwwYeGNq6j+ffHI5XJPupHk800jkmJyadG/bAso2X4rBsPgieQwIxcKxWZFw                 eUbG+FNOnf3Bx+YBqHrn/ZOmQeefsySC5cl4UCqLKlxwwQXgGnMPYKHfxx9/PB4ih0CPrlECPbgV                 5ICn48aNI9jE4DnEocO1pABuC4eo1KxZswhUsSUOCZc4BVGe+E7XKGUbL7zwAi2ilIqzCJkxaWqB                 zvh33bt35xBfhuYcBmYNB2XgiTtTXFx8yCGH6AkkJERNxWTGjBlUAdcKCwuJQ8PhMEzwavWkJ6aC                 bdCobB7IgEBAmNAjcjAqxgFgxRmEAzLju9EoDO39EBmGEowercCQrtEWhTG/UCh01FFH4bMAjj16                 9IA5HObOnUuncO44ZAnRsDNu5IwcOVLWyx7CzaEMPi8DBfwxDmAWgwAY4em0a9eOQ2JGXEWGEdBh                 qbBBLpmUp/qJJ55YUlLC4OtKcf/+/TXmkJqGAAtOMYl4rxwC8ewlCajBtNIpPQxQVlZGyQ4dOowf                 P57IACzjEE8WNNdoAEmMM3TkkUcC6zQBT4YdDrjwTArLlSZL4+woYZIoLNlY1ZgLekexjIwMBhx8                 1+NQc+bMoQCTpVthTMe0adPKy8tBcCbLPgihhwRYWUmDfdTF0xSUI6f1K0kD8cwUhSnDxCEbrCB8                 aordcMMNsCWfYWR+kRa9pTDdufjiixkNpgMNYd4POOAAGNIFhpoCl1xyifg77ewMbQmUzuaYrmPE                 HGLUTYSIIM5ZZ81NSR0UCM4Ix8s8obxg3ADiFkBp3ifkDZiXmXu903EnI/ER++w36psfzNNFuIL1                 5o25BihhzkTU1xoNABxq65pZWjauT/TpvWiPdieeeXbuBkbSiPMLoJR7S51lHzTtd+D0DO+4UKQk                 w1eY3bW6vWdYj8Mnr9tsfrXzw6bEnYuf79u/4MzTCwrz7/viC+NFbmyu2WQeKEo8+9oP4eioSGTE                 U0s/g2stWcn+GnL0Q026t38LlK1fs8awhDKLvLH8dC8LRlkkUuL1jR41+mYGgdgfbjRjrsg6TTvr                 qmmF6ZS+aqVlOSV0AiXRQqwXxwpVwIm77777pIWUR/sBUNQFk8ChII5mXQV6yIcJik4kQnUKALLE                 UGeffbbucnAWaMOeLTf6jlXj36HxEgBtA2GFzoAdsRuWjO6i67JhCFeRfMSjAJaMC4nisqrLn4IP                 cMmyj2zYG13A+ZoyZQrrP2cxGBrF28KpwcKFCFBlZSXYhCkqKMNbwTPS93CwJfzBhQsXkgbOVF6D                 xmjQEfaYEJJgb4SicAZNSIOPusGFT0dFrSgMGr2jvIUJPWUNgOqQfLrACAMuuIpIi8wffvghPib9                 pToDuHjxYgYEHNED58uXL2edQH66I9cJU5f7w/QxNbhFVNeVZcrIhkEc2sK7j8ViYCg5giqd0gSB                 bgxjTk4OMlARDsgAWwTGkScEASNonVMSG8ccuKEMfZck+JK4/wIUtIJRAoDIty6enQKmXmlAilWZ                 hZCJowrN0bvDDjvspZde4izCs1qzgAFhnCIcQUJd7YVg8swzzzALVEdmYgKWEIIeTtmGEJViJNBY                 2DJTBh2dr3Uzd+3bt9dVJmwBiGTAWbaF7NAVV1xB7EK76BVmgvbiINunHfD9YYIFaYR3mgxQIiXk                 HAoRWoDSzBN2DL41NzYllq9IHNxjhsc31uPPiWZVmh8LBnIIKh1EMNDgBkpcvFCsNBiaGYtP7pBy                 9sjR1wJvRMIOOjDfWKAxQodMi6YhgGx94tEHf/Jn9Pd5Lzr2uCnfYWWSCB+yhlkk1bCpfiP1N9Ql                 Fl31WoZ3SDCYGwgVRzIr9kgdG+s89q77lhsMbkyUVd3arv0R8ejF7f5+QdQ37LRTy1589WumYlOi                 Zm1jonDWvZHY1D126//A/e8Zrk5/zSUHuprUTDXs3pJAeco/S1LSRoQi5f5ARTBS7ovmBOK5WwPK                 FO/UrL1mpXkKQ+FK85uc9AF33vUJHq4zDi30c2qrBOIQPuC7YZ+4mZgNE48VWeUGs/DOiK+BRQ5R                 XMroFJPLMo7xgxEUQ1mpBQlQKIb+YVGySeWoGJkQmZQEp1BxXC24IQB4h3Oq8trDBPtEANqiPKaF                 DKquMvBHNphAJNSc9pQHSSFhgTKpiwMFSlK9RT8NwL3xxht6yE53KrAT0hRQLYgEdemFZEAwmoMQ                 jCY4pZJUgT8CQyRsEzSHAVMdIiHhOQvBSu6PLJxa9OW1116DJ5IDl926dVNIiyuNz4gXqZEkB2IS                 CVc5xQoBc4SBm4ZIHVeCLiMqBZSDtBIYQhi4cRYOEoxijIm0AlYwVIu2O7QiOXFybSvMPoiPMOgM                 Z+2wk7BttUkAmUaMbtp+qS32bY6nlkPE0+Xa4cOHsyytXr3aXd0KpmFhBDRxjBh7CIFVgA7SXzSN                 JhgBSUsBAgX6SF24UZcEZyFGAybsaYJDMdkJMkD5y6GB1y+AssmJc7HtRx5d3b37VI93oseXD0AY                 d5LQuxVQOnE3YBGOm1+hRGM5ocjIHj0mP/zoF8Dt5l8AZXJonAQOVlOtE3eXl7yS1n5wakr/o46d                 /snKpDhsDXVUoaONG2s3o6QrVyUOPyY3FJkcChUZAaL5aYFR3fYb/c1Pxtl8+oXl3bqfEw333TM+                 LdBhcqdwTmqHs+ctfGRdQ+OmRNOyz77bt+ewdinjvN6Ji+9513SXJn7usiOUbfjn7d8CZRuhd0Zw                 ZrRLZZqXoagOBKdGooOWPv0VY9rS2o4RSrC1ySYf62VZls6Rdis9Z7EizpIgE3LzId+qNURFd3XM                 Uvk2AUSCUPPnzydNGbUIofpu8xYEQHCz/ElDSrdq1PKBMAwjpSMAolIS8yMtvwN666238CPi8TgW                 SEWVdBNVEIB8VacMe9trycZZGEKqbgVWLciyRR7l6BA7pF2lRThlLB74L+rFrbfeihNHiKoqNC1T                 Z3xsK5ySVDoUkcn4IJLNlzBKQxyqXzqkGIVhrkzI3U2IHM5abiRoVE2Tb/suIr9V9S1JdVuV2dp4                 WuYaFhANl5DgA1WxHGwZJdhLSKpDJKzwEDkSu1UmAGp1jwJqDqIYhbfdo+2h31kpISf9C44OUDYC                 Y/WNidz8xbHoWL9/ZjBUYT52GC8NZRoscN605gCls3kdoAxGS/2h/FjmzN3andev/8KaukS9E3fT                 AJjogKNtiLR5mhCXcdP6xJmnXO1Pn5SROrLnEVOXfVib/FiD2YxsjA2lsZWHHlv9913PjJtnJ4u8                 /gJvcEowc9iU/Ds4RYF33//ukJ6DghkXxbyTukYrfe3G77Hb6Zde8ZTjUSYuu+GR3dNO9vjy0tMm                 3nPXu816MMiRDGoZ0mSrrm1bQLnVmzmxfH9mcYa/LJ5V7feP33vvMR+vSEbbhpKNGv4t7bdNduJF                 UlZlMmut9MDqkE65p1jUqgqHW5YRUezSSy8977zzgEXC8+uvv56YGpQkjPr0008lgPbbIAq0klDU                 pmyQzZTqo+h4BLQ7cODAW265BQxCEgI0xLDXB3aI4L81eZKprRN9AciIry+44ALiX4QhiNadmT//                 +c/Eg+Xl5UTZxIaEqMi5Q+IhwNYE23KgyHGDBdTmYLYiymy7GGdbsd0aIRWjQWFH6m2NJ8U0Duzv                 uusu+/QS5BamTSZu2nYrIsnTZhe23fFtk/m4WDKZpF+0aoHyp3WJE08q8KQPD4eL45nzApFZQIMv                 krcFUOJYFROE+sw7xnPD0Ul/+/spxWUP4JCu2ygsYE8T7lbMjY2GpkbKPP90c9dO+bFgccA/rdNe                 I95cVmPubaAkjoyU4T/eyNc/JoaOuC7dMxhhgn7zRcM038hu+49ctqLux5o6rHbDxsRVVzx94N7j                 wunDQyljO4YnTZ14z7L3GgDKrzcmeg8s98X6R+NVu+8+ZvE97yMLHmXSqTRd1oBKSPe2M0AZyCrK                 iOT7Qub7tBmeEcefULBugwOKImdE6BlbMrkVQsOkENJjO2uae/YQBSDlWNIpUTKLzvzScdBZp3br                 6uSg2T7n3Qq77LKLrkIeddRR7tvTEJZg13NEBUqshG6CufEnW16TA8FfCTeRKQtkrxyqHHfccX/6                 05/0KNJJJ52055579u3b94svvlC7pgMOqbwlddOdT9rdKNJCyQPnbDLlIjIpo1MSiXCb+PH3v/89                 XqRujnXt2pUVZdGiRcAlh507d54yZYpTOxmnQyA+e/XOds2S8t2y2TQJyC2bPWWJs60KuKcY+VvN                 CKfUcfKR0HZw24SEtpjTYOsq8BFbEWkrA44ee3tIXbi5pRI3h2uSlA/Bxx6ScE+rmwlpiITNcTPR                 qZ2jVjdzWpMDlOYJytVrEvvsOxJHLxwqi8cvCUZn+yJF3rD5tWKbQOn8FiXXFxwTzxz06GOrAMHN                 hNbJiLtljpNdMEBZj1E0JaZPeiSYMTXiqwgHCzpknPfKW+tNN0Eup9ebmE1AsCGx9PnV/nCfjh1z                 fZ7iWGROdnZZqqd//2ELmQe4NwI6hPe1iZefXXfDFe9V5C998Zn6NavNPaDa5sSTL3154KFjPKER                 Hm9pSur4+xd/aMQxt6scrHTIGVwOWm07CZTpYZYT8+C91zNs5MhrGpwHpJxmHK7mwIyM09GdJ2kP                 qiDNkCbp1HaSOLj12GrbihUr3n777aVLl7700kv6Pa9Ilg9Ry62FkgEiXwytYJY4VBUS9pQ7LUIG                 XRak8DfffPPcc8+9//77H374IUEcmRTG/AiEnbLJ6rTIXjlKi5Qjsl1zk81MVnBIOZa+bXkq8Lvv                 vvv4449xLV999VXGBEtmNEDtTz75ZNmyZZ999plwAYIt1CY3SPlWTptpBm6LGVS+lVOkzOSBiwy7                 LXotarP8ryF4JlMuItMNmnZAmFBmE6JAKwm3Rm7+CO/GXxF82uyXm/92ttUmJYGSBn7RRgtD4046                 n6d5/vlvunYdEfRNDgXKA4E5AKXHfHAxPxgp1OYCyhK2QKzEG5ie5hnap+9V3/1gLnHCrNkEvi3m                 RBPJVgxQkly1JnFoj4KwNzeQVh4Ll+2ecs7S579R19jznyFnaf5xU2LepY+3Tz0vHsv3pJf4veXh                 0MyOXUY/8vQXzENNw6aauvWAsqkCJDUYxDQPdjvPTgKUk6bfEIxevEfqsFC4OjVtwl13vCO0AiXN                 rxt/JnJbbTsDlL54AR5lIDLH6y/Kyhx37XVvmEfMGQT2bHA1h/8eKJkd9ACyk01arkrruduK1lpq                 pS5b0x7yxZZW3AzJl/brZjRl0HjnTBusrGCtJBTZTFvRzcHaGALo7rksDTwSMlLAOmv/luAssodK                 uMmd6ZT9xaHtJiRXWn2XO8ahnR3dtYB0HwOipDrr5gnZw1b5FFZOq3yRzaRFsbXU6pCSbg7utKhV                 zpYFtiSaMCDnOL9KMwJtVrSZDJdFyVZjJYLPtpVWpBaTBw7RuhJws6csZ2W6G9pp2hZQsrNAWVJy                 Rzw+MBbKiYSqM7xV4fh8gDIYT6JkC1AW6uav2cKF6f4pwcjoa677mL44QInzj960CZQgWOL6G56M                 Bodmh8v9KVVZsVkZgb7X3vKqcUMZVuRwamIWH3+++azzi6Lx0aFQXsg3K+ApT2k3EjheV2fO4k5u                 rlUr5v6gM0ZNa77+CncSv/jtdzcc1HN0umdgundKx06Xtms/+vprXzDRvSOMuVL5MyFxq21ngNIT                 zTNjEpyV4S3o2bPkg49QETjRpHNDB65mEPDLzAiY5Fao9QS1EB1Ew1opmdUeSLoiksYorbNb1m1F                 61seAFq7xcekbNxt0UrIxSnbqPItkQMTyH2KwhKsVRpW7nCevQ6Vhmy7ttg2SJwdoQwpk8SW8myN                 bLuQFVIECsi5tmXkBbuJcaYh9tvTlqVWDbmJU60kd3eQtCh5vAUSSRKJlCzqUPL0TpEYuqXSHDE4                 tnW7eLjb4qwt0IqsVPBkeN3F1JzSthhEMdKcbUW2wE5Q8mZOmyyIX3XLu74pcfzx09NS+mZGCjNj                 s72B8ljHuRlh8wlvE3r/wp0s9hqwKPMG8wLRiXvvP+n1t5rgQu/Mi84MIrQYGw06G63wf/3GxIV9                 ijJSB2eFKz0plfFYlT82LKfkTgGluYSJrW6uBw0fWboi1XeaNzA6HCqJh+d16Tiv3W59585/dqP5                 9bS5AIp/urkGZwfj2VDb8G1D8w/N5hn1BAWq5y/J7DQ0EptsxA7N6tBh1KWXPo6903sjizO5IA9T                 0LL9gowMSaAc5TzuUxaMljpAmQc+OkDJ5gAli4cBSvN1Cl+sxOM3r6E8+ZTqOsJ/402iPY5TSQvs                 k1cklP43ZDUgeewilEYqQno71cLycZcnsWXdLWHRTaivONiKyiFBjo3Q2yRbEiIhS7DNyRKseQiA                 2KuKhchWrW+bVKxVYR2Kj3JEHFrxEIMRlnPEOEg2C462pAoonzIS0pq0iMKQEqqlhNJbkj2rWnZA                 IHJg7q5Ijoq5iQLU0inKuzlAyoco1kpUN1HAJuAgPmranhLZQ+tL2oTKq7qKkdMmk60Rhd0l3YdK                 tOLDYaucHaUtr1EiLu0CXvW1jT/q6e5PPkl033Ny2D/dm5ETjZbGOprbOGmBEvPqIPOTmALzIox4                 XiBWFIxVBCLV5k05kem+4IDcojvW1Rh8gYh/HSDgH6pj3nOxubYJGOYYl/L9j2qzO/YL+adEQrM8                 norMjnNSAsP7Dr6ijrGtT9TXGfRaX2ceUu89YF6a92J/KDcWmR32V3pSJx584LQ3XltnWDVvpoW6                 WtMFjMh5q/na5sT6RvN2jMT3mxIHHjk5PTQkGJ0BioUj1R06jJi34FFahzkbdRvNj3oAAlS85REe                 I7Mhc5bJbkpc0G9++w5jgqGqcLSCvicfihJKmmdIQUkDkc7V2xJfsCKaOdvjn5buGzhkxBXmxSL4                 tub1HGYcfm5CmxpyPVgDaYItPHHKfRayYIEiWu2nlk2TsDrqhjnxUXXbitUnKS57kc0nwSGJVuak                 Q7cA5MBQhSErg4iStiNuhux1KFFtKzqkiiSBm6pbJjBUGaqLgwpbDiJbXvlWYEGzvdypfMrYju8Q                 aW1gbCUJJIY6lJzuxG/0H06tgLKp2fzumsljOvEj1zeYZx8TTz/zY6fMaWFfod9jPo8VzTbvnfQG                 K/yhuYEwXlWR8+uUHLwnT7DYH6wmLA2EJmZm939wyQdUx8vDZMyPuVEVg3jOhVjHiePA/K6xOXHX                 vR9nZg0L+GaGwrN8/opQrGyPjBGnnjV3zZdoK/pkfkOJWM+/9s3+PSd1yBgeCJXGo3Pi0ZL0tMET                 xv1rbfLHoAZ6nHvKtLAh0fRjwnxqYrOuTj7xwtqs7qNTg6NC8Xw8wVCgPDV1RPW8hzfBn2VBcia/                 MM6RC8Uc4j99AYkv6De3fYexOKRh8+Ck+YWiwcckUBrP2gAlw+IAZTA8x/wWntHoNHTR1c+qIaAy                 2YQbjp0NM7amZc2ePeaKpbnvWpBWAfLxsKwLxqH14Fqt4RYjlG+Lke9GMdABC9+2DVufDqKwqiNV                 mxXdWEPaVhSRI8wSZAtQJCp71VWmSIWVb3vUitwtimBuC4ubysBN+e4mIHcrrQTeHhI3u4ePWhGr                 Vm39Bpf/+dQaKAEyC5TNiY0NRL3NiRtvWhb2jwMow8Ei8ynB+NRgfCbupC9UbR6oNLduCvAxAcqM                 QJE/VBmOlqZmDDuox4SVawwYAECbN28yoGjuLJOBxpjLDeggeRtrDVaOHnt9JDLM550aDFXgrPlC                 RXukj+l5ZN7Klcb3rGuoqU80b2pKTM67LsVzYSiW6/WVRMKl4cjEzMwBDz203D7fU+98gAc9r6tb                 m2j6Cfa0ZX462ZSYmr84NTggNTDWvPosWhrwlaZnjJiz4FHCcs46z8gS4IMdLqCEnD07NkTfUaAM                 R+d4Aywe4w4+dPr7K8wlAJhsAyghmQ17JTAtJSytW7fObWkyaSUsFggEwS9KtqpOR1vFwoIDiPJb                 ohg5IhVTjs7SolsS2xAFJEmrhiAroeWmBCRWIForHFEXxIrCYDSHVgZI7VKMuqwflBRPytjBMfrW                 0pBpssXjZm8XCTIpZnvBKXJIuNvafrI9tcubm+BpB0et/Eb/ydRW6N2MU9PgvFu3Bi3jX3nlY570                 ESF/EXG3eblkZApAGYxWCyj94SJfxABlIGaeM8edjETzPL7BYyfcvH5zYhP6SazZXGewF/BpdP4B                 ZA3mveUwZ3vx1R/33X+0PzjM450SCBWHY5W+UGFaYOpe+01+7wPCf+TYuLGpftUPjYceM3rXDn3j                 WZX+QEU4XOgN9L+gT+War1E14NC8ALh2cyNJtLShYR3Qal5z6Vxqfee95oMOm9reO8gbmRGKFSNn                 MFCS4Rkx/9LHMQsEQqktUDYrNJb26vKls1FsB4Gy2FyFCBWxbJxxztzaxgTeK0y2AZTYjzVLaz8k                 IOwKs7dnZecckslZDiH5lSovBw2SxbphlLPsYUh59jCx6ADp0HqsbRJlaE7CkLBYI1Cwh5xiTytq                 EYbKgRDGFoNsvojy5Kg7VmwSFlyoK56iVtUhndVeckLuYpatPStUbTUUydSOk7jRip0Ite7ughK/                 0X8+tQGUOH3gWpMJvc3D22u+TfQfcGV6yohwoDgWK/OHcr3hycFYbig+yxcyrzf3BAszgvlgZThe                 xuYP5Xt847vtPfmp59YBgqADSGVAgX9oiAmMcVIBnNqGJudlwE2JyuolaekXhMLj/YHpwEoks9y8                 Oz1amLnnxGdf/KK2sWlzs9Gpl5Z9E8q6wBOY7PGXRaKzY/H8cPTC2+58FWg0t5waE411Ri85MnG3                 uZlTb76qAyw1JubOfz7Ve5E3PDGcVQyQ+cPFOKTpGUNnzX2IqJzaGI1zz+m/GSh9gcJYVsnu7fuO                 HHcrfismyPYzUFrWLZsM29qS8GjJkiUDBgx48sknsT2ZH6Sf01pLFkJxlkx8rpEjR/bu3fvdd9+1                 IXkrm7dWas0YUnWI9EsOPfTQQw8++OD9999/3333sX/ggQfYQ2Q+/PDDCLZ06dLPne8lQKoIvffe                 e2+99dYLL7zAHkKMV1999Z133nnxxRdff/11cjgkc9myZR86775FGMkj1LZ8vmv5ACm9oPpFF11k                 v8HCXkNh4ZJM0rZfdgwhmwmJ1Zo1axD7008//fLLL7/44ovPPvtMh+vXrydNzkcffaRWJJLqbj9R                 xV0LwYS/NuEm24Xf6D+W2gDKJvO8DFjWUI8qJhKPPfn5/gdO9HjGhQGXeIk/kmPeZhbLDcYIkKvM                 PlwKVnrDhc5D5vle35TUtMGnnTHrp42GC7pmXDrHszP+k9E9kHg97mptkwHi735MnHlWdYfUfrHM                 maFoHtATJJAP5Zvbx9EJTz2/mjKo/IamxPV3vLFr6lnR7JJ0T2koPCsYmtZt78FffmWa2LixxjA3                 t70dR7hhrQFKIN9BvE8/SZx8cmW7lAGRrMJotvl0ojdYCOinewbPzL/5pxpzlYE+NzY34Uc7ENaC                 YtCvAcoIPm9uZlZ+h7Q+s+c9t8l5q7n5mpj53zZQyorcRg7dfvvtv3Peoga+cOg2e0iekTU24OOK                 K674m/NmLes0kcBuYU5C+GLxkQQMqU7Ctkt0r9eC/fnPf/6v//qv37fQHxxSWm+RgfQmGBF84HbO                 Oef84x//+Mtf/rLLLrtQ4K9//euf/vSn3XffHW4IRkUOU50v6lVXV1Necv7444/FxcVjxowZNmxY                 nz59WBumTp2qV8xCej3lZc4nqjUCFnFIWGBi/8EHH9xxxx0333wzOCuws8gLvfLKKyeccEKXLl0O                 OOAA9tBee+3VsWNHJWKxWCQSoe8HHXSQ3gO004QkGmrIRt+SmVFiqO2U2Wn6jf5jaQugxKFMAmXT                 pjrzQrSFi571B/qFw9MjkZKQ+aZgrj863dzqBReSH8wxb1rDR/MHC/2hmcHwpFB0yOz5z+BA1dQb                 FKtvqsEpNL4kiuEoc3NiE3DmvAQjcffiFZ27jPb7x0dj+ZF4gQHi0AygxxcuT/eNv/zqV/D4MIuf                 6hKV857fpX1vnNZguNrnL033jD3+xKKNm81bwmtrnZelm3cdwXmDA5S1evyyfmPirjs+CYcGhaNT                 zA8uY1XRzFnpvrxotDjdM3DcpCu/W2dwiw2gdO5H030zAoYhtH1A6Y2WmZditAbK/LD51NqEcGzw                 Pfd/sb7WcKhrQiz6TfKXcbchMzq4ivg1YMHq1au///57TGvt2rVnnnkm2ARYYGA//PDDN998g2cE                 EJDGCL/++uvHH3/86aefxl97/vnn9UWd888/H9fpiSee4BR+HyBLgWeeeQa37tlnn33qqac4pe80                 CWKs3QpPO3fu3KlTp2uvvfbqq68GeS93iISIzBtuuCE3NxdY0W/1kEccQIfjnY/NDhw4sKCgYOLE                 iRSYNGlSfn4+iWnTppFDR8BBMFdfYRThge6xxx7g6b777nvYYYelp6cDqeDmTz/99P777+s1hUcf                 ffTFF1/MaOBdnnfeeXBjiCT/G2+8ATiOGDEi5Lwq8cADD2SUWi050L333stZv99/yimngJhHHXXU                 SSeddOyxx/bq1evEE0887rjjONTrNfGmKU+nLCLvKAkoLWJec801jKdQG55kCvEtnv5G/7G0BVCC                 C+bZIPyypp82mNC4pGxJWkb/eGZBCPuPmO8pBuK5vkgejqQTdxcHouXhWKV5ojBQEApPz+40ufs+                 o97/yLDYZO7ENDU04ry4vCcDBzW1DevRF8pMmXp3+5S+kWieqR4HH2ekB6cGTaI8zTP55DOq3lue                 +H6Dua80e+HHab4xnkB+ODYrECpOSx/X7+Ib128wATNcmxoxiY3NCXzVDc6T7bWNztuKNq1NlBYt                 2fUf53TbqyLNm+sNlWV1mp/qyQmH8zO8g8ZMuPyH9Qa0DG7hV5qlAVEBSgfFNCBJwc19qB0Fynhm                 XoZ3SLfuo154eeNmJ+SuM8/vO0DcGigZliZAAXwBDrBh7PbUU0899NBDzzrrrKysLLwwDJgcLJn9                 EUccQRn2IOCiRYsAHbl4FANSSey2225kKsHekn6MrJcY9ujRw7qWIIJFOvbAzZ577gmiTZ48GZ9x                 3Lhx48ePJyEaO3YsIDVo0CCYU4byoLnh4rhv4A5NP/fcc2KoTPZu1+nRRx/dddddgUvSOvvmm28C                 zUVFRSALFfU5BH3vZdSoUTDce++94Yyvd8ghh4CDOK0pKSlgKAVAnAsuuMB073e/A23xYRkZImhO                 QUJSOXGsGfjIeqM7mRYEOSUx2LMG4PkKKHeO3Niq9FdffYVUaWlpLznvcBS1uqT7G/3HkgFKVESa                 ZMixWKBNuLCxLtH7oitTUocEI7n6wYl96aS50hcpC8UrU714gtWReJUvmIc7mZLee9S4683Tguic                 4cd/ZxMcmK2xqbkG321TnbndfPKpVXu0GxiOlhIR+8MF3shMb2SGuTUUriB0jWeN7bbPuJNOuayo                 9IOZ+R+l+aa0S50cihUT0uKBduw08647f0x+mNvcUv52c8O3AGVd3Q/GK2wyd3jw3oYNvjqtQ7+s                 7KKUjJmRrNkdu1zy993Gd+8+d/d2vceMvxKgBLqAbEc6GG0XUAaCVaEIS4UBykCsqE2gxJ3MzJq2                 yy5njRl/27pNifWbTX8B79oGzANmbQDlmjVr5BDhWGGr7LGu9u3bd+jQgT3Url07gECeFwTqXX/9                 9V9++eU999zzr3/9i5ATkKU6ntpdd9116623koMXc9111z3yyCPY/4033vjwww9TEsK3wv0UOgCO                 AjVZNZnRaBRcJtTFE5w9e/Yll1wCZpFYsGBBWVkZ+8rKSk6Fw2GA0qKtuOnjEF6vl3gWlxOUxz8N                 BoPxeBywI7wlkZmZSRkwV7Xg8OGHHxIC63W5CPPyyy9TYObMmbfccotgndYpKRyfN28eOQAoORA+                 OGdzcnJwS4FgTh155JF6E5p6pD2QRPc5q48HQJIcnjBRDsSgsdjcf//9AlP786QdJfmzn3zySZ8+                 fXCTIZoG5cFHLQZqdBtAqUvMCIDzjrfLcOm39nAmejj99NPp5jHHHIN3zILKXp9JEFv4b9iwgZ7i                 fTNf5OjUbbfdhjPOMoxiKFMCqLPU0ggTbQwdOvS0005DeQTo0hCdJQcVYqLtp3J0lj0r99y5c+ky                 IZEKf/DBB+jMueeey+LKQkWO2mJxraqqwg8gSmDiJDZV6DVBD/EHqx2LMQNoZUONTz755AMOOODs                 s8/m7JVXXmnXJCIn9IGzRDx6JaB+ZQupjCTcOTJvD/pFffPQDn2uIWqtbUi8+U7DkcdUpGWMASIB                 SgMEyZdOCihLIlmV6aFC8ymxUCk+WjQ2qUvX4XcvXm5+jYNkZnMQoQUUms03YRsa6s0t7/WbEs++                 +MOee030B6aAkiCjz3zOIResdICyDB82JX1oJD4hEJye7smJZVf5QoVd95ntDU0PxwppzueZ3q1z                 3lVXvoc6OU+b/9BoHpysaWrahINp7kg1JNZ/nzjv7Mqgf1AgNJnq+L+pGXmZnao7dJgUDI8aN/Hq                 n0xd3XRic0Q1WJmUnq3l/04AZU52x6kZnguqqp9k5XBuLMHHOOymiZYxSW5Ou+gW0IMBfPTRRzhE                 n3/+OR7Txx9/jHmgLtAKh8iBli9fDkTqN2GyKPQJJAKS9JEQoQB2gupI11FolWTSNfU6hGQtcrtI                 AGQAXHl5eXFxMVZK7AxQou4EziUlJeRMnz6duBjIJk15askqIKwX9xZVBubwQ/FGIRt3Ex3DDQcQ                 J3Hw4MGqQvW3nFdMwlaigo8sEkTZZOIDZmdnk6DXnMIpY5RYNjAnp7YhYnBwgcRrr71G6wTvDJpE                 olOMjPr15JNPAoJ0DecUS2MP0JAAEeSoYrfgNU0DuJS3P7nbIdJgyj6BAPARAg6YHRKMA/mMPxMk                 CNgGffbZZxdeeCECE2qwwODmy4lmEFgOzz///P79+3NKrzHWzS56TdMAHJMIphx11FH6NBhSjR49                 GiaoxPHHH89Cy5zaWWPYGSJFBnPmzPn73/8+cuRImmZtBljVF0nLGpmamopIzA6LMTnytNBGJpRG                 EZImVjnf4AQZyUGGvn37skbutddeDzzwAIVRYwafxQPJDz74YOIDkFdz9MMPP2ACBEygLfOOG/7E                 E08IRocPH84CTLsEFmA9iq3WCwoKkIelQh/LQ7vECrGpSIF/O87bptavWWsyv8Shz7X1jQ24P1df                 /3YkPi7DN91ByULrTvqjxYFIsfkJY7zUFytN9xb5gyWZmSX+4Igzziz/4ScDAy2gkJwGh/DxELeh                 bjPWmMDJmjj11jTvwEi8AGTxhSoJ532RIhPXOy9wC0WLuu5V6vNP9nmK/f5Z0fgCj78kFM/zhif7                 wzPi8dJwoHy3v43Zb+/cispHCGwbzdcicQ1p0WzmS+SNiQ0/JiaMvyY19exY1qR0/9RIdkWGPz8c                 Lw8E8jze4WPG/wyUhN4OvO8MULZ5MyccmRGJjMjMvPjuez4BtGmCZcgRzwyC5dtCpl08SrwnImuO                 W03N1kjoINLXEWbMmCHFxQ4BXILx3r17CzQhKZAKQGiSHB/tRRgPji26i3/arVu3/fffnwQK6vF4                 evXq1bVrV/QeWMEIaQ6/kiqSFm5YI3CTkZGBSwsKQ2ANPhHaj+V8++23lIFwhAnbLVDSIqE6jeI7                 YxtAld7tBrKQgy8MjGKcPXv2xBGmAHXvvPNO1YWErSIQBJhDYAaz1RjSR33nC/49evSgC3QEW6WP                 9IscQJM9HaQM8rvxbidI3Qe44QYxjHqNJuhmZw0DtnOxJVEdVGLl03vtgEhAByjXWU0lBAcgg8VD                 H7pAYGrhy7OkgUcwIRMFWLJkCZkEB+oRPjgDbj+TLWIk4fbOO+8wHUwWtXDeCVwuvfRSDXJFRQW9                 wEVlFWdxEgzB4bvvvgN8wS8WGE6JJ1VY226//XYwlJ6SDgQCyE/3UQmmlTlCGPpFXWZcF+UZdr03                 Hg7MOwowYMAAGJJPMZYZWkQwCn/zzTea4ldeeeW+++4jh/RNN91Ev66++mr3+Nj9ztEW1yjlUSY2                 A5TY9uRp9+62xyBzoybKZoGy2PlFs8nxhPICmWV4lMFwWVZ2cYcOfUrKH5Q76cAC2y+BEgiu21RX                 ax48X7UmcVCPSb7gKH8kx0AkQNmClcZjjeYHozmxzOke78TM2Nxw6BKvZ7YvWBaI5gQzJ3uDk0LR                 go5ZC7p1ubTdbkMikb53LX7N3FZuTmxyfh9JW+brETTYmHjssc86drrYHx7ii0wJZxVndpqV5s3p                 2nXe7nv0Hzzsku+AdXy8FvfOEdLl6yX/GxTdYaCMTktP79PzkPFvvLWZMdlcn6hrYECAcsejdDXh                 EO02/PDDd6gFvhjHsiX0QLYk4lAEskBORWP/EEoDgqDTeJqUJIdTKCiWyQJLGj1Tpt3DhwSkt5bR                 EEZFXVihmlgUMsjMUEHWf5BRcageTsIIcRXxXDgk0wKKQm8id5AIGAI399tvP2LDww8/HBgClTjs                 3r07nh2xJLXUBNaCE0ErcjZxS/FGMWMZP83deOON+iYX0H/zzTeTSV13XEwHsR+AEg+UhugFmTCn                 X3asMDzAEbbAt+0+CcqwFxHVnnTSSXj3bgTZIWJsGUaln3rqKWQGu9njo9ELRltnEZjmVKxNwr9j                 9P75z39qiCiMr4crzVipR0hImMlZpkbvnGfKwDgWErCMWcOtFsAxMjiG9lM29Je64CZTYAvoFIR4                 jK2EZBy01pLGPaQjBBlff/31e++955RN6hX4hesH8KEMBEPCLAg+tKU0hP+IqEoL+0hQ4OGHH8aH                 1XvskUQCwBZurFu6RENh1Iklwe3mwwSyTegUg4YWSc8hdcQtxo5SEihpSQkHJZqbEhuNQTcl+l58                 zS57jAhFq0BG8xacWK55ZbcTdDtAmZ8Rmh7IKglFK/zBokg0NxAY8MwL3xOzO/4Z446gPyOQw72m                 vm4jkNPYkLj99k+Dof6xjtM9wekE3Z5wpSdc5Y3MchAHoMwJRCdHM8eneYb7/fmx+LxodH4sbuLu                 SPaMcOY0H02HSgP+Yr93hidj6AEHj33ljXWNTShKg14I1FjrAGWTeeNGYcl96YEL/bFxnvDUUKw4                 3rEq4C/0eEedd2H5qm8MUNLfFjHNk6TJA+fY+b+zQJl23oABC9EZgLIef9qsIAjHsGwJlLBv+Oyz                 T9A2DMMcO5agOd4auZX77rvvxhSJR9AwDqX969atI3QiRiaNosgsxZlDmNupVya6NWjQIKCEpRtW                 QBt7wAuHSzeFhHonn3wyboWKEbTi6Am5IAxVX4UEJUFM0nAgkoID3EhgrgqdCJAxGysAAr/xxhsc                 4o9gjfpyHoSrQiaQsWjRIthCOLbEmDaybkVAIWVwRTFmDgUx2BiuKC7VM888Q4L9m2++CVwSBhIa                 E8I//vjjeG0UIJMcHUIcCnB3lAQB0LJly3DG6SydIo5Wpr33BbknsRW9/PLL+NFVVVWk6SwIi5/7                 t7/9jb1ynFIJ3D3cf8aNNCsHmEWLAAohLW4a0wT0c4q5YEakGFISJo7pICFCH9AKrdDwYdhRmKef                 fprxhBvpfv36sc6VlZUxjyxazCOgTGHwkUX63HPPRXkA35SUlBEjRoDgklAdVLsIgM6QEMFTSx3O                 LzJrwaZdKr777rt0H6cBYCWBYEwofUevKMzyjH9ql0lGmypoL8XQeSIGFiTy7Tjb6dg5SgKl7McY                 LcbcANps5Pj7tYkTT5qVkj41EKkGBX4JlGUmGDcOZo4/sxCgTPfkBoJTTzt9AQG1E/LWElv/AiiN                 OTQ1mQd3zENDmzYkLjh/oc87GMiTl+qNVHnDs9nMjyNNAD7FHx0dzR4RiY/o0GFUKFSUFZ9j3hPu                 mxrOmhmMTYpl56Z7pwVC5vdCoXBOSurQi/pdvanG/LymHjwzLQJG9fV15sXDn69OXDTo8r93OM8f                 n+IJzgxGS7yegnB48mlnFKxcZW7zM59JGUFEgFYH5lj/dw4op3g858+dt5SVjCZgwc4Zk18CpdOK                 yUk0fP31GlAAhbY2IK3dBrGEShGHDBlC2I6+or4sp8TvBJIYCVpO7IZmk49VoKnnnHMO4U95eTm1                 mHqrrFImoIGYCOADeW+77Tbipvvvv589qAGg3HLLLbhIRDfmufP77yf+Xbx4MVa0cuVKdFSohzdB                 lE3CorwSblyGcFWs+mK3eCg4XMRQX331FR2haaSS5WAVWBFYQKfIB2RtpxAMPkJD+MPn1VdfBZIw                 JwElRKO4mbjq1IJgpbtDeq4T7xWPiWVgl112Ac7wazilz8+Sv8cee9BZ8dlREjRAkydPhifyf/LJ                 JxKSTGbN7Rm1SXfccQci2WspEOOPVHqeFP7MHSOP8PrWm25f4E3TFrXoNaOBMtApYBTfnC4PHjz4                 o48+ItS4+OKLOWRPFYID6jJr5HNo/UFo2LBh+HHkoJOsjnCeMmUKbFEGBhkg/vDDD/EE6WCXLl0e                 fPBBVqAXX3yR1RSv3DrC2uOQIirawiGTYtcw1jb4EECQRovIRNS99toLpwG2w4cPV/dRDBY5EBC/                 uFOnTuFwmOCJ/FaE88tyDmjSBI2qLsLbMdwJ+uVdb3QYWDM/czHvJXv5jR+77zvZFygwP1UUUMZz                 wEqBgoAyYL6rlQsupGXkRGLTr7zqk5b73Rudl/dgwL8Ayvra7wDKpvrEyy9s6tRxpD8wxh+eEsw0                 bx7yRSt9kXm+yAJ/eJbz+vSJ3siQUPyiCVMeuLDPrfHMvL/9bVQwXNKxS2UwOsMbGR/OnhLKnNZ1                 71n+UH5aRh7heUrKyLvv+qiBcaY3pjnju9XX4+Aa2H7prea9e07zxScQ6XdInx6PVXm94085LW9L                 oPzv8yinhEJ9ljz2VQPrBk60GQlmC+UAHdoGyo8++gAjtxehIMzJguaW9PPcJRKgBiEnqo8hoV6k                 MQ/CWx3Clr2bAB2qU9FykN1KU/EU8OmuvPJKYr1rrrmGsK66upqcyspKMi+//HJ8unnz5pEPHqkK                 SgnD0tJSIBvrQr+x3v79+/fp06dv3744j2RyiN2iyngcFMNo4SBDokUcgfvuu4/ADfEogyeVl5eH                 0nMIopEGOmkLNwFj09OOOC9EbVSXAJgH3gfGjPeK2UswDJJ8OOMnsgzk5ORQEVflnnvuwbV8yCFc                 S4wQ46fYE088wWKA10aBRx55RGC9Q2SrCBMBCPAOgrnN1OBDFk+3JLw5MJ3RFqagDKxM8Ln++utV                 gLmbNWsWzp3u8EA4rZmZmTjUFo6BIZSBYrQIq6ysrGg0euihh7IssWbgjTJiDCYjGQqFJk2aJHkY                 OhZpligWJPAaJYQhcyEMcppK4PQxksT4ICNNwJxMWqEkaVYapoCKWshxMAOBALOvx7aYLEinWLyJ                 r6V+lNesvfPOO8A3s4C0eoyMzlpdpWnd4IID8Go9R7qDJIhN2sK0htqKvROUBEoxcqipsaEOUCAU                 vXvxp4HQMAze4wcFFHrns08CJaAQMw9UesNAQ7E3OK1Tl8nvfpCoqTXhZXMCP+hnjxLuTgNNzhOO                 TXU1iUvmPxcJDw4ExwWjeJQ5vrgBSn90voASnp7wOF+435jx126sSazfkLjv/pqzzr7J7x+fmj46                 HJ8R65SzS4eBWXvm754yxoTS2XPbdSgMhwvPO2fh11+Zp4UY0Pp62tpofo7ZbB7N2dyUmLXg5V06                 nE+L0cxSr78IVqedUfzFmmTozZa8meP4fiJJri0JlBfPMR5uwHxm0gBlbIZ5ca/jZTu3uczzAEED                 lGWRyLSO2f0++oheA9hi6TxVan7/03bo/cknH4N0+H1MP+qieUF1NEetiFPyBOVHEIpi8DgRWDsE                 fLDHooBLMBR/kFOYBFHYo48+yikOqcVAiZVVQYjWUU1sIB6Po8Gs9gRcEIrevXt3LAfdxX3AzMBf                 xThSboh8KuKI4cG1b98+PT199913J8Eem1cO/hpmSRlKHnnkkdLy1157DdUHuXBqKMYpmCtCx5Bu                 vfVW3DG8J4CAnmKBgjy8G9LOdCeHiw5Sl4oWwSGshb0sBwSnACBIGpNWLa1G1pYYAeWoyk6Qqotg                 wqCxYulr3ZACBZoWnG2N6ClelZ5UlSQLFy5k9J5//nlBDL4hoS7oQ1ruOePDlJFjBWDQGE+VgdAB                 /TYBoi5LAsjIaBBAgONkUkbDRQ5tqXWIFoFgFkKNKmNOi0T3eIJgMXrLBJEjRaIJcphNDS8OKXEM                 ygPAqS57tcIiiprRLpkW2tyDD3ajLchJGtLQIQMAjW7bKaNphgVtQWBYWbhnr+Z+DbW6mQNi4AnW                 1zXQQGLgwBt9/jHRWH4ss8K5621f4u28xztqbuwEYxWhOJ7gNG9w0IQpt5hf0RBmmt+3MItsSAnq                 GPih3+zBImbzp7WJQw8dFwoN8vhHAXbpwakOChugTPVVE3rHOpX9aZfex55YuGKFwd1N6xmdxCef                 Jk44qbRD2oXhrImhTODJeHNUBGTZe0I56YFJwdC4V141FwRx4BoT5jVrtGxcwaZEfW3i228SAwZe                 3T7l4lB4ZjhenuoZe+bZs1Z/a+6tON8cp15dkyltCeGNu4nk6sKm+sSI0Ze332NA1LxrMi8Uzwtm                 T/ZnTzHfpA0WpfkKAtFSf7goECrOzlzgSZ1w5OFjN6wzP9y07zdy5hXoNCPjTtTWMlxNepSEpZ62                 0RVNs/Rpa0QxGZs0BmXFEfvWubnMIdEK7sZFF12kAkRG3zjfd5ZRQdacIBvmk3nyyScDW3gK2ACQ                 BLYCrCgrig4Eo9ZA7aJFi1i99UwiVSSnHEAcsTVr1nzsPNiE6RL34R0ozR7TRU5iNOCD8ugxdYm2                 AFmcPgqDKUOHDoUJDbEnlsTGCACBAGKuzp074zEB3AUFBbSoURJw0Gs8Efzoo446Ss9R2g6ynGA8                 9JHoD3PC5TzhhBMID0nA+ZRTTjn++OOJJckkQfcVcW8byLZG7inTaOOuIhVNs2KBHRRgrmmUyXJP                 Ab0QsqhdZD733HMJQpUJH6INvD+mEoJJRUVFamqqfmFFXTJJ4Lyzhn3n/FKeKm+88YZ1QgUZcGNq                 8N/BOPdVFySRMOxZdBnhmTNncghbCUBMAGeF5+TAGQi77LLLaIt5Of/888mHWKJYPukss8whsbke                 e6TLHMJNrcCBWaYiqEoOh5KffpFmL2kVAWhdhyQqBVh1WGVVheqM8J577gmqcqjxt52Vhvwa+gVQ                 Gohs+h7vZ9Nmupo48fgFPt8Er29KwHweC0ep2PxmUZsByhyw0rxDyPzWe2ynvUY8sGQFc+vMOWIh                 PZszHC0ow0aCCPSJpWsi0QvD0ZHhzCmxTnkZkZmeWHFKoDgYvyTFWx7rODuSVRDuOPb6m97bCNAZ                 GDEos2Fj4p77PollDwzERoUycwTc5unFeJkvy7ksEJ2Slj7u/gdY1GgLgFvXlPjB+QW4wwS0akgs                 vufTffed4QtMNE+tByedfGrFl2sMUNYaZ7K+Cb9TQGm0AoIJ4F9vxHYkZwkZNfbKlHb9o6BhIC8Y                 y/NnTvRmTvTFCwBKX6gykjU7FC3yBwujweqMDmP6962s3eQ8E2Uu/hq25soAfI2iIJMZlbr6TRs3                 /VRn3lHcVFhYiBvF3mk9iX3bWA8FbVIdCKwBegg8//Wvf2k1BpgIWseMGYPhAXY4CDh6S5YsUXlb                 3YaKqBSKRQL7JHQCL850fi/4z3/+kzgaSzj22GNxAUATLJbwDRS+7bbbLMJCeJ04jzfccAPmhIUs                 W7YMjw+z/OCDD3B/li9fzh7QZI8LSayHo6GK4CaIgJAg6S677EIMpXwKY5wY7bhx46ZPnz5t2jRc                 BuwB4wfR1E3JDDFWIDt2td9++xHrgYyyGWsqLCEY53HHHXfYYYfpCcoTTzwRj5VDrA7XG+hUUF9d                 XU15xs0y337SlLntk/UJyVlX8KMJJ1kqGEx8LqZDgG5FtaTZv/3228PhMIAIKoFr9hofBE+GhZnS                 ISR4BVNQA+bo1Vdfxac7+uijWQk4xVgxIyyWxcXFKMkBBxzALKiiRS726AO+JE4oowQHpum5555j                 EuHw3nvvwRmGr7zyCu4bixwzyOwjOaE9g8aqyQoKyLKSMUfko4EsRajELbfcQnrx4sVMNF3TGsDi                 QXfIoSH2ujZKc/PmzaMJxINhRkYGmEjrS5culV6x2AwePJihoAqzjMBE+ug5s4mmMVDIRk8FvqZ7                 Tgc1ODtHrYCyoa7pRxwrPKs330x07zo9Epnh9U1tBZQBthag9AVLfKHCdmlDDjs65/t15plq5HIe                 f2GOHXgwhw7KOKjQ6LhnpaWPtO9wTixzajTbeIL4g4Gsqva+4lDmglR/aSS7rF3G0MOPK/kGjxAG                 TY3sAUq0iDD8mF4FqZ4BwWiOL1wMMHnCVb7oLH+8whcrwcNtnzJkwcK3ftxEWziDGxqa1hpkMkyc                 r/80Jtb9lOjd55rU9JG+cK4nMPHIo3M/Xek4jeb9HS0epdMHsxmRTUfMEQXA30bz6sy09kNi4bKA                 3zxM6otN9cSmpocKPOHKQGQWQOl8RCg/6CsM+8ddMn8JKGl+0+4IILZMnmNISXeStdOcdtwHdBdt                 wzY0wds/tdjkF198cdpppwEfepYCgiGqCegQy9MiWlteXg5/bOCOO+5QbGIv7sDBGjanBg4cCKqC                 j/CEwBR8Our26tULOwHdsHPACLO/8sorbS2awPsDDrAfj0OE7RgJCUJINB7IY+/3+0mg6DBEuZET                 PcZ5xKN84oknsBZWC9hqEDAMiuGS0AWKsYfIpzC4pjJI/tNPP9EXsACoxckC0AEjSgrEaYK9Kqrj                 qshZQa1Aikz44EEzRDhKKm+HZUdJSGcJeXB5WH7oDgNCLByNRhlkViDhlIhJl3dsdQDIprOMCYhJ                 vImoyMyeSBl8xwenGFUkpzrC/DIRlGecWU7wssmEWPNolHxQ24pnR0D6hpzAHK4i6xbOO3Ex88X6                 wSkgieZQBuRnkEnISRShXXBmpaTRPn36wJ9+DR8+nImmcCwWy87OhjP0/vvvg5jp6emsEwQu9I5T                 aAggSxWgvGfPntIQtG7AgAFEJ/DPy8tDnUBqWidiwJ/QQNE7dBLM5RT+KWUoMHHiRDkQDAtdkwLs                 NLUGygbzOVjzptubb/kkGhkTi+VEonmYfRIoCboNUBKJCyhzfIGCcCy/Q3q/4aNuoJZ5HRDV63Qb                 x/n+oQMBuhnCBFLg2+8TZ5xRnZE+KBYv8IWKUr25vlh5IKs6LVAWiM82oWt0+h7pfSbMuBMvz0EW                 g3QbNmDn5gLoqDG3pnsGBCLT/eYlZpW+4BxfqNp5qKgiEM3P8A0tr3rypxo8w7rk80mmZUnVAFQB                 5aXlz5tHjiJ56b7xBx00ccUK3WYx3Tfvf/sFUKJ5DhMQ0wLlmJvS2g+LMQi+cvOzy1iuJ5rjiZT6                 otXeYCWDYz5TEc/3+6bts9fMF1/4mtYdZ7EFKM3iZgQii3AblHR8SUOsk8IONBWVxUplKtsgtIoy                 aCSxD7qCEQ4ZMoS65KAfEIEVOqrrUzJ7HEBaAT0rKys5FGpA0jkI9YItqolnR+hUUlKC4pJJMIVs                 upU8duzY+fPncxZRVcs+2EH0SjHiVjwCrAh/BAeH2BA3gf3LL7/MHveBszgI6DTuhjjgAlCXQBsX                 ktAbD4UBueeee8hHWtxJFYMEKxgeThMJmTfOJvaGgYHRCAAHUAkzO/jgg/GqMBX3eLohjExxkF1B                 uC1wcD/QvnMkOTVBygHa4AwxUywnQCSwAlYCykyWLSk5VV3EsDPCLHucoqQy8e90yc+S+3YcEypH                 3paH8LbIgQnM6bW42YakIfhoOP4UA86YKTx02sXtpZgKoBsQU6/nZxk3mGhBQiV0aYW0iHWOQAdJ                 xI0IQzdzKE9JMI5eoCHMMi3SfQkG59WrV5NJGQoL/WkFfUY2OZKGu9NlytMKmobmQPCESFBLykwx                 cdhpagWUgIT5cAJoMn7CnQH/SL9vamZWkTcw0/kJYyugJO6eYV4KGZmQlT3kwUe+rHXeFeTACuDN                 xsAJZZgnNvOjn7r6xN33fh6JDPH7JwZCxRneskCkGpeQzRMu9wRLYx1LM4Ij9z14wnOvmddZMjHO                 bWKDkuBUTV0iJ/eBDF+/cHRaKFISClcHw/MCobnApT+IYHmpGRfOvWQJWu88yEmj5tKjcx/fiLG5                 PvHTxsTtd66mCaJmb2jCPvuOXP5RHX6uY0CU2ei861fASS1ARB1x1LfJvPgSoExtNxSgDPorQ9Fq                 kN0XK/VGqvzRuWle80PMQNg8J5+aNuyYo0vMZSKAktrOQmEuUxoDSD4NLrXTRP700/qZM3MxIT3Z                 iwZDJCAV2AYRoeDi4bgRKeMdiK0IrYKnBUohAh4TSy75w4YN4xBhIJkTjUql0DOcF6CHYkRq5BA6                 kUZ9kSczMxNT120EeTQimsANIaLUcxvwVE91SglLnMVhOeigg0gDBDk5OfhxeC44jzQEk7/85S+4                 tBgYCRqClZjQRwwDENTjAcrU7ylBSaAH8eCMh7LrrrviwAK+FNAwsteSwFBYZNRQiw9LDjE4AqgL                 1uPeIWpllu6+swDIqST4xSPGQye9NaC0fhDjY6WFKCA3EBJC0SnbinIgARk9Vd9VRXyUVj4EQ6pb                 DhLD5nCoAkqrlsUgkS2AJOQzAsoRK0hnIcCOMsqXQroTdugsc1vRdgRigbdVKKB8q29SZkuU/G8G                 SsLPmqbEmm8Sxx1XEgmNz/BMzuoEfgkoC9sAytgMfMOTT64kKMbbApxq65gk8IUNdax34EabCWCB                 4ElT79l19wuCoZn+UKU3MDuSvTDVb3zJUNy8/SySmdsutfcF/eZvbk5sMl1rYBVhT92160wTEybd                 tPsep0ei5rVs8VhVNDYnHJkdCFeZr31FZuzR/qRr//UUjSFLY7Nze8ExAeehTvNw6A/rEw88+lMH                 zyBvaIY3OGmfvUct/9A8YQ8KG2kBRMaAchyaigy6+uKAiIBy7L9SOgyIRYqD/opQZHbQfDCyKiM4                 yxeZl+6riGbODsVyw7GJ7TpcdFHfy8zsmEu/Djfz4BFsUIUkGNlZxy7uuOOu3Xbbg8CZBVb56JnO                 bmOOUTiKFRUVYWz77rsv8EEmHMC4qVOnkj9ixAhOsUeZpHBSL0IzYAVAkQ8CYTlqF0dPP8ul4nHH                 HYentmjRIvxB3DdycA0ohgtw7bXXEnkRD4JiIAs55EMHHHDA3/72N/w4giPiX2rh6lJShxAJ0AHO                 +JLIwB7BcDAJCeEPiIAglB89ejSh1u23344npRvl1IXVGc5D7IApoZbiQRrFMOg7QuIx4QHhwuC3                 4rwAdjgadI0xlAnZwdRo0Ivzzz9//Pjx+MiMGHuapkcXXnih9Vl2guzcuQkh1fpDDz3EINBZ1iG8                 ZvpOF1QGYoIE5WKiezKWYAIlDxyCp0pqr34BRhZHFDTYiYZ0KZACFnwpo+p2fMBom2NbVI4ltUUB                 C81bwiJELfLJoZvufPWahsiEie04REJiq2krHlWUsId2DynTdgGp1FyrEdsJagWUBs8Y3Vde29S1                 G3H3NL9/ZmZHc8vbPAxkXk/bGij9/smRwLiK8ldwFREPINi0EQaOR4aEbMisBKFrc+L95U1HHZeb                 7hsUjOTijgGUwfh8gBKsce4XF/gjk3Zrd9bUmXfUEjk7g8DgOx9HTPy03lxEvP5fr2R3JGAZFApP                 iEXzYrGiaLQYXzIYzA1Hxxxz3PiX3/icUakjpGBSaN0Zz6bm75sTaxsSDRvqE7fd82W79AHp/imE                 3vvvM+XjDwyYGyxzhDQCU5+Nlk2OI73TneZG82ulMeOvTkvrHYvn+oNFdIExwZ1MD+BRzk/3VsWz                 5wYiM4ORsf5Q/+o5Sw3+0vEG9MYZYSPMz4TaGM1pTPzw/bo5sxf84x+76hdmaLkm2K1V26Cnnnpq                 1KhRisLQCRI4jOAIKIY14mQRbqNDVmmUIJR++OGHOZRiSds4nDZtGs4pWEYBwOL111+HG0zIBP70                 MxVpHhCGzeMCx+NxvRyB/G7dutE00KnrmOeee+4pp5yCYwjAgW74gLhR7Dl76qmnIt4RRxxBLRzV                 OXPmgMiLFy8mYF/V8ggkRBz397//nVBaQHnooYf26NGDBHVh6x4iLA1SWhBgDckaDxYLZ8t8woQJ                 uK74nqAz+AjEM2iIB8JSUnYri91Rsi1aM0Y24YhQgzWAuJIm1AVasVVEKgyRb/vlhg+LfcIpGrI9                 VaPUauUR66xFGffoWdJZO0TuKirPvhUkidAN8lXRQjCFrfAQadsoJXXFRtJCOmXrQhY6LbHstSpm                 +cNHgilt5YRsYueoNVDSRSbnvgdWhcODcdACoaJQrNj4kkmgNC/rdQHlNJ9n1IH75z+1tG79OkbN                 AAFbE44fvNgYRnrE5hwClFdcuzQtcEYoa7QvMg1fLNVX4YFhfHZasCg9kBfvVBaKTOyQfm7V7MfW                 bnQw0jw0U79+/U/mMiLQuRmPNdHv4jkZnjN9vosj4ZG4lsT+wdCYQGhkIHLR5Vc9Ri2aNW+WlAzG                 W6RPP9Q0rK5pqiF11fUfZgSHI0BGYNwB+09Z8ZGRXNFxUlrS4mKmQ1lmhwx1zYmxkxeles+KZU3y                 h3C0S33h0oxQmTcyC8TP8FbF4rN9/mlA9l57j37siVXmuiRVqUvnnYSIvgBQyTSZzYkff1i/dOnT                 DmqZfKmOTKWVOrpJumJVR54Cde+9997LL79cj4uDdGSKlVt1LJGjJqTiuGZgEyXJ5BRGeM0115SX                 l19xxRW4k+SomPboMTnuS2NANlCoHMV3IkkIWW1GvwcNGqTH9FRSe9tfFfvss8+Iu/GR1Vll0p0h                 Q4bo5ZUcslfrSrOHibpAWobEoQbBctCe/mLhX3zxxfPPP483CmRb/whS4Z0ga+Fu6yUB0Sh7QZ6k                 taTxJCGZ1WVbxsoPTztKktaChc4q7SZYaYhsRfcM6pCGSLMXNxZssVIVnSJhcyB10z3RlmwZiLoI                 YHPcY+LmoEz1mr0OqYVspOm+m6d76BBYhyrAXkxIuEdyp6k1UBLw4ryNn3RrZva4cCQ3ECr2h4uM                 o2eBMlIhoDSv745OikSGHHrY5OUrjKtlXlmO89RsQm/nqzhAlbE0zJCY1XkpRKJ64Z27pBzljQ4I                 Z00PZZYBMVldF3bwFwQyy8JZ5ocuHTvntWt/Nr7Yuk3mqRxiZlHN5oaffqoFbZjcZe9uOPOMnKys                 C9q3O8nnOzct7czd2518+FHTSiofMC88Z3ScviTdSXP9kZbXrqtbxYAxWrlFT/x9937B+ExvaOze                 +wz/7DMj3PoaMBDtcx4zZsDNRk0yN7CZx4bMTSVzq2vRtY9GOp7TLu08nN80//SsPQ3Kmwus4Up/                 sDo9ozAruzglbcCxx+chjDPRP0+npaSSyNlskbPOuRemmZZJaHbdGqCETe8oyRiSB/8/JJSJLriB                 gKGQwYsYNw2diLNum7R9t3YFWW5K2CFSW84ZQ5zFpMXNMtwaqQCt05DSrYadTHLUImWU0HSrvJom                 rbkWmkD0zkoFkCkhslohDpAwwh5CEkP5wiZwVhWRoZWQ1pW2mGVZkWPBEZGUDx9IfbEJ4bg4215A                 FEimfkkW0SxPHULujkgkdYQydtLVKMQo2bSoVe92iLYAyqbEqm8Tx51cnJoxxBfMicQqQ7Ey8wUb                 58d5rYEyNjEt/dyTTslZ8blxtdbXN21urmk0P38EKM3jhzBkM5cLDeiZSPrZV1ceddLkQObAf7Tv                 H84qbu/N6eDL9WWWpoVyPaEcXzg3Gp+RkdFvxsz76py7N4xSPZrm8DGbc5mPMP/bbxJPP7366que                 mz330arqhxZd9cwrb6yjSZpgXHFq6xsbiKYb651Ljs0N62tWIxWDinDnXXhNu7ThWZ2LOniGZHa8                 8P5H3iN/U3PDupq19QnzxmKDzmxmB8uNVHSEN28BZjY+/SYxcNQlnuiFGaFRKb5J3lhheqjQHy8L                 RMuJxH3+0uysYq9n0MUDLmHxcGaW6dH2M9XU1KKW6hU9SvbQISZY0+8mm8NZqzqt9GD7SU2ID9q2                 NZX9Dye6b4eFdKvRcOdgIdbG6KytRf6WxkNJ5bvN0p2G4GDw2IXIrciNCJbAtcrKysEOTXJo9OjR                 AwcOXLJkiXsKLA6K7Cn3Ay62jORkb3OEntQiUxJKGFtdJVv1yEKhmlNo4ia6bDtlsYzAWbU02pDy                 W3WBijZHg2/G1yHSBB9KuPeQ20uFs3Xz6aB7eN3XUpVDr62EcLNNt+ryDlFroATvXnt7c3aX4WkZ                 I0zcHTbfePCEzG9g2gDK6CRfqO8+BwxedM1TX/9oQATxN+DzJhpYYmqdNzCazfmsdm1zY01Tgq4v                 +zhRteCdaKdp0U7FoY5l6eG8SOcKbywfoAzFC4Ohab7A8PPOu9Re9GSuSSMbA1iL895Ah40j1gwC                 Oo8+mqcf9egm+YxpE0uZ4y9Qx7iTbECfg3TNiedeqj3w4NJ03+RgNCcQG+ePnT96yqVra42n+eNm                 g6QMqvM+NHPfyfQiQfDP5gjfZDxKuvDZ14lHnq4dOPLhUFZuIKskPVRgfiAUKQpGKn2B4jAdCQ0r                 r3qowWkdiZDd2Vzk4KPBSh2ZcMnEidb2SEt3IXSLvc1Xghyrl9tPKI1l9b+DmGgz1y0DQgchEuom                 FmXTljhUDhUZT9IG85yRt0OqAhCDj8XaYVdb20n2siNTSUVMev/99x82bBhA2adPnwsuuGDo0KHh                 cPjkk0+mjBBERJqKEgZcoEfKV+u6vWMlsaBALWVaiHE6ajpi+6VLIjBXLRJq17ZOScuZMaFpNyqJ                 xMRdhb16SqbNp+k2nxkg3/bITXCAJJgV+Mcff7QMIdtZi5uaOIjhlQyQ7bUSkC22c/QLoKQRsGbx                 I194gv1imdMjsfIMX7EvXGxe+pAEyhIXUBaal1MERnZIu/CQI6ctuOKFNz+sW/ZJzQefbfz4y9rl                 nzUu/yyx/FNnI8HhytqPVja++ObGz79O3LW4tmPXgjTftHBWOUCZFpoZzC4GjsP4ZWFQZtK++85Y                 unQTY6VLk2wkbLeT4Sqnmswj6JsAZgaFQcT9BOCMy+VMA2WTQEnXGkBKEHDCxAei0ZnBcHGHjAkd                 98pP8V0c23PA/Kueeu3D9e8sX7vy66YPVtR/sjLx8SeJj5F8Zf3ylTUffc5W+9FnCbaPv0y89WFi                 1feJld8kxk97sYN3YkpgpidS5InmeMO5ZlgCRV7P5K5dJzz4yMeI5MwS/9G8pPIlyRELhbQTqTKt                 Zlpk01Z7UOWdm3hrAyKag6dl+59PskPMzD0+kO0C+VsOl8hdxW17IjvyImvJ7lqMnshpxFDyxFbI                 QoyqfP75571798bUrZFDOTk5esgJaTWnFHbOmKbtLJMG/tw94tCGxpJEndKekrpPIhngQ444k1Bn                 9fAQmWJLpvio77ZpHSKzQMrm65CzkHpkxdMdPx2yhy1isJdXq1ZEYoIDa9kij9JU1G+WIDs7tssC                 a+s+O3mGVFe9piHJgIRu/3QnqA2gnLfohd3anx+L5xJ3Z/hK8SKBM+d1GC0vWLNAGS6OxuZ2zLrE                 45lByLz3fgWHHlne66TqQ44sOfq4eUf3WnjMsYucbeExveYdc9ysY44vP+HU8jPOXnjE0Zd0SJvg                 CRT4wqVpQfN7bU+0INWX48OHjZREwjnh0Jhx4xav38BwmFtADCxDa4bDXCek502bNtTo0p7Jd7LY                 NtbXgqcmX91pwANtqq1ramhs3rC5fl1NYunTG7vtlZeRnhONzUn3m98FxTrO2iNtclbXnGNPnXfS                 6XOPOLbs4J6lhx8xt9cxi3oZsecec1zl0cdXHn3cbLpzdK8Fhx6Zf8wJRYcclXvwEcVd961I889M                 DRTGusz2Z+YH4rmhWHEsVpKRMf6kk6s/+dw8GOVohBHY2RwiqzmxGdh2zjGFzP3mzZsam8zNfYrJ                 g9B8W3uWtkEyOavTO0dws9b4/19ilBgfjYM1FboGKW0zKYlB2sL0Xd2npAxVRJq5wMYsB6qoANMB                 E2VClLFT0yapafbUshVXrlypl6FBnFKZgoKCXr162UwktI8lSUhyXn755YkTJ44ZM2bUqFEPPvig                 Kn788ceTJ0++6KKLRo4cyX7QoEE4qg8//DCiQtSC7r///ssuuwwf9pFHHqEW+Z9++mlRURF8+vfv                 P2fOnA9bvqvOnk6pRYj8a665Zvz48bCdPXv2B877dC2Bd7fccos4P+R8gg3OOvXee+898MADM2bM                 QFo6Qt+BY6Qix3wPZNy4e+65Bw1nhBnqp556qqqqiiYmTJhw4403rlmzRgAHzZ8/f+rUqTAZMmQI                 bdkxvPvuu1lXBg4cSC16DWe6ST5QW1JSMmDAAPx0vPWZM2ciiaqogO3aztEWQNmUmJx7z+4devvM                 d2lm+YPms93mpWetgDJc5gBlmTdjQTh0TWpKBZDaLnWyJzjNH52eEZia6pme6slJSy8wW0ZOmmdq                 mndShndUMDCs3R4XtW832ge+ZM0LRqsDmeXhjpW+eBF+mS9YFo1XhUIFaWkju3effP/95gVluoFT                 s7nO+c1MXVP9JuftO05k3WTQEBdyM2ukEJJMMyzGBszFTacU+Sj+ux9u6NWrNKXD2HhkfjA41/ko                 bn6qr8ofveTv7Se2yxjri0xK9Y72BXMC/sKMdIOnGZ7Jad4JbKneyaY7nunB8IRAZIQvNDQjNCYY                 K4hmz/HHqtt783xx8xohfyQvFi9ISRk+cvQdhPEOUDI9AsoWkoSOkMygM38qY9YAVnenkNFdTkmD                 rd2KrDJt21bbJNZVq3PwN0a8xTXv/2RCVAiZBRYiWSk51hhIqAAD6C5p893kRkY3UbhVPu3aJv4t                 2WlyRDZOHG4XWKb3RAATuF3kAHbYthrSXqSglRww68gjj9xzzz0BprPPPvtvf/ubfly/YsUKsGzR                 okVXX3314sWLp0yZ8oc//EGvFxMfcnbfffd99tkHkLVvzTjooIPECoTaY489wBQykc0Oi1SuoqKi                 e/fu+fn5AJbX683OzgblUR4NIHCfmpq63377Ifyrr75Kjqbg9ddfP+CAA/74xz9SYO7cubpEcMMN                 N3Tp0mXo0KEA7sknn4yQMIcP47DXXnudeeaZFAC4f/e7340dO5bynFq+fDmud1lZGd058MADd9ll                 F8rQCqfgg2BgKAsMrd93333yMVk29CP0vLy84uLi6dOn02X3ZFGd6Use7Di1BspV3yXOunCONzjU                 G5geiVcHw9WeYLE3/MtX9v5/7Z0JlFbFlceJnhjjcRloaPrbt15REh33xLgk5kTQcZkY0THgEETc                 QRQdoOkNummgFTTu4nGLBgQnJsZjNKJJVKKOo8ZlYqJRx8SoE41xoemVb363/u+rfv3RNA2ZxORM                 31P9ul7VrVu36tX9173v+773+oCyOZ25pmTMZaVli/fa55pM9cJ0Vf2o6Mwx8YvdR+TN4kxkFtn3                 1bML0tm5ucyc6oqGytzSytyV8diKspj9IGd0vD5e3pKpaUtm2jLZy4heI5EL47EZXz+x7an//MMf                 3a1e0JAFgFEEaVO3vcyRMncDstMepgZmugdPOOTp7gwmBUT6YEPHa7/94yXzbtx910ljRs3ds+rm                 WPTyWLouWdFQmlxWvfeN8crmstycWOWcMnu2W+3YyAKGhr/s7mPOJdnzie01Qc3Z7KKRo2Ym05dk                 KhtLSuvHxpakK69OViwn9I7ZDjE3k637h5GnL1n2KBjmfkbptAlTASjx6kiutntD+5/cF/WJKG29                 ysaKcNCHJ94z8qa4rWTOhpPw90tgQZEZKEO5YAJSIdOFLWm8HD3Iyt8xPlfujx52FdxBNBd8QDTx                 8hVvbol8mIk7Bpo89NBDP/vZz/Tja6AKQAHCxo0bt8suuxx66KFPP/30448/vn79+ueff55WDM2r                 MXXq1PLycq41OEWPMH/5y1+2DgoKK6hcunQpuPO7wvOSTzrppJ122km/VqREIwVhx48fr2dScEqn                 o0ePvv322+HxE6itBadPoiCcuJ133lnf4kIO2Apu/sK9nwPys4Q/CHqeffbZCEegro7mikFJPqf6                 rYHmU12QZ3Rz5swpKSnRLyZEjEu7Bd3p5/AM//DDD8cRRrgEanRIYHoBSlxUygWdEGziZA2QUeH2                 EUApWzUp+G4/uO834/edmcjNjCbnpnKL46mWWKopW91iSGHPIbeHLbpkL60GK1OZyyKJZfiemarF                 u5acV75XY6qqNlUZvKnRHvBj+NKUyNYlcvOT2bmJxCVVuaZ4pCkRW5JILI8n7eFDeKzEsNnqpYaq                 qRZ7aHmuvrJq7qiSEw86ePr37n6aOUE39jNCE1M1eJ2svntkU6UUxN3uxNxJF7O/9/6mp59985Rv                 zh85+mv779sSKWsAoBOpyzKVTfYczFxrJLvEfqxdfnG84qJY7iIAPVNpT7twaoeB0sYeizbtVbMi                 k2kcOfrCXOXyTMXlu5U0ApTxikXAbjRRmyuvG10y9eZbfgnIuVd4B3NbRPZhFHoa2H384LoftSxu                 WnH5snUP3Q8zF9u/yAli/XF87733fvzjHz/77LMq3G6IfOyxx3BACEwuvfRS8gMi8t8yuattxsls                 4DgQsuEZEZqp9oUXXsDDgvwvoDFsOPFlgIPXCq9hgJBDOdblwQ5oeOqpp/BibrvtNpmrTOuNN97Q                 84n9k3GZtCFaHb3QcOLEiYSc+Hfnn38+OELMe8opp+AxgTiTJk0655xz8KeIMUEK/E2cx3Xr1kkr                 EOett94CT4kovZ4tLS3xeBxUJe+Bntgc8NU8gAv4X9XV1YTAq1atQnl9kRaaMGECQSsZASUEbtKp                 hiOIJKNJZlVAlIC2+HSEunR3xx13jB07likilgea9UQMygG1k08++eCDDwZ8r7zyStYY7mTRuhKg                 M1icRDKscHUnQlX8X2Y+/EkRitHFyJEj9RJjmlRWViJftUCnMsi58847y8rK3nzzTZUwBC9cw4H8                 qLeDAErmGtQ3TwygWbp8/cixU2PpCyrG1UWTlwCXFTVN0fS/AXOWsguSmbogkbdT+2mjHQ1THE+B                 06U69710x5kFKOenMwsspQ1kzWVzv/kRm3Ea+JKsCe5nOndRScmpBx08t6Hx/qef6e3odh9w4y2a                 C9nTucl/qI7jRhmpt2eTfbeHGdKn4e++m7/q6kcPOHBmKv2vicw5eILWXa4ZXItX1scrDf3l7QoQ                 SU5PN8yCzqTC2BvSqeZMstnpbw1BT3tRbWZJusLebB6P18ViF2Qz0596srO7x35wOTjhYhBMnXLK                 pMmTT50xY3pDQx1Xl1X4dffOHEgbLysMy2eJ+MdYaGWzJrzF+mWhJpAHU6rEho+DyWGKWMuMGTO+                 +tWv0hGOlUAZpJAQNfTLSysvTCw4OL18GQCkcjI0kRpk1Lt4WNli4ChfA/Lyixa0pHk2ORfwqOSQ                 Qw6pqKgAcTB+pgVbBReIYYGhf3IvudZttQcffBAecOqwww7DycIOUYZ5AJX0RBwEStXrr78eUwcO                 vvjFLx511FH6fgzQSSF06qmnEiRySiHkxz4I0RHCmWGiRU6ZXo6UvP3220SFiAJ5hciaE/iZCvDu                 qquu4lQluKLEpAC9ShjmmjVriL51205TwUSBwsTRQnDKz3JPjTzttNMIRTOZDB7ZTTfdxDAZ3f77                 769WuiL+ob9+8v3n1LCp8P777wfCwD7yLNdsNot/d+SRR9IWOP62e2M4s11TU8O0T5kyhQkEs8B3                 v7XogkKoh0pcCF105Pt+wWsuKErqFi0bQ1tb20UXXcSEnHvuuXLPmS40GTVqFIjMRdGjlyXhhhtu                 YKL2228/PFbWwOuvv47+GqmQV+uQzPaRAWUPEGQPAkNW/qJLHhg55vx4em6uqiGW+jcy2cpG95s8                 4aOA7M9JoOrQU0NFZdMee0wfOepbR36t7dLljz/6+IbfvZP/qNO+DERiGkisMhLTRerstpcufPhx                 /sWXOm+59dkpp11bUzNzt92n2Eu9k/PdN+eb7Gnq5Y3RikaOgF1/9QZPTQClJQeU8rKj2UVgZSy5                 JJFsTaebErHzJxy16Lf/bd9eMt92y8Q+f+yxxxJYcfm52FxFXdF77rlHu7cWhz/ee++9ur2lEnwN                 VpWWAsRaZG1hjbJhpEGyQITDxhHbwIth71U5risrnmXN5i+wgPQkCIgSiAVNKzLvvPMOR3pBrBgg                 /Fx9cooEuTxSQHmwho7ol4accqQtmvguGK+8PA0cYmganY/7NBwJpLmsAmUwCTxi4ygQ8/Ooe9EV                 KhHc4XfAzyy98sorqEcXuEKyapxEvNH6+nq8OdkwvQCpejjjSy+9RIDMHkZzEId9hQx7yb777tvY                 2MiESEOIa6TMgCRVucTz58/3A4TohTB29uzZwB8YRAnyvSh2Lz2NmGmnHD/rU5/61IoVKygRuKxd                 uxZEwFE1bkc4cUAh7ioMdMpgic133HFH9g/GzmwDTDvssMOLL77IKdsDkwPEIIf9o7S0FGeW0X3n                 O9/BScTvlq8q5SFm5oQTTkAgJVyFAw444NOf/jThCHCvBQxyPfnkk+TRau+992b1osADDzzwuc99                 jv1GO4E0h+66667PfOYzxPLkWRtahyyJhx9+ePTo0Rq4iI3kuOOO4yojh51GHzpxZUF8lGxoaOAa                 Aax0jXAmimDruuuuI7xghQPfbIHMue9Cu4If1HYQQImluZtl9iu6/Alfv3lU6TxiTMXdFgsHyX0r                 yH6/WJRUPvRU1HywlEwtS2Vac7nFOXAtfuEeI6fEklOPOXZJbf0PHln/0VPPdLz8m/zv386/+4f8                 22/lX/9N/qX/yr/0q/x1N/zHpJMv+8f9LkilZowqmRaJXFhTsyyetE+K4qmlcXvRI4lwewnH4NtO                 Q0vJ1JJ0ajFACWLi/xpK5hoElNFEazS+sLyiKRY9s77+3i73BKLBacGCBbhFBAs69Yhwyy23sLuy                 mFigkF6tR5zIcmetw8b6xnLYb9nDWRlqiA3gVoB6BHr+llDYAikBqhACPvodnrgev0DQiUURFuEp                 4GL4BwLh3oImK1euZKPGpQKb4GRpAmR0zTrGM2XhorA8UwKlww8//Pjjj2dBE+DLL6MhcgQWRIV4                 JWRQGy+ABX3ooYcK8jCY1atX0x1tMUiUweQoZ31rP2As8ssYIPbz8ssvM13oQ7/eFCFG19TUBBjR                 0NsGpgIGgS/MCU2QA0gR/9JWDBSqFxRDB3CWDL6JvyEIYjLDysOpad8SMdUQGVxRfUYB0TX6cEGB                 MNxGMIWQGVF4XiwDsIY5ZOCE/+KHmE+8s9bWVthoS6cEv7FYjEsmBsYFRKZSKUESxG4aiURwqzU0                 WnGVQTE2Bk6Z6mOOOYaLzmW6+eab2TyuvfbaX7g3eeGE4pbOmzdPmjOl0MUXX0y57kgiED9Rwbsm                 FskoA+KDawTIrFK/tPRAORYVGmoREhVRwhali6X9Bn7WEn6uPvqnSqAGaYafe+65L3zhC1wFvz95                 nxdvnemScH8dIbAeGFX4JeLiBrntJXePkiGTepnEP4z/fNOYssZkZmk81QpUuedW2A9ODLlSbYV0                 WejYFlQN5bjtqaL628B0JIFKDalcbSQ5q6R02sgx38yUz9hr71mHHtYw8ei2445dMXHCpUcc2nzw                 QXXVlTNTqbPKojPiiZm53HyQK5VaGIk1GUQml8XTbfZCHgPKZWWZ1ki61f10fVCd+x/BymS6WT9+                 d98ECEJvm6h4Y668Lhr91pq1r3Bd7MuehY+wNycWBJERAETeuxtCAUJIFvrChQsfeeQRwsYTTzyR                 RcluT8Qh0ASeWNDgKV4PDgLeAQbG4gBlMLbm5mYWkL7I5o1fxMojYPn+97/vC1mURDEyIdbi2Wef                 jWUiIZlMIopCemFx40GgzKRJk3AZZCGAKfyEkOvWrcOQdtppJ1Y8PIlEAvvHYHAHiNFAdnTA32lp                 abH+3C22yspKhKAzUAXkAbjYLVbEnFx++eW77LILY6fhPvvsA5DJqFAY+X654zyiIY4DQZnCYWkF                 yY/AadLcgk0gCNLw3MFrOaoUcsRZYx8iQxcybx0xfuwWN408k4AagA6uNziLHAo9hed2QMKGacis                 6hTFwCC6Y7B6wiN+GcoQt1LOzMMPfoE7giqMH/cTT5Z58GMHRoEksFXa4lLttttuc9z7DzQuxDJ8                 BksTlQCd8OCXSSykHYgdjtE988wz5BWgoBsZtaI5Wx1Xn9lmejlFvYMOOoit0aMS64eLS4DMdO2+                 ++5wqhzOhx56CN9T/inE2uCSsflp7/TEFRk3bhwwTV5BN4QCHi5RiTXDAsMu2BeZcz8VLEumAoGC                 VL8GIK6gv38ls9JC2m4CKJ3vg2F35L99xUNjo+eUJe0uXiyzMJZelCpvLQOk8C718qwg4Yj5I0lV                 Qzlua2oujdVHUo3J8kW56pZc9cJcTWNFTUP1eBzMmZHY+ZHoeWWRc0mRyMx4ZFY0OnvMmJmJ5Lxs                 rj6eqo3E5yfSjZlcK94xPrLTwRI+oPuKeGNZ2j6ad8n6GsLRnGvLmxep1AxKAru5ystjicZ4fHZ1                 1VlPPP5hj/2giHVMsjU3IHEhwTgtSoWWIvwsPVaSPMZDaMNeyv7MJonbyLLAbnEiWIu0JQaRHdId                 xJpgRRLF/PSnP/UuDwvIKWMrBmsRULLaVIhlstBZcxiA36txdfFbYbj66qvxVqQkxoBiOBfogGfh                 P/fEfcNaKEQTgFj9gqEgiz7DBYvxf8mgAJ4aaGvN3KgJpkA6cJ+ome5wN8aPH08VyxqPGzNmmJil                 twQtdwALyZgiofGYMWOYHAqBSLHhbWGTukcJEe7hd2DGhMCcogPDQeaaNWt0ew5ihtWWaQGs99xz                 TwwYNiI+dMBJJ4rEf6dHeIZicqjNEZm4z6CY0IHdCy+Y3Q7iUjIKjviSoCHwJNhFVXw6E1EglMR9                 JsOSgEBAdkppSxOEM1jdNEBhiAwj3XnnndUphNoAjV68zhzqi+hMOCCIr+pxh2tBc4Ep8tlIcGYJ                 ycWgHlkqn/3sZ7VhMA9s1aAhE04tSsorFDARCO+6667sBPTIxWJ3ZN1SDtGLljfT/qUvfYkwiOa6                 hwNJPQhNhMi45KiqMULoQ9eMHR8Ch12F9AKRYRkQhpeXl3PdOfWjI6PJ2T4a0dnRa/cnu/M9G/Oz                 zr9pj1FT8ZVi7i2s9lOZSvv9IjjlPsIOPsXun1T+l0q5vZakqpvLMnVjYnNL4/MiqQWWkrXZquZM                 +cJEuj6aqLXnCifsA6Jstmn856/MVCyJJu0T6nT54lTOXvVFimX0XA+XcvZM8lh2QTRT60qKOx0s                 GWICtYXkUBK3NJ1riyUXlI4965hjlr72mu09nV1cY9LATgeLACRixyYDQPi1yCkGTOhHnsX0xhtv                 AARYFyCFm6n9mVgVS5Bd4UUCFjDj++CisveyacOJW2fdFAgGjqxgFqueYiuihP0c6Jw5cyYYF5S6                 F+PJ2yI6q6ioUFjHho8XiTMCCk+ePJkFLajFJNjACZEmTJigL5EwHHpEAn4TemJCS5YsUbkeBkwe                 mcuXL4efsWCQhNsU4syCqto26LqkpES3JmhI7yx0DUTE/HA6bdo0ENmXMyGAuO6CYU4ye2ALTY48                 8kiYHZcR84CZ+YboiaXdeuut4M5PfvITTS+bmd5fhBmTATS1PSBWDIOQzJKYQHNSV1fH9sO8TZky                 hdnmqhHXs7WgEiWg8H333UcTgIOoHM0VadILPuOBBx7IhWNTBCWZE30pEuKis40xaTqFBEAMFqeS                 eWAxsMb22msvuVfMAwOcO3cuiIYvBkrqHrHGIqCBQFi0BZuQwMbW2NhI1yAmVSA7uIaTy5YGRhM0                 sFQEbWvXruU6MqVca/xoRqQvdQKjlO+4447sxKxPJLMGuMQof9hhh9ELM0AJ5ddcc43uwoNxLB6Y                 EcXksMmRYQGwhxHWoPYVV1zBomLH1U7MESFYDc44PgQhDg4Bw2E+/a5GHlJ+O2hEd+HRuhs/yH/j                 nxeXlE5PVzVF0vPtO4bxeenKRYBmIhdCmaKU02caQ092a2/oaY+yC8tyCxLVi+IVTfZqnYrFqaol                 2apl+Lmx1MJktiVT0ZqtXJKtaEnnFiWzzXuMrh1V2hhLt1aMW5GrttfeApG5msXAYixb6xSYH2iS                 qS2UDD3poxuhpEXcDiUJ55fFk83pTF0sekZD/Y82fMxVyffYg9m3CJQQIScYpGhaJLjEPzrjjDNU                 QgyLe8gSAT1ZeezkXGxsibYyCTJYHRnWNLs9EvBN8D31KQHL2n+jCGNgf2YBIUrwAQFPACVxHMZw                 9NFHI1w64GZiybDh3sIgZhwiAmogG2+L7vzdVUXTAN9JJ52EMbgF2YufCH69+uqrYDHwiseKlUIY                 GEBPIWuahS7cAZv0CSZxJWBEhiFff/315IXRoLP8FKkHQOsUAgsAaMqZEDYSOkUfyhmvmL23Dqd+                 LMi40AQDBrYwJ2ElOrO7ANOCbLogBme8OJViYEQYPHp629M+MSAhX7gDFOZyudtuuw03UB8lQapC                 Q59hwoFRQK26upowwnEFqIdiRAn48swb8KFfwlBI7ywPRqQPlwV2urJoyDUCiHGEASOQxU8CQz7i                 iCNAnwcffNDPIR35QTFpoCdIerx7zxqKIQHYZSCaT1z1c889F7hkHc6ePVs3jtScyaFHLjdXRB9A                 oSTXFKCnBIGI+spXvnLssceySlGAiBuPm4EzNC4c6+GFF15gTh5++GGgliZE+jDffvvtmmouDRsP                 TjfE6NatW8c8UM7KBMrpmgVDL+xMeBiaW8hPsk63j0bYFw978p0f5//wu/xhh8wh9M5Wt+CyAZGl                 sbmpCsDIfuitu3LuCzFFR+DMvgY0tKN9B8gdDWGHcozmGkBJPXhibKoplmu1x4mnFttPerJLCf9j                 aXxGexacfe0xs6hqz6szVVdF0stGxxbaTYPyFoZgcjLzDRYztX1fWso0xNkDBtZzS0f7JqkPul0w                 ro+DFsfjdVVV9bnsmd/97sssJy6fe4PFFoESQ+LqstTwFAC1xx57TF8ZoerGG2+Uc8elZckS2uDO                 PPDAA6NGjQIoWZHs5zgFTozdQ5w+fTreBwEaRHiCP7Lbbrv98Ic/xLwJnEEN2RsmBOFZgFC//vWv                 WaYsZVYtLgO1LCy8FSyKlbpy5UoWHKEZSrJ1A7uYGUYCD4aqryuz4nElnnjiCRYrqxksoBfWMQ3x                 T/EuMSGgAV8Y4WhIHjeNSA3bEBQSYIJKcBLi4TLgA2JyaIsoaiGUAUABd7wM7Fb3TCHWPbMBdrAH                 XHvttcyhgizkl5aWMp/sPcwnR3TGqkEWPA6O6InRymCouvvuu/WxEsSs4tARKrKRgI+4zLqbCfRD                 4C/DPP3007kuWLgMz9+mGISYcGagvr5+zz333GGHHZhqOkIBgQtyBFWMERjCt0I+Y/EWjpIei30h                 hAQuDRmkCbzAC0GVSLUaKeUCevpSOZsQR5F4RIjiFFHqSxkKOQqPvCgorI/yHovpxdd6rbwcSdDR                 S5ZiEKcqgTR2rV5/KoU9v4YfHrs8ccir4WV6rbaDRtjHOD359g/yLz69sSozOZudh5uWyrSEjq2h                 Y7icY3Mq0wySDvkofo5qu/Wj3kiTyLYCi4lMWyJzqUvLk/a2nEuTmaVJpxjyk7lG4zee5Y6nrV+V                 S6ksyTRBeCbdyqA203Arx0R5faK8zo6uO6dncyazMJ2qraq8uKbmrGeftheXuyvCtWQ1DAyUusBc                 VH2kMH78eFwG3UQjJNS9eVYeiMZmDkIBo+zteIhc/qlTpxKkkGHp0JyohMWEMYN0OAv4gDTB12BZ                 CIWtP7eYKMFo2b1BK3wl/BfF8lqCICOSqQLXBNksyjvuuAOxGDynIDueCAhCOe4kziMuAJEO3mJ5                 eTkIAs+9996byWTAUCI1hd7oiXoEVnidCxYsIHoiOqOQsc+aNQtvgiqcYrwGmgMlxFaaHPYA8JG+                 iOAIMPX5A4Sd46DhgODq4towBMaFhkAzbCAy0MkomEM2GNATgAN8J06cCDLKojiiANAJWGtaCB4Z                 ZiQSYQMAT/fff39cbPCLvpgxdiYKGSYYKh1k9soPhfCLubgEB/hWA1IikQCpA24388jfpi6G6S9K                 I+x3f3hAnfnbb3okm/hGKjErHq8dOCXmDZTmbmMqaj5YiibmRZKkWkuJukiiwaVGjtF4QzRRB0M0                 OTeanBNNXRhNXcDRccJTR8bVXmK1yTlxpcQl0iERq03EGnADXUdh9QZLyImkL4ikZ6kvJxmBlyQS                 F6ZTM0eXTDrkkNnsZz3uMZruCRekYHssIr9tkgEy3n33XTZ8zAMDhrAQv+3jGWHMWKY2YRBBuObd                 BBm/ysPbNT4aHoowDpkcZXhgHLhAv3THKeQziKLK7+EiEBAN4adWkpEGiKsVitGL4nQaqjsIx5bo                 yXsZkP9sQXfo0RY5nl+EfA1cOtAv+oB0bW1tKB9mhgG/LDwuTqUqVbQi4xitO2ZJ4Bsm2noeCDYG                 CLaS4ejnX5owEPVCK0045C/i5iTFIN8v044jvHQLtGbNGs0t00JH6muY/nbIeZS9+Q/ey59zRks6                 MTGZOC2WOLN/mtEvJaf/WalI2taS/ercp8TZloJTqqZHU1OjqdOi6SnR9Dej6X+xIyWUW9U0Vzs1                 ljrNUnKqS9OkQyJ+ZiJ+biJ+doJewuptJSHzNJeQXBCVmJ5MTKuqmjFmzNEnT2r88IN8x8b8hvbu                 zs6N7snqA9sS9oC9bW69kIetsMGoEMvEAr19Ys/KCAhULhiFCKLxp5Dg4cBbuAjLBAXUBRjk+4Lo                 RRoG504BaSsIuOCCC6ZNm4bXNnny5JqaGmJqCtevXz9hwoTzzjsPnxF3b/ny5eJHMY+qHCG6Vnc6                 woAmQgpIGR1pgotNXm3hRysPQxDlqOpHHSbPhnwaQjBTiDIcJRB4pVacKgkTVUUzQ0mQC12pzcmz                 IdnrpjkckMRAR2GZg8gfpr8yjWDBdHflO9vz93xv/Z13/PzONb9aveZVl14pHEkvF44vr14Lgzsq                 qXAbkgQONa1a82qQ1r5SSC+79KtVd/1y1V0vrrrr+VX//pxLz9rRSijvS6vX+uS1RbLGqAF63bae                 rF/r3RRbfefrpDstvbJ2zS9vvnn94z//vdzJgmH1GdWWCNvAFIEJWQUGBgkjZKKUe2jwlhOGMNhk                 ae+//77sk1PPgASIjMJGMahkc/Lw4YlT3VATyRmkx9dff33RokW4QitXrtSvJtCN6Hj16tVXOPIh                 v5pA4IV6Z3QaCJJVSy8eTdQdnB7fyaMwuqk5RHNIGOQLyVAIJ9I8sFKi5pDYoHAeQg4l4mfewnML                 UYUQLhDlaginmohhQIJncwav6oAU7hpOJAyI/sP0idAI+1L0JvdVyl47Yuf6lbT9dlrH/9vk5W9r                 KpJDwgwGSf2ZWYD2FPT+qYhn60mPUne/N+/swQgt9ZAItC3WtgmkpH0jvPkNG9s77NWOA5PsHCIT                 FDmSuWJjwkqR5/FuF2yCGKqKLIq2MkgKw7YKugW5EA+EDtgnR51CslJI/SpPhnjW1RvS+Y8yaKha                 r4+3dkkmIzV0FDMDUcYTnXp04+hHhASq4CfPEQqrCnltg/MQURieXnHSHOESojmR8CJUkj7h5hCF                 Qc7lw9O7Oan3Ih5aDUhU+XmjlUqG6W+HRnBduHwffvgxcPnRh13mEG0pbbJHThRSt0v2HI2/bHIA                 1Jf6ut6CAgPp1uWTw0c72l3Z7q5NveQ921ZTnxz3DiCDyAJQ2mZjh/zGTnvrjkt2uk3kzQNT0d09                 0MfjguwZ8jf+wrYtWIRoa7BRQBzhgniQILulHBSganODpERtlVdb4YWgMNypyhEFp/SUtZNHiHdF                 ydOvUAlmFWo4lJNRj16yhFD49ttvqwTyOALRyisJaVAi9aW8z9CW3jcfbBHJh0VCWDik28cI0XhF                 RTpsiWBjNuid0dGc0wEJTkkjr5lUXplh+sRpRFe3PVsbawoK+hELyyeWiBJXMZy2svj+XGKp+BSo                 oX6lTKFKOhoPRHlBK1crFiX3Ysdu99ihdo7bqL8p4JCWoxpyJOEYftTVg5m1d3b/aVO+o73jI6C1                 yz4pG5jCJkce25BVeCPBLAUl4vQoyakM3kvwCOIRx5OvwlCV9/I9IU0QANE8bJzqVHDpUYyMeCSQ                 Wq+J3ExqvRrkBa+Q1EYBX+sHFVZbCE5DL1YI6+VA8FOLQPUulcKSdUpt0ZwIsCj3M0N3UPhUGSSI                 mYxKREijfPNpLCIEFjUcnBCrGSajhroornKYPnnCo+zqtQeGd2/cyKqV2YcTl0pHJYGUEteVY5h5                 CIk1sH3J2oZ1cHlVefEBJ1UDdRT8F9J1bLIXLmIVjnmoCWZGTSuOGr7mgZKPejfhQGHMiDWgBEk3                 2svCt0jYg7cKkUw6jAiQCkUycjLhVpiTzFucYbyQpRXZG20heHx5uAuIUw8EXXjg7j+pvb0jhPzd                 m3o7UZ8cIMx0+yYyeKNNPfbMUJtzGtvqIuN66u3ssA9zOO1z8pi1vhVotKGda2RPti+oB16b62pN                 JNTetdnZpafZIdsVAi8bOq2hyXElBovdTjfXRP6+3SXp7eECWZljYxR2u95GaA375sSps6GrncjB                 iTWR+te50UaqwgEJIcxGMM8o6EYcSHQlrjG1qBc48jalbihOtxDzMH2iBFCykNic7Vq6NVhEKtEF                 GzD9VShYjEVdk0IU8ED9y4vJt2XIziq2gXxDZXySKJ9U+PdPZtuaV5zlDywHhgQltiVYzp2GQMVQ                 xjFQZb/6YjockHXkN3WwITtoYYdjr7LyAieJhpS7VIBUtXU8rtY2OXcOsHTbtHeywee7O6jVRbDO                 rYtO8fe4cvduTiM7RR+ANbhpQnhBI+Nx3XBQwGFS3CisOyehwzrSe+Z7aW4QRjmpoKFP/ShcYXU0                 YOAGi3bq+mOLxRd3Aw+a2EcFpgQdgZVuVP3SYOS78ilMRVWkYRoiAZS20QkiBwLKYfp/TM5onTm9                 a4kcPmKAg0DnR5bDqmXvRnBbg8ACN9kbOyxaId/Tnu9tB8IsijZQMFeOcqGM/VkhSb+o7QNK8TiA                 MHQMmMl2UQJEdn1sENYPKOnCgBIMBBVdB0EvYCtutJV22RvfzdOzd7UHbR0btQ6jAlHWitJeZNJR                 BxWUhHlUrxTwh0lFPlkDBs40OOnB2N7P5//HhkSlY8MRd0CJeh87VHUD60tbIJMvAf1SmIqqSMM0                 RDKghIaBcpgGIIw2QL33LJHrA0r8IPsAEMvl4EogTuxcqOGB0oERbl+xRymgcJwqHBQorbwYKPEo                 N+R7A6CEzykTeJQGlA7FvT72kZyAMvAo+4CywOa8RQ+C9qcqEHmjAeXmPKrvS/0oXGF1NAh5lMHY                 2HLYhJxAxyaPkl56AqB03QyNfFdDTMM0RAqAUvdHhoFymPoRliTrNa+H8NCdBmuE0NsBpZKRqysG                 SvuGlIGR5Q1oXB6eIPRWckThwEDpxLtaASWkCoO5XoDSga9rYJ0bULpK8MYBqKGaE2KdAZ+GoA40                 Le7eDCgtuDZua0h9IKEz39GRb+fc8fDfOYCkoGlf6kfhCqujAQOnuTt14vtCb9eRJfq33QhO3UPf                 BpKAoadhGiKNEDgKKN3N5mEaphAFK6LvHqVKCh+FuVMlqxOcmXG79WRASd6KDAGDF2l6Nho53BG5                 wi0CpWMoBko7uEDbMTnd+M+pVUqEK+TUeinkDZOcsi7fry0oyVG5QBkHWz3mTrZLspPRB5QBbyH1                 o+I6hNsd0uBM6rlPAi3n2Zwy1oVVuT62QlLFOL2MIaZhGiKN0EdyfZ/xDdMwhckZ7ab8x4SBdopt                 Oct1368qfGRsPDJUki2nAlSFgFLg4tgdGTN5oaErHCJQul7Ulavtg0WXOHAawCLJFXJqJS4vmZZ3                 cbnPF+otBf96QUP0cSVuvPRFMm4HoEWtlPrRZnXusyAbnZ1JPQGiisLJyt3dzK2TVLFUJGOraZiG                 SCMEkYLLYY9ymPoRy8HsFNsm6nSwKHs0uLH7g7Z0gkJZqaEQbEHw68LtAIyMyd2F9DDhmnEO9Dg5                 /YCSczUkOWb9UwFszv8q8ARqOIEOiVwlfxQU2IyHfBgofTnkqvx/swOS+6SejKuxe4vu7qcjD5Su                 bugUBkoXX0NIMTguTgaUtrUMSlIinPpIYjRGpUDwMG07BaH3MFAO0wBkdmb41Z3vAhZtcfDHerF7                 dqChwZyR+9oNiygMlAYohjJE6B7LEBWGTmN2cnQ6AFCK0/qF7B/lgg8HlA5olFyVCSQF4TMFJsbI                 s0kgiYxOjdMIgSazr5A/p60KJRZtSYXaQtoWkm4DtC4u9cMZnDTIcOojxDCWcApkD9O2Uj7/vw1x                 pTMGUGJkAAAAAElFTkSuQmCC"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_product_cnc_code
#: field:product.product,cnc_code:0
msgid "CNC Code"
msgstr "CNC Code"

#. module: metro_mrp_drawing
#: view:move.po.line.wizard:0
msgid "Please choose the PO to move these lines to"
msgstr "Please choose the PO to move these lines to"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Yesterday"
msgstr "Yesterday"

#. module: metro_mrp_drawing
#: field:drawing.order.line,material:0
#: field:pur.req.line,material:0
msgid "Material"
msgstr "材料"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "DELIVERY DATE:"
msgstr "DELIVERY DATE:"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid ", ext.:"
msgstr ", ext.:"

#. module: metro_mrp_drawing
#: selection:project.mfgtask.report,type:0
#: field:project.task.completion,dept_id:0
msgid "Team"
msgstr "Team"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.action_generate_pr_xls_wizard
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_pur_generate_pr_xls_wizard
msgid "Generate PR From Xls"
msgstr "来自表格的申请项"

#. module: metro_mrp_drawing
#: field:drawing.order.line,B_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_B_need_qty
msgid "B N"
msgstr "B N"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "ID:"
msgstr "序号:"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ct_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ct_need_qty
msgid "Ct N"
msgstr "Ct N"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,req_reason:0
msgid "Reason and use"
msgstr "Reason and use"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "二"
msgstr "二"

#. module: metro_mrp_drawing
#: field:pr.generate.po.wizard.po.line,req_line_id:0
#: field:pur.req.po,pur_req_id:0
#: field:pur.req.reserve,req_id:0
#: field:set.pr.line.supplier.wizard,pr_id:0
msgid "Purchase Requisition"
msgstr "Purchase Requisition"

#. module: metro_mrp_drawing
#: selection:warehouse.task.report,state:0
#: selection:warehouse.task.report.line,state:0
msgid "Preparing"
msgstr "Preparing"

#. module: metro_mrp_drawing
#: field:drawing.order,message_follower_ids:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_message_follower_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_message_follower_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_message_follower_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_message_follower_ids
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_message_follower_ids
#: field:missing.erpno,message_follower_ids:0
#: field:project.mfgtask.report,message_follower_ids:0
#: field:pur.req.reserve,message_follower_ids:0
#: field:warehouse.task.report,message_follower_ids:0
msgid "Followers"
msgstr "Followers"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:25
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_project_task_daily_part_done_selected
#, python-format
msgid "Print Daily Report by Parts Done"
msgstr "Print Daily Report by Parts Done"

#. module: metro_mrp_drawing
#: view:mrp.production:0
msgid "Not generated"
msgstr "Not generated"

#. module: metro_mrp_drawing
#: field:drawing.order.line,P_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_P_need_qty
msgid "P N"
msgstr "P N"

#. module: metro_mrp_drawing
#: field:force.close.task.wizard,close_mo:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_force_close_task_wizard_close_mo
msgid "Close MO?"
msgstr "Close MO?"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
#: view:warehouse.task.report:0
msgid "Report #"
msgstr "Report #"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pr_generate_po_wizard
#: view:pr.generate.po.wizard:0
msgid "PR Generate PO Wizard"
msgstr "PR Generate PO Wizard"

#. module: metro_mrp_drawing
#: field:drawing.order.line,is_pdf_fixed:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_is_pdf_fixed
msgid "This pdf is fixed auto"
msgstr "This pdf is fixed auto"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Link PR"
msgstr "Link PR"

#. module: metro_mrp_drawing
#: view:fix.pdf.dxf.corrupt.wizard:0
#: view:upload.multi.drawings:0
#: view:upload.multi.dxfs:0
msgid "Finish"
msgstr "Finish"

#. module: metro_mrp_drawing
#: field:drawing.order,message_is_follower:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_message_is_follower
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_message_is_follower
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_message_is_follower
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_message_is_follower
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_message_is_follower
#: field:missing.erpno,message_is_follower:0
#: field:project.mfgtask.report,message_is_follower:0
#: field:pur.req.reserve,message_is_follower:0
#: field:warehouse.task.report,message_is_follower:0
msgid "Is a Follower"
msgstr "Is a Follower"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_date_required
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_task_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_dept_code
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_dept_code
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_erp_no
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_part_type
msgid "unknown"
msgstr "未知"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_drw_issued_date
#: field:project.task,drw_issued_date:0
msgid "Issued Date"
msgstr "Issued Date"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_req_reason
msgid "Reason and use"
msgstr "原因和用途"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:project.mfgtask.report:0
#: view:warehouse.task.report:0
msgid "Group By..."
msgstr "Group By..."

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_upload_multi_dxfs
msgid "Upload multi dxfs"
msgstr "Upload multi dxfs"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_move3
msgid "Purchase Request Move 3"
msgstr "Purchase Request Move 3"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
msgid "Upload"
msgstr "Upload"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Untaxed"
msgstr "未完税"

#. module: metro_mrp_drawing
#: model:ir.actions.server,name:metro_mrp_drawing.action_server_pur_req_line_email
#: view:purchase.order:0
msgid "Send Email"
msgstr "Send Email"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_brief:0
#: report:task.group.by_employee_brief:0
#: report:task.group.by_team_brief:0
msgid "Problems"
msgstr "Problems"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Bt_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Bt_need_qty
msgid "Bt N"
msgstr "Bt N"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_task_lines
#: view:project.task:0
#: field:project.task,task_lines:0
msgid "Task Lines"
msgstr "Task Lines"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "MATERIAL"
msgstr "MATERIAL"

#. module: metro_mrp_drawing
#: view:task.partial.transfer.wizard:0
msgid "Do Transfer"
msgstr "Do Transfer"

#. module: metro_mrp_drawing
#: model:ir.actions.act_window,name:metro_mrp_drawing.purchase_form_from_mfg_o_action
#: model:ir.ui.menu,name:metro_mrp_drawing.menu_purchase_form_from_mfg_o
msgid "MFG-O PO"
msgstr "MFG-O PO"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_pr_created_date
#: field:purchase.order,pr_created_date:0
msgid "PR Created Date"
msgstr "PR Created Date"

#. module: metro_mrp_drawing
#: selection:warehouse.task.report,state:0
#: selection:warehouse.task.report.line,state:0
msgid "Missing"
msgstr "Missing"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_history
msgid "Purchase Request History"
msgstr "Purchase Request History"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "From MFG PR"
msgstr "From 生产部请购"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
msgid "Employee 2"
msgstr "Employee 2"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:drawing.order.line:0
#: selection:drawing.order.line,part_type:0
#: selection:product.product,part_type:0
#: view:project.task:0
#: view:pur.req:0
#: selection:pur.req.line,part_type:0
msgid "POEM"
msgstr "POEM"

#. module: metro_mrp_drawing
#: view:purchase.order:0
msgid "Total amount"
msgstr "总金额"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_urgent
#: field:pur.req,urgent:0
msgid "Urgent"
msgstr "Urgent"

#. module: metro_mrp_drawing
#: view:pur.req.line:0
msgid "Thickness/Length/Grade"
msgstr "Thickness/Length/Grade"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "PRICE"
msgstr "PRICE"

#. module: metro_mrp_drawing
#: report:pr.mfg.part:0
msgid "NAME :"
msgstr "NAME :"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_res_company_stamp
#: field:res.company,stamp:0
msgid "Company Stamp"
msgstr "Company Stamp"

#. module: metro_mrp_drawing
#: view:set.pr.line.supplier.wizard:0
msgid "Set Supplier for PR Line"
msgstr "Set Supplier for PR Line"

#. module: metro_mrp_drawing
#: selection:print.pr.mfg.wizard,type:0
msgid "Print All Sorted By Supplier"
msgstr "Print All Sorted By Supplier"

#. module: metro_mrp_drawing
#: field:product.do.line,type:0
#: field:project.mfgtask.report,type:0
msgid "Type"
msgstr "Type"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_send_email_wizard_pr_id
#: model:ir.ui.menu,name:metro_mrp_drawing.metro_purchase_pr
#: field:pr.send.email.wizard,pr_id:0
#: view:purchase.order:0
msgid "PR"
msgstr "请购单"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_pdf_printed
#: field:project.task,pdf_printed:0
msgid "PDF Printed"
msgstr "PDF Printed"

#. module: metro_mrp_drawing
#: sql_constraint:project.task.completion:0
msgid "You are not allow to create 2 dispatch for a task in one day!"
msgstr "You are not allow to create 2 dispatch for a task in one day!"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ps_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ps_need_qty
msgid "Ps N"
msgstr "Ps N"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ma_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ma_need_qty
msgid "Ma N"
msgstr "Ma N"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Mi_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Mi_need_qty
msgid "Mi N"
msgstr "Mi N"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "五"
msgstr "五"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_send_email_wizard_pr_lines
#: field:pr.send.email.wizard,pr_lines:0
msgid "PR Lines"
msgstr "PR Lines"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_qty_in
msgid "Incoming"
msgstr "将入库"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: view:project.task:0
#: view:pur.req:0
msgid "MATERIALS"
msgstr "MATERIALS"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ps_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ps_done_qty
msgid "Ps D"
msgstr "Ps D"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "Start Task"
msgstr "Start Task"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "ISSUED AT 下发于:"
msgstr "ISSUED AT 下发于:"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_date_required
#: field:pr.generate.po.wizard.po,date_required:0
msgid "Delivery Date (ETA)"
msgstr "Delivery Date (ETA)"

#. module: metro_mrp_drawing
#. openerp-web
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:27
#: code:addons\metro_mrp_drawing\static\src\xml\web_kanban.xml:31
#, python-format
msgid "------------------------------------"
msgstr "------------------------------------"

#. module: metro_mrp_drawing
#: field:drawing.order.line,work_steps:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_work_steps
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_work_steps
#: field:project.task.line,work_steps:0
msgid "Work Steps"
msgstr "Work Steps"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_task_line_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_task_line_id
#: field:project.mfgtask.report.line,task_line_id:0
#: field:warehouse.task.report.line,task_line_id:0
msgid "Task line"
msgstr "Task line"

#. module: metro_mrp_drawing
#: field:drawing.order.line,original_drawing_file:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_original_drawing_file
msgid "Original File"
msgstr "Original File"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_company_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_company_id
msgid "Company"
msgstr "公司"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Mi_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Mi_prepare_qty
msgid "Mi P"
msgstr "Mi P"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_task_partial_transfer_wizard_task_id
#: field:task.partial.transfer.wizard,task_id:0
msgid "Warehouse Task"
msgstr "仓库任务"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_stock_level
#: field:warehouse.task.report.line,stock_level:0
msgid "Stock Level"
msgstr "提后库存"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Generate parts lines"
msgstr "Generate parts lines"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pr_send_email_wizard
#: view:pr.send.email.wizard:0
msgid "Send PR Email Wizard"
msgstr "Send PR Email Wizard"

#. module: metro_mrp_drawing
#: help:pur.req,date_create:0
msgid "Date, when this document has been created"
msgstr "Date, when this document has been created"

#. module: metro_mrp_drawing
#: view:pr.send.email.wizard:0
#: view:pur.req:0
msgid "Total Need to Order"
msgstr "Total Need to Order"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_operation_code
#: field:project.mfgtask.report.line,operation_code:0
msgid "Operation code"
msgstr "Operation code"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "NO."
msgstr "NO."

#. module: metro_mrp_drawing
#: field:drawing.order.line,Bt_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Bt_prepare_qty
msgid "Bt P"
msgstr "Bt P"

#. module: metro_mrp_drawing
#: field:drawing.order,note:0
#: field:drawing.order.line,description:0
#: field:missing.erpno.line,description:0
#: field:project.task.line,description:0
#: field:pur.req.line,description:0
#: field:purchase.order,description:0
msgid "Description"
msgstr "工程描述"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Update BOM"
msgstr "Update BOM"

#. module: metro_mrp_drawing
#: help:drawing.order,produced_type_qty:0
msgid "ASM – Assemblies"
msgstr "ASM – Assemblies"

#. module: metro_mrp_drawing
#: report:pr.mfg.form:0
msgid "QTY TOTAL"
msgstr "QTY TOTAL"

#. module: metro_mrp_drawing
#: field:drawing.order,add_watermark_when_ready:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_add_watermark_when_ready
msgid "Add Watermark when ready?"
msgstr "Add Watermark when ready?"

#. module: metro_mrp_drawing
#: field:drawing.order.line,D_prepare_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_D_prepare_qty
msgid "D P"
msgstr "D P"

#. module: metro_mrp_drawing
#: view:project.task:0
msgid "{\"readonly\":[(\"project_type\",\"=\",\"mfg\")]}"
msgstr "{\"readonly\":[(\"project_type\",\"=\",\"mfg\")]}"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ht_need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ht_need_qty
msgid "Ht N"
msgstr "Ht N"

#. module: metro_mrp_drawing
#: view:confirm.set.pr.line.supplier.wizard:0
#: view:fix.pdf.dxf.corrupt.wizard:0
#: view:force.close.task.wizard:0
#: view:generate.pr.wizard:0
#: view:generate.pr.xls.wizard:0
#: view:link.po.to.pr.wizard:0
#: view:po.send.email.wizard:0
#: view:pr.generate.po.wizard:0
#: view:pr.send.email.wizard:0
#: view:print.pr.mfg.wizard:0
#: view:pur.req.group:0
#: view:set.pr.line.supplier.wizard:0
#: view:task.deadline.wizard:0
#: view:update.do.bom:0
#: view:upload.multi.drawings:0
#: view:upload.multi.dxfs:0
msgid "or"
msgstr "or"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp5
#: field:project.mfgtask.report,emp5:0
msgid "Employee #5"
msgstr "Employee #5"

#. module: metro_mrp_drawing
#: view:force.close.task.wizard:0
msgid "Force Close"
msgstr "Force Close"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_date
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_date_create
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_date
msgid "Date"
msgstr "日期"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "DO #"
msgstr "DO #"

#. module: metro_mrp_drawing
#: view:missing.erpno:0
msgid "Update Bom File"
msgstr "Update Bom File"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,create_uid:0
#: field:drawing.order.line,create_uid:0
#: field:missing.erpno,creator:0
#: view:project.mfgtask.report:0
#: view:warehouse.task.report:0
msgid "Creator"
msgstr "Creator"

#. module: metro_mrp_drawing
#: view:drawing.order.line:0
msgid "PMS + Aluminum"
msgstr "PMS + Aluminum"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_product_product
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_missing_erpno_line_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pr_generate_po_wizard_po_line_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_product_do_line_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move1_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move2_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_move3_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_reserve_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_upload_multi_drawings_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_product_id
msgid "Product"
msgstr "产品"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_emp5_kpi
#: field:project.mfgtask.report,emp5_kpi:0
msgid "Employee #5 KPI"
msgstr "Employee #5 KPI"

#. module: metro_mrp_drawing
#: field:warehouse.task.report.line,part_type:0
msgid "Part Type"
msgstr "Part Type"

#. module: metro_mrp_drawing
#: field:drawing.order.line,Ct_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_Ct_done_qty
msgid "Ct D"
msgstr "Ct D"

#. module: metro_mrp_drawing
#: field:product.do.line,drawing_download:0
#: field:product.do.line,drawing_file2:0
#: field:purchase.order.line,drawing_file:0
#: field:warehouse.task.report.line,drawing_download:0
#: field:warehouse.task.report.line,drawing_file:0
msgid "Drawing PDF"
msgstr "PDF图纸"

#. module: metro_mrp_drawing
#: model:ir.actions.report.xml,name:metro_mrp_drawing.report_pr_mfg_part
msgid "PR MFG Full List"
msgstr "PR MFG Full List"

#. module: metro_mrp_drawing
#: model:email.template,subject:metro_mrp_drawing.email_template_purchase_confirm
msgid "${object.company_id.name} Order (Ref ${object.name or 'n/a' })"
msgstr "${object.company_id.name} 订单 (编号 ${object.name or 'n/a' })"

#. module: metro_mrp_drawing
#: view:drawing.order:0
msgid "Search Drawing Orders"
msgstr "Search 图纸号"

#. module: metro_mrp_drawing
#: field:drawing.order.line,G_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_G_done_qty
msgid "G D"
msgstr "G D"

#. module: metro_mrp_drawing
#: view:pur.req.group:0
msgid "Please note that:\n"
"Requisitions will only be merged if:"
msgstr "Please note that:\n"
"Requisitions will only be merged if:"

#. module: metro_mrp_drawing
#: help:drawing.order,purchoem_type_qty:0
msgid "POEM – Outsourced parts, which require drawings"
msgstr "POEM – Outsourced parts, which require drawings"

#. module: metro_mrp_drawing
#: field:drawing.order.line,W_done_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_line_W_done_qty
msgid "W D"
msgstr "W D"

#. module: metro_mrp_drawing
#: model:ir.model,name:metro_mrp_drawing.model_pur_req_line
msgid "Purchase Requisition Line"
msgstr "采购申请明细"

#. module: metro_mrp_drawing
#: report:task.group.by_assignee_full:0
#: report:task.group.by_employee_full:0
#: report:task.group.by_team_full:0
msgid "MFG ID 产品ID号:"
msgstr "MFG ID 产品ID号:"

#. module: metro_mrp_drawing
#: view:task.partial.transfer.wizard:0
msgid "Warehouse Partial Transfer Wizard"
msgstr "Warehouse Partial Transfer Wizard"

#. module: metro_mrp_drawing
#: view:project.task.completion:0
msgid "Search Task Completion"
msgstr "Search Task Completion"

#. module: metro_mrp_drawing
#: view:project.mfgtask.report:0
msgid "Search Project Mfg Task Report"
msgstr "Search Project Mfg Task Report"

#. module: metro_mrp_drawing
#: field:warehouse.task.report.line,qty_in:0
msgid "Incoming"
msgstr "将来料数"

#. module: metro_mrp_drawing
#: selection:project.task.line,state:0
msgid "Created"
msgstr "Created"

#. module: metro_mrp_drawing
#: view:pr.generate.po.wizard:0
msgid "Generate and view PO"
msgstr "Generate and view PO"

#. module: metro_mrp_drawing
#: view:pur.req:0
msgid "Update Inv Qty"
msgstr "Update Inv Qty"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,order_lines:0
#: view:drawing.order.line:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_order_lines
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_drawing_order_lines
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_work_order_cnc_drawing_order_lines
#: view:mrp.production:0
#: view:project.task:0
#: field:project.task,drawing_order_lines:0
#: view:work.order.cnc:0
#: field:work.order.cnc,drawing_order_lines:0
msgid "Drawing Order Lines"
msgstr "Drawing Order Lines"

#. module: metro_mrp_drawing
#: view:drawing.order:0
#: field:drawing.order,product_id:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_product_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_mrp_production_workcenter_line_big_subassembly_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_big_subassembly_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_big_subassembly_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_bigsubassembly_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_purchase_order_bigsubassembly_id
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_big_subassembly_id
#: view:mo.select.do.wizard:0
#: field:mrp.production.workcenter.line,big_subassembly_id:0
#: field:project.task,big_subassembly_id:0
#: field:project.task.completion,big_subassembly_id:0
#: view:pur.req:0
#: field:pur.req,bigsubassembly_id:0
#: field:purchase.order,bigsubassembly_id:0
#: field:warehouse.task.report,big_subassembly_id:0
msgid "Big Sub Assembly"
msgstr "部件总成"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_completion_line_sequence
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_sequence
msgid "Sequence"
msgstr "序号"

#. module: metro_mrp_drawing
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_pur_req_line_price
#: field:pur.req.line,price:0
msgid "Price"
msgstr "价格"

#. module: metro_mrp_drawing
#: field:drawing.order,need_qty:0
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_drawing_order_need_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_mfgtask_report_line_need_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_project_task_line_need_qty
#: model:ir.model.fields,field_description:metro_mrp_drawing.field_warehouse_task_report_line_need_qty
#: field:project.mfgtask.report.line,need_qty:0
#: field:project.task.line,need_qty:0
#: field:warehouse.task.report.line,need_qty:0
msgid "Need Qty"
msgstr "此单所需"

#. module: metro_mrp_drawing
#: field:drawing.order.line,quantity:0
#: field:pr.generate.po.wizard.po.line,quantity:0
#: field:pur.req.move1,quantity:0
#: field:pur.req.move2,quantity:0
#: field:pur.req.move3,quantity:0
msgid "Quantity"
msgstr "Quantity"

#. module: metro_mrp_drawing
#: view:force.close.task.wizard:0
#: model:ir.model,name:metro_mrp_drawing.model_force_close_task_wizard
msgid "Force Close Task Wizard"
msgstr "Force Close Task Wizard"

